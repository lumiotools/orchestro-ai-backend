{"docstore/data":{"0ac2fc43-bffa-4b53-b0a4-6cef636a9070":{"__data__":"{\"id_\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{},\"text\":\"Introduction – SimpliRoute API Reference\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nDevelopers\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nBack to SimpliRoute\\nHelp Center\\nLog InSign Up\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n          NAV\\n            \\n\\n\\n\\n\\n\\nshell\\njava\\njavascript\\n\\n\\n\\n\\n\\n\\n\\n\\nIntroduction\\n\\n\\nAuthentication\\n\\n\\nVisits\\n\\n\\nThe Visit Object\\n\\n\\nThe Property Object\\n\\n\\nThe Items Object\\n\\n\\nCreate a visit with items\\n\\n\\nRetrieve a visit\\n\\n\\nAdding items to a visit\\n\\n\\nDelete a visit\\n\\n\\nDelete visit masive\\n\\n\\nUpdate a visit\\n\\n\\nVisit detail\\n\\n\\nObtain details of the visit\\n\\n\\nAPI validation of time windows - visits\\n\\n\\nCheckout a visit\\n\\n\\n\\n\\nPlans management\\n\\n\\nCreate Plan\\n\\n\\nImportant considerations\\n\\n\\n\\n\\nRoutes\\n\\n\\nCreate routes\\n\\n\\nList of Vehicles with routes for a date\\n\\n\\nList of Visits by Route\\n\\n\\nUpdate reference field by Route\\n\\n\\n\\n\\nRoute Properties\\n\\n\\nGet Route Properties\\n\\n\\nCreate Route Properties\\n\\n\\nUpdate Route Properties\\n\\n\\nPartial Update Route Properties\\n\\n\\nDelete Route Properties\\n\\n\\nBulk Search Routes Properties\\n\\n\\n\\n\\nVehicles\\n\\n\\nCreate vehicles\\n\\n\\nList Vehicle\\n\\n\\nDelete vechicle\\n\\n\\n\\n\\nCustomers\\n\\n\\nCreate Customers\\n\\n\\nObtain Customers\\n\\n\\nDelete a Customer\\n\\n\\nDelete Customers\\n\\n\\nUpdate Customers\\n\\n\\nClient Custom Properties\\n\\n\\nCreate custom property\\n\\n\\nUsing Custom Properties\\n\\n\\nForceField\\n\\n\\n\\n\\nUsers\\n\\n\\nList users\\n\\n\\nGet a determine user\\n\\n\\nUpdate user\\n\\n\\nDelete user\\n\\n\\n\\n\\nSkills\\n\\n\\nWebhooks\\n\\n\\nHow to work with SimpliRoute's webhooks\\n\\n\\nWhich events can be notified\\n\\n\\nConfiguring your Webhooks settings\\n\\n\\nCreate Webhook\\n\\n\\nList Webhooks\\n\\n\\nUpdate Webhooks\\n\\n\\nDelete Webhooks\\n\\n\\nWebhook Plan creation\\n\\n\\nWebhook Plan edition\\n\\n\\nPlan Object\\n\\n\\nRoute Object\\n\\n\\nVisit Object\\n\\n\\nWebhook Route creation\\n\\n\\nWebhook Route edition\\n\\n\\nWebhook Route started\\n\\n\\nWebhook Route Finish\\n\\n\\nWebhook  On it`s way\\n\\n\\nWebhook Checkout\\n\\n\\nWebhook Checkout detailed\\n\\n\\n\\n\\nOptimization\\n\\n\\nOptimization Instance\\n\\n\\nVehicles\\n\\n\\nDeliveries\\n\\n\\nOptimization options\\n\\n\\nExample - Multiple depots\\n\\n\\nBackhaul Optimization (Routes with picks and drop offs)\\n\\n\\nStop Routing\\n\\n\\nPick-up and Delivery\\n\\n\\nRest Time (Routes with a break time)\\n\\n\\nIncremental Routing (Vehicles with previously created routes)\\n\\n\\nLong Routes\\n\\n\\nRadial Routing\\n\\n\\nEstimated Time Calculation\\n\\n\\n\\n\\nOptimization: Metadata\\n\\n\\nDistance\\n\\n\\n\\n\\nValidate Incompatibilities\\n\\n\\nExample\\n\\n\\nList of Codes\\n\\n\\n\\n\\nInvoices\\n\\n\\nInvoice\\n\\n\\nInvoiceItem\\n\\n\\nDeliveryIssue\\n\\n\\nProducts and ProductCategory\\n\\n\\n\\n\\nThe Checkout Process\\n\\n\\n1. Start the route\\n\\n\\n2. Checkout a visit\\n\\n\\n3. Store extra-field-values\\n\\n\\n4. Store pictures\\n\\n\\n5. Trigger notifications\\n\\n\\n\\n\\nTMS: Transportation provider\\n\\n\\nCreation Request\\n\\n\\nList Request\\n\\n\\nRetrieve resource Request\\n\\n\\nUpdate Request\\n\\n\\nDelete Request\\n\\n\\nAssign Transportation Provider to Vehicle with Transportation Provider Request\\n\\n\\n\\n\\nGPS Integration\\n\\n\\nFrequency for sending data\\n\\n\\nLoss of signal and sending of stored local data\\n\\n\\nIntegration of GPS and variable data with SimpliRoute\\n\\n\\nPayload details\\n\\n\\nTemperature object\\n\\n\\nAlert Object\\n\\n\\nAlerts\\n\\n\\nAvailable alerts\\n\\n\\nFrequency for sending data\\n\\n\\nLoss of signal and sending of stored local data\\n\\n\\n\\n\\nErrors\\n\\n\\nDatamart\\n\\n\\nHow does pagination work?\\n\\n\\nWhat data is available in Datamart?\\n\\n\\nWhat filtering and sorting options does Datamart offer?\\n\\n\\n\\n\\n\\nSign Up for a Developer Key\\n 2022 - SimpliRoute\\n\\n\\n\\n\\n\\n\\n\\n\\nIntroduction\\n\\nAPI Endpoint:\\n\\nURL: https://api.simpliroute.com/v1/\\nURL: https://api.simpliroute.com/v1/\\nURL: https://api.simpliroute.com/v1/\\n\\nThe SimpliRoute API is a set of REST endpoints. Our API has predictable, resource-oriented URLs, and uses HTTP response codes to indicate API errors. We use built-in HTTP features, like HTTP authentication and HTTP verbs, which are understood by off-the-shelf HTTP clients. We support cross-origin resource sharing, allowing you to interact securely with our API from a client-side web application (though you should never expose your secret API key in any public website's client-side code). JSON is returned by all API responses, included error logs.\\nThe main objective of this docs to allow any developer to start working with our API thanks to different examples and use-cases exposed in this documentation. There are 2 basic use-cases to be working with our API:\\n\\nYou (or your company) are a SimpliRoute web platform and want to send information from your system to SimpliRoute or vice-versa. If that is the case, you'll be mostly interested in our Visit endpoints\\nYou are developer and you are interested in improve our system adding route intelligence. If that is the case, our Route Optimization API is the right path to follow.\\n\\nIf you have feedback, error or out-dated info, feel free to contact us at contact@simpliroute.com.\\nAuthentication\\nBasic endpoint to show how to make a call with the Authorization Token\\n\\nBasic endpoint to show how to make a call with the Authorization Token\\n\\nvar settings = {\\n    async: true,\\n    crossDomain: true,\\n    url: \\\"https://api.simpliroute.com/v1/accounts/me/\\\",\\n    method: \\\"GET\\\",\\n    headers: {\\n        \\\"content-type\\\": \\\"application/json\\\",\\n        authorization: \\\"Token 12345678900987sr\\\",\\n    },\\n};\\n$.ajax(settings).done(function (response) {\\n    console.log(response);\\n});\\nOkHttpClient client = new OkHttpClient();\\n\\nRequest request = new Request.Builder()\\n  .url(\\\"https://api.simpliroute.com/v1/accounts/me/\\\")\\n  .get()\\n  .addHeader(\\\"content-type\\\", \\\"application/json\\\")\\n  .addHeader(\\\"authorization\\\", \\\"Token 12345678900987sr\\\")\\n  .build();\\n\\nResponse response = client.newCall(request).execute();\\ncurl curl -X GET \\\\\\n  https://api.simpliroute.com/v1/accounts/me/ \\\\\\n  -H 'authorization: Token 12345678900987sr' \\\\\\n  -H 'content-type: application/json' \\\\\\n\\n\\nMake sure to replace 12345678900987sr with your API key.\\n\\nTo use SimpliRoute API, you have to provide a valid Token through the header \\\"Authorization\\\". If you don't have a Token, you can get it from your account in the url: https://app2.simpliroute.com/#/uprofile/info.\\nIf you don't have an account, you can create a 14-days free trial in this URL: https://app2.simpliroute.com/#/signup.\\nAll the examples in the documentation will use a fake API token (12345678900987sr), be sure to replace it with the right value when you put your code in a production system.\\n\\nVisits\\nIf you want to integrate your system with SimpliRoute, the most relevant endpoint in our API is Visit. A visit object is anything that a driver has to do in the street: a service order, a delivery, a pickup. Then, if you want to optimize those orders and track then in SimpliRoute, you have to create a visit object. \\nIn this particular object, you have to specify a few simple things, these are the only mandatory fields to create a visit in Simpliroute.\\n\\nTitle\\nAddress\\nPlanned Date\\n\\nThat is the basic information that a visit must contain to be accepted in the API. As all the endpoints in SimpliRoute API, it implements GET, POST, PUT and DELETE http methods.\\nThe Visit Object\\n\\nVisit Object example\\n\\n{\\n    \\\"id\\\": 200189436,\\n    \\\"order\\\": null,\\n    \\\"tracking_id\\\": \\\"SR98278668985242\\\",\\n    \\\"status\\\": \\\"pending\\\",\\n    \\\"title\\\": \\\"SimpliRoute3\\\",\\n    \\\"address\\\": \\\"vespucio norte 22, las condes\\\",\\n    \\\"latitude\\\": \\\"-33.413433\\\",\\n    \\\"longitude\\\": \\\"-70.585503\\\",\\n    \\\"load\\\": 39.0,\\n    \\\"load_2\\\": 100.0,\\n    \\\"load_3\\\": 0.0,\\n    \\\"window_start\\\": null,\\n    \\\"window_end\\\": null,\\n    \\\"window_start_2\\\": null,\\n    \\\"window_end_2\\\": null,\\n    \\\"duration\\\": \\\"00:00:10\\\",\\n    \\\"contact_name\\\": \\\"\\\",\\n    \\\"contact_phone\\\": \\\"\\\",\\n    \\\"contact_email\\\": null,\\n    \\\"reference\\\": \\\"\\\",\\n    \\\"notes\\\": \\\"\\\",\\n    \\\"skills_required\\\": [],\\n    \\\"skills_optional\\\": [],\\n    \\\"tags\\\": [],\\n    \\\"planned_date\\\": \\\"2016-06-30\\\",\\n    \\\"programmed_date\\\": null,\\n    \\\"route\\\": null,\\n    \\\"estimated_time_arrival\\\": null,\\n    \\\"estimated_time_departure\\\": null,\\n    \\\"checkin_time\\\": null,\\n    \\\"checkout_time\\\": null,\\n    \\\"checkout_latitude\\\": null,\\n    \\\"checkout_longitude\\\": null,\\n    \\\"checkout_comment\\\": \\\"\\\",\\n    \\\"checkout_observation\\\": null,\\n    \\\"signature\\\": null,\\n    \\\"pictures\\\": [],\\n    \\\"created\\\": \\\"2022-09-03T01:19:42.786633Z\\\",\\n    \\\"modified\\\": \\\"2022-09-03T01:19:42.786633Z\\\",\\n    \\\"eta_predicted\\\": \\\"2016-06-30T00:00:00-04:00\\\",\\n    \\\"eta_current\\\": \\\"2016-06-30T00:00:00-04:00\\\",\\n    \\\"priority\\\": false,\\n    \\\"has_alert\\\": false,\\n    \\\"priority_level\\\": null,\\n    \\\"extra_field_values\\\": null,\\n    \\\"geocode_alert\\\": null,\\n    \\\"visit_type\\\": null,\\n    \\\"current_eta\\\": null,\\n    \\\"fleet\\\": null,\\n    \\\"properties\\\": {\\n      \\\"city\\\": \\\"Santiago\\\"\\n    },\\n    \\\"items\\\": [\\n        {\\n            \\\"id\\\": 221544,\\n            \\\"title\\\": \\\"bar\\\",\\n            \\\"status\\\": \\\"pending\\\",\\n            \\\"load\\\": 2.0,\\n            \\\"load_2\\\": 1.5,\\n            \\\"load_3\\\": 0.0,\\n            \\\"reference\\\": \\\"bar\\\",\\n            \\\"visit\\\": 200189436,\\n            \\\"notes\\\": \\\"\\\",\\n            \\\"quantity_planned\\\": 2.0,\\n            \\\"quantity_delivered\\\": 0.0\\n        },\\n        {\\n            \\\"id\\\": 221543,\\n            \\\"title\\\": \\\"foo\\\",\\n            \\\"status\\\": \\\"pending\\\",\\n            \\\"load\\\": 15.0,\\n            \\\"load_2\\\": 0.0,\\n            \\\"load_3\\\": 0.5,\\n            \\\"reference\\\": \\\"foo\\\",\\n            \\\"visit\\\": 200189436,\\n            \\\"notes\\\": \\\"\\\",\\n            \\\"quantity_planned\\\": 1.0,\\n            \\\"quantity_delivered\\\": 0.0\\n        }\\n    ],\\n    \\\"on_its_way\\\": null\\n}\\n\\n\\n\\nAttributes\\nData Type\\nDescription\\n\\n\\n\\nid\\nuuid\\nUnique identifier for the object.\\n\\n\\norder\\nInteger\\nVisit order when the visit already belongs to a delivery route\\n\\n\\ntracking_id\\nString\\nAutogenerated tracking code to follow the delivery\\n\\n\\nstatus\\nString\\nVisit's status (pending, completed, failed)\\n\\n\\ntitle\\nString\\nString to identify the delivery. Usually company or person's name\\n\\n\\naddress\\nString\\nAddress text. Best practice is to use Googlemaps format.\\n\\n\\nplanned_date\\nDate\\nDate when the visit will be delivered\\n\\n\\nlatitude\\nFloat\\nVisit's latitude location\\n\\n\\nlongitude\\nFloat\\nVisit's longitude location\\n\\n\\nload\\nDouble\\nSpace of the truck that visit uses.\\n\\n\\nload_2\\nDouble\\nSpace of the truck that visit uses.\\n\\n\\nload_3\\nDouble\\nSpace of the truck that visit uses.\\n\\n\\nwindow_start\\nTime\\nInitial Hour when the visit can be visit\\n\\n\\nwindow_end\\nTime\\nFinal Hour when the visit can be visit\\n\\n\\nwindow_start_2\\nTime\\nInitial Hour when the visit can be visit\\n\\n\\nwindow_end_2\\nTime\\nFinal Hour when the visit can be visit\\n\\n\\nduration\\nTimestamp\\nTime spent in the delivery (HH:mm:ss)\\n\\n\\ncontact_name\\nString\\nName of who will receive the delivery\\n\\n\\ncontact_phone\\nString\\nPhone of who will receive the delivery\\n\\n\\ncontact_email\\nString\\nE-mail of who will receive the delivery\\n\\n\\nreference\\nString\\nReference or internal identifier of the company. Example: Invoice or order number.\\n\\n\\nnotes\\nString\\nInformation to help the driver\\n\\n\\nskills_required\\nInteger array\\nArray of required skills id that this visit needs\\n\\n\\nskills_optional\\nInteger array\\nArray of optional skills id that this visit needs\\n\\n\\nTags\\nInteger array\\nArray of tag IDs that characterize the visit.\\n\\n\\nroute*\\nUUID\\nUnique identifier of the route.YYYY-MM-DD\\n\\n\\nroute_estimated_time_start*\\nTime\\nEstimated time that the vehicle will start the route in \\\"HH:mm:ss\\\"\\n\\n\\nestimated_time_arrival\\nTime\\nSimpliRoute estimation of arrival to the visit.\\n\\n\\nestimated_time_departure\\nTime\\nSimpliRoute estimation of departure from visit.\\n\\n\\ncheckin_time\\nTimestamp\\nTimestamp when the driver started the delivery.\\n\\n\\ncheckout_time\\nTimestamp\\nTimestamp when the driver completed the delivery.\\n\\n\\ncheckout_latitude\\nFloat\\nLatitude of the driver when he completed the delivery\\n\\n\\ncheckout_longitude\\nFloat\\nLongitude of the driver when he completed the delivery\\n\\n\\ncheckout_comment*\\nString\\nInformation provided by the driver when she was completing the delivery\\n\\n\\ncheckout_observation*\\nUUID\\nUnique identifier of the observation.\\n\\n\\nsignature*\\nString\\nContains the URL with the image of the client's signature..\\n\\n\\npictures\\nURL array\\nArray with URLs of pictures added with the delivery.\\n\\n\\ncreated*\\nTimestamp\\nTimestamp of the creation of the visit.\\n\\n\\nmodified*\\nTimestamp\\nTimestamp of the last edition of the visit.\\n\\n\\ndriver*\\nInteger\\nDriver ID\\n\\n\\nvehicle*\\nInteger\\nVehicle ID.\\n\\n\\nhas alert*\\nBoolean\\nContains a boolean value to identify an alert...\\n\\n\\npriority_level\\nInteger\\nIf the visit is more important than others. It goes from 1 to 5. 1: First of the day, 2: Last of the day. 3: High priority, 4: Medium priority, 5: Low priority.\\n\\n\\nextra_field_values\\nString\\njson object containing attributes and values ​​pre-configured by SimpliRoute.\\n\\n\\ngeocode_alert*\\nString\\nGeocoding alert.\\n\\n\\nvisit_type*\\nString\\nContains the URL with the image of the client's signature..\\n\\n\\nfleet\\nInteger\\nFleet ID.\\n\\n\\nitems\\nArray Object\\nArrangement containing the elements to deliver on the visit.\\n\\n\\non its way\\nBoolean\\n\\n\\n\\nproperties\\nObject\\nExtra properties of a visit\\n\\n\\nThe Property Object\\n\\n\\nAttributes\\nData Type\\nDescription\\n\\n\\n\\ncity\\nString\\nThe city of the visit address\\n\\n\\ndelivery_type\\nString\\nSpecifies the delivery type: DELIVERY or PICK\\n\\n\\nsource\\nString\\nThe source of the data to be saved: CLIENT\\n\\n\\nsource_ident\\nString\\nAn identifier used to reference the source, e.g., client ID\\n\\n\\nmerchant\\nString\\nThe merchant associated with the data\\n\\n\\nThe Items Object\\nThe items object is presented, where you can manage quantities of items for each visit, as well as their partial delivery. To do this, they will be able to create visits with item arrangements by establishing up to 3 loads of the item, reference, notes, quantity planned and delivered.\\n\\nItems Object example\\n\\n{\\n        {\\n        \\\"id\\\": 64,\\n        \\\"title\\\": \\\"prueba2\\\",\\n        \\\"status\\\": \\\"pending\\\",\\n        \\\"load\\\": null,\\n        \\\"load_2\\\": null,\\n        \\\"load_3\\\": 5.0,\\n        \\\"reference\\\": \\\"\\\",\\n        \\\"notes\\\": \\\"\\\",\\n        \\\"quantity_planned\\\": 4.0,\\n        \\\"quantity_delivered\\\": 1.0\\n    }\\n}\\n\\n\\n\\nAttributes\\nData Type\\nDescription\\n\\n\\n\\nid\\nuuid\\nUnique identifier for the object.\\n\\n\\ntitle\\nString\\nTitle of the item to deliver.route\\n\\n\\nstatus\\nString\\nElement status: pending, failed, or completed\\n\\n\\nload\\nDouble\\nSpace or load that the element occupies in the vehicle\\n\\n\\nload_2\\nDouble\\nSecond load unit complementary to the first\\n\\n\\nload_3\\nDouble\\nThird load unit complementary to the first and the second\\n\\n\\nreference\\nDate\\nInternal element identifier\\n\\n\\nnotes\\nString\\nAdditional item notes\\n\\n\\nquantity_planned\\nFloat\\nPlanned quantity of the item\\n\\n\\nquantity_delivered\\nFloat\\nDelivered quantity of the item\\n\\n\\nCreate a visit with items\\nYou can create visit adding quantities of items for each visit, these fields are optional.\\n\\nURL Definition\\n\\n\\nPOST https://api.simpliroute.com/v1/routes/visits/\\n\\n\\n\\nExample Request\\n\\ncurl --location --request POST 'https://api.simpliroute.com/v1/routes/visits' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n    \\\"title\\\": \\\"SimpliRoute3\\\",\\n    \\\"address\\\": \\\"vespucio norte 22, las condes\\\",\\n    \\\"load\\\": 39,\\n    \\\"load_2\\\": 100,\\n    \\\"window_start\\\": null,\\n    \\\"window_end\\\": null,\\n    \\\"duration\\\": \\\"00:00:10\\\",\\n    \\\"contact_name\\\": \\\"\\\",\\n    \\\"contact_phone\\\": \\\"\\\",\\n    \\\"reference\\\": \\\"\\\",\\n    \\\"notes\\\": \\\"\\\",\\n    \\\"planned_date\\\": \\\"2016-06-30\\\",\\n    \\\"items\\\": [\\n      {\\n          \\\"title\\\": \\\"foo\\\",\\n          \\\"load\\\": 15,\\n          \\\"load_3\\\": 0.5     ,\\n          \\\"reference\\\": \\\"foo\\\",\\n          \\\"quantity_planned\\\": 1\\n      },\\n      {\\n          \\\"title\\\": \\\"bar\\\",\\n          \\\"load\\\": 2,\\n          \\\"load_2\\\": 1.5,\\n          \\\"reference\\\": \\\"bar\\\",\\n          \\\"quantity_planned\\\": 2\\n      }\\n  ]\\n}'\\n\\n\\nOkHttpClient client = new OkHttpClient();\\n\\nMediaType mediaType = MediaType.parse(\\\"application/json\\\");\\nRequestBody body = RequestBody.create(mediaType, \\\"{\\\\n  \\\\\\\"title\\\\\\\": \\\\\\\"Kwik e mart\\\\\\\",\\\\n  \\\\\\\"address\\\\\\\": \\\\\\\"742 Evergreen Terrace, Springfield, USA\\\\\\\",\\\\n  \\\\\\\"latitude\\\\\\\": 44.052698,\\\\n  \\\\\\\"longitude\\\\\\\": -123.020718,\\\\n  \\\\\\\"contact_name\\\\\\\": \\\\\\\"Apu Nahasapeemapetilon\\\\\\\",\\\\n  \\\\\\\"contact_phone\\\\\\\": \\\\\\\"+123413123212\\\\\\\",\\\\n  \\\\\\\"contact_email\\\\\\\": \\\\\\\"apu@example.com\\\\\\\",\\\\n  \\\\\\\"reference\\\\\\\": \\\\\\\"invoice_id\\\\\\\",\\\\n  \\\\\\\"notes\\\\\\\": \\\\\\\"Leave at front door\\\\\\\",\\\\n  \\\\\\\"planned_date\\\\\\\": \\\\\\\"2020-01-01\\\\\\\"\\\\n}\\\");\\nRequest request = new Request.Builder()\\n  .url(\\\"https://api.simpliroute.com/v1/routes/visits/\\\")\\n  .post(body)\\n  .addHeader(\\\"content-type\\\", \\\"application/json\\\")\\n  .addHeader(\\\"authorization\\\", \\\"Token 12345678900987sr\\\")\\n  .build();\\n\\nResponse response = client.newCall(request).execute();\\nvar settings = {\\n    async: true,\\n    crossDomain: true,\\n    url: \\\"https://api.simpliroute.com/v1/routes/visits/\\\",\\n    method: \\\"POST\\\",\\n    headers: {\\n        \\\"content-type\\\": \\\"application/json\\\",\\n        authorization: \\\"Token 12345678900987sr\\\",\\n    },\\n    processData: false,\\n    data: '{\\\\n  \\\"title\\\": \\\"Kwik e mart\\\",\\\\n  \\\"address\\\": \\\"742 Evergreen Terrace, Springfield, USA\\\",\\\\n  \\\"latitude\\\": 44.052698,\\\\n  \\\"longitude\\\": -123.020718,\\\\n  \\\"contact_name\\\": \\\"Apu Nahasapeemapetilon\\\",\\\\n  \\\"contact_phone\\\": \\\"+123413123212\\\",\\\\n  \\\"contact_email\\\": \\\"apu@example.com\\\",\\\\n  \\\"reference\\\": \\\"invoice_id\\\",\\\\n  \\\"notes\\\": \\\"Leave at front door\\\",\\\\n  \\\"planned_date\\\": \\\"2020-01-01\\\"\\\\n}',\\n};\\n\\n$.ajax(settings).done(function (response) {\\n    console.log(response);\\n});\\n\\nTo create a visit, the bare minimum information is a title, address and a planned_date. The other parameters in the visit object are optional and you'll need them depending of your implementation.\\nYou can create visits one by one or as an array. The examples in the right side only shows one visit creation per request but if you need to create a batch of visit, the input will be something like this:\\n\\nExample Request\\n\\n\\n[ \\n    {\\n    \\\"title\\\": \\\"SimpliRoute3\\\",\\n    \\\"address\\\": \\\"vespucio norte 22, las condes\\\",\\n    \\\"load\\\": 39,\\n    \\\"load_2\\\": 100,\\n    \\\"window_start\\\": null,\\n    \\\"window_end\\\": null,\\n    \\\"duration\\\": \\\"00:00:10\\\",\\n    \\\"contact_name\\\": \\\"\\\",\\n    \\\"contact_phone\\\": \\\"\\\",\\n    \\\"reference\\\": \\\"\\\",\\n    \\\"notes\\\": \\\"\\\",\\n    \\\"planned_date\\\": \\\"2016-06-30\\\",\\n    \\\"items\\\":\\n    [\\n        {\\n            \\\"title\\\": \\\"foo\\\",\\n            \\\"load\\\": 15,\\n            \\\"load_3\\\": 0.5     ,\\n            \\\"reference\\\": \\\"foo\\\",\\n            \\\"quantity_planned\\\": 1\\n        },\\n        {\\n            \\\"title\\\": \\\"bar\\\",\\n            \\\"load\\\": 2,\\n            \\\"load_2\\\": 1.5,\\n            \\\"reference\\\": \\\"bar\\\",\\n            \\\"quantity_planned\\\": 2\\n            }\\n        ]\\n    }\\n    ]\\n\\nReturns\\nReturns the visit object if the creation succeeded. This call will return an error if some of parameters are invalid.\\nRetrieve a visit\\n\\nURL Definition\\n\\n\\nGET https://api.simpliroute.com/v1/routes/visits/{{visit_id}}\\n\\n\\n\\nExample Request\\nUsing as '12345' as example for visit_id\\n\\ncurl -X GET \\\\\\n  https://api.simpliroute.com/v1/routes/visits/{{visit_id}}\\\\\\n  -H 'authorization: Token 12345678900987sr' \\\\\\n  -H 'content-type: application/json' \\\\\\nOkHttpClient client = new OkHttpClient();\\n\\nRequest request = new Request.Builder()\\n  .url(\\\"https://api.simpliroute.com/v1/routes/visits/12345\\\")\\n  .get()\\n  .addHeader(\\\"content-type\\\", \\\"application/json\\\")\\n  .addHeader(\\\"authorization\\\", \\\"Token 12345678900987sr\\\")\\n  .build();\\n\\nResponse response = client.newCall(request).execute();\\nvar settings = {\\n    async: true,\\n    crossDomain: true,\\n    url: \\\"https://api.simpliroute.com/v1/routes/visits/12345\\\",\\n    method: \\\"GET\\\",\\n    headers: {\\n        \\\"content-type\\\": \\\"application/json\\\",\\n        authorization: \\\"Token 12345678900987sr\\\",\\n    },\\n};\\n\\n$.ajax(settings).done(function (response) {\\n    console.log(response);\\n});\\n\\n\\nExample Response\\n\\n[\\n    {\\n        \\\"id\\\": 199285905,\\n        \\\"order\\\": null,\\n        \\\"tracking_id\\\": \\\"SR17562640764438\\\",\\n        \\\"status\\\": \\\"pending\\\",\\n        \\\"title\\\": \\\"SimpliRoute3\\\",\\n        \\\"address\\\": \\\"vespucio norte 22, las condes\\\",\\n        \\\"latitude\\\": \\\"-33.413433\\\",\\n        \\\"longitude\\\": \\\"-70.585503\\\",\\n        \\\"load\\\": 39.0,\\n        \\\"load_2\\\": 100.0,\\n        \\\"load_3\\\": 0.0,\\n        \\\"window_start\\\": null,\\n        \\\"window_end\\\": null,\\n        \\\"window_start_2\\\": null,\\n        \\\"window_end_2\\\": null,\\n        \\\"duration\\\": \\\"00:00:10\\\",\\n        \\\"contact_name\\\": \\\"\\\",\\n        \\\"contact_phone\\\": \\\"\\\",\\n        \\\"contact_email\\\": null,\\n        \\\"reference\\\": \\\"\\\",\\n        \\\"notes\\\": \\\"\\\",\\n        \\\"skills_required\\\": [],\\n        \\\"skills_optional\\\": [],\\n        \\\"tags\\\": [],\\n        \\\"planned_date\\\": \\\"2016-06-30\\\",\\n        \\\"programmed_date\\\": null,\\n        \\\"route\\\": null,\\n        \\\"estimated_time_arrival\\\": null,\\n        \\\"estimated_time_departure\\\": null,\\n        \\\"checkin_time\\\": null,\\n        \\\"checkout_time\\\": null,\\n        \\\"checkout_latitude\\\": null,\\n        \\\"checkout_longitude\\\": null,\\n        \\\"checkout_comment\\\": \\\"\\\",\\n        \\\"checkout_observation\\\": null,\\n        \\\"signature\\\": null,\\n        \\\"pictures\\\": [],\\n        \\\"created\\\": \\\"2022-08-31T17:32:55.626342Z\\\",\\n        \\\"modified\\\": \\\"2022-08-31T17:32:55.626342Z\\\",\\n        \\\"eta_predicted\\\": \\\"2016-06-30T00:00:00-04:00\\\",\\n        \\\"eta_current\\\": \\\"2016-06-30T00:00:00-04:00\\\",\\n        \\\"priority\\\": false,\\n        \\\"has_alert\\\": false,\\n        \\\"priority_level\\\": null,\\n        \\\"extra_field_values\\\": null,\\n        \\\"geocode_alert\\\": null,\\n        \\\"visit_type\\\": null,\\n        \\\"current_eta\\\": null,\\n        \\\"fleet\\\": null,\\n        \\\"items\\\": [\\n            {\\n                \\\"id\\\": 211775,\\n                \\\"title\\\": \\\"bar\\\",\\n                \\\"status\\\": \\\"pending\\\",\\n                \\\"load\\\": 2.0,\\n                \\\"load_2\\\": 1.5,\\n                \\\"load_3\\\": 0.0,\\n                \\\"reference\\\": \\\"bar\\\",\\n                \\\"visit\\\": 199285905,\\n                \\\"notes\\\": \\\"\\\",\\n                \\\"quantity_planned\\\": 2.0,\\n                \\\"quantity_delivered\\\": 0.0\\n            },\\n            {\\n                \\\"id\\\": 211774,\\n                \\\"title\\\": \\\"foo\\\",\\n                \\\"status\\\": \\\"pending\\\",\\n                \\\"load\\\": 15.0,\\n                \\\"load_2\\\": 0.0,\\n                \\\"load_3\\\": 0.5,\\n                \\\"reference\\\": \\\"foo\\\",\\n                \\\"visit\\\": 199285905,\\n                \\\"notes\\\": \\\"\\\",\\n                \\\"quantity_planned\\\": 1.0,\\n                \\\"quantity_delivered\\\": 0.0\\n            }\\n        ],\\n        \\\"on_its_way\\\": null\\n    }\\n]\\n\\nRetrieves the details of an existing visit. Send the unique visit id and SimpliRoute API will return the corresponding visiti information.\\nAdding items to a visit\\nBy means of the following endpoint, one or more items can be added to a certain visit, for this we must have the visit id, which must be entered as part of the structure in the url.\\n\\nDefinition\\n\\n\\nPOST https://api.simpliroute.com/v1/routes/visits/{{VISIT_ID}}/items\\n\\n\\nExample JSON\\n\\n[\\n    {\\n        \\\"id\\\": 63,\\n        \\\"title\\\": \\\"prueba1\\\",\\n        \\\"status\\\": \\\"pending\\\",\\n        \\\"load\\\": null,\\n        \\\"load_2\\\": null,\\n        \\\"load_3\\\": 5.0,\\n        \\\"reference\\\": \\\"\\\",\\n        \\\"notes\\\": \\\"\\\",\\n        \\\"quantity_planned\\\": 4.0,\\n        \\\"quantity_delivered\\\": 1.0\\n    },\\n    {\\n        \\\"id\\\": 64,\\n        \\\"title\\\": \\\"prueba2\\\",\\n        \\\"status\\\": \\\"pending\\\",\\n        \\\"load\\\": null,\\n        \\\"load_2\\\": null,\\n        \\\"load_3\\\": 5.0,\\n        \\\"reference\\\": \\\"\\\",\\n        \\\"notes\\\": \\\"\\\",\\n        \\\"quantity_planned\\\": 4.0,\\n        \\\"quantity_delivered\\\": 1.0\\n    }\\n]\\nDelete a visit\\nTo delete a visit, a DELETE call must be made to the SimpliRoute visits service. This is done in the following way:\\n\\nDefinition\\n\\n\\nDELETE  https://api.simpliroute.com/v1/routes/visits/{{VISIT_ID}}/\\n\\n\\nSomething important is that the elimination of a visit in an already built route does NOT trigger a recalculation of the arrival times of the following points of the route. The only way to do this currently is via the SimpliRoute web interface or manually update the ETAs for each visit with an external calculation.\\nDelete visit masive\\nTo eliminate multiple visits, a POST type call must be made to the SimpliRoute bulk service. This is done in the following way:\\n\\nDefinition\\n\\n\\nPOST https://api.simpliroute.com/v1/bulk/delete/visits/\\n\\n\\n\\nExample Request body\\n``` json\\n{\\nvisits: [000000, 000001...]\\n}\\n\\nThe visits array must have the id of the visits that you want to delete.\\n\\n## Retrieve visits by date\\n\\n> Definition\\n\\n```url\\n\\nGET https://api.simpliroute.com/v1/routes/visits/?planned_date={{planned_date}}\\n\\n\\n\\nExample Request\\n\\ncurl -X GET \\\\\\n  'https://api.simpliroute.com/v1/routes/visits/?planned_date=2020-01-01' \\\\\\n  -H 'authorization: Token 12345678900987sr' \\\\\\n  -H 'content-type: application/json'\\n\\nOkHttpClient client = new OkHttpClient();\\n\\nRequest request = new Request.Builder()\\n  .url(\\\"https://api.simpliroute.com/v1/routes/visits/?planned_date=2020-01-01\\\")\\n  .get()\\n  .addHeader(\\\"content-type\\\", \\\"application/json\\\")\\n  .addHeader(\\\"authorization\\\", \\\"Token 12345678900987sr\\\")\\n  .build();\\n\\nResponse response = client.newCall(request).execute();\\nvar settings = {\\n    async: true,\\n    crossDomain: true,\\n    url: \\\"https://api.simpliroute.com/v1/routes/visits/?planned_date=2020-01-01\\\",\\n    method: \\\"GET\\\",\\n    headers: {\\n        \\\"content-type\\\": \\\"application/json\\\",\\n        authorization: \\\"Token 12345678900987sr\\\",\\n    },\\n};\\n\\n$.ajax(settings).done(function (response) {\\n    console.log(response);\\n});\\n\\nGET call to request all the visits for a given date. The expected planned date format is \\\"YYYY-mm-dd\\\" (Year-month-day, 2020-10-22). This is a useful call if you want to track your deliveries in real-time because it returns the whole list of visits and the complete activity of each of them (including checkouts and information provided from the drivers in the street.)\\nUpdate a visit\\n\\nURL Definition\\n\\n\\nPUT https://api.simpliroute.com/v1/routes/visits/{{visit_id}}\\n\\n\\n\\nExample Request\\n\\ncurl -X PUT \\\\\\n  https://api.simpliroute.com/v1/routes/visits/1111/ \\\\\\n  -H 'authorization: Token 12345678900987sr' \\\\\\n  -H 'content-type: application/json' \\\\\\n  -d '{\\n  \\\"title\\\": \\\"Updated visit\\\",\\n  \\\"address\\\": \\\"new address\\\",\\n  \\\"load\\\": 39,\\n  \\\"duration\\\": \\\"00:00:10\\\",\\n  \\\"contact_name\\\": \\\"New visit contact\\\",\\n  \\\"contact_phone\\\": \\\"+12341345\\\",\\n  \\\"notes\\\": \\\"New information\\\",\\n  \\\"planned_date\\\": \\\"2020-06-30\\\"\\n}'\\nOkHttpClient client = new OkHttpClient();\\n\\nMediaType mediaType = MediaType.parse(\\\"application/json\\\");\\nRequestBody body = RequestBody.create(mediaType, \\\"{\\\\n  \\\\\\\"title\\\\\\\": \\\\\\\"Updated visit\\\\\\\",\\\\n \\\\\\\"address\\\\\\\": \\\\\\\"New address\\\\\\\",\\\\n \\\\\\\"load\\\\\\\": 39,\\\\n  \\\\\\\"duration\\\\\\\": \\\\\\\"00:00:10\\\\\\\",\\\\n  \\\\\\\"contact_name\\\\\\\": \\\\\\\"New visit contact\\\\\\\",\\\\n  \\\\\\\"contact_phone\\\\\\\": \\\\\\\"+12341345\\\\\\\",\\\\n  \\\\\\\"notes\\\\\\\": \\\\\\\"New information\\\\\\\",\\\\n  \\\\\\\"planned_date\\\\\\\": \\\\\\\"2020-06-30\\\\\\\"\\\\n}\\\");\\nRequest request = new Request.Builder()\\n  .url(\\\"https://api.simpliroute.com/v1/routes/visits/1111/\\\")\\n  .put(body)\\n  .addHeader(\\\"content-type\\\", \\\"application/json\\\")\\n  .addHeader(\\\"authorization\\\", \\\"Token 12345678900987sr\\\")\\n  .build();\\n\\nResponse response = client.newCall(request).execute();\\nvar settings = {\\n    async: true,\\n    crossDomain: true,\\n    url: \\\"https://api.simpliroute.com/v1/routes/visits/1111/\\\",\\n    method: \\\"PUT\\\",\\n    headers: {\\n        \\\"content-type\\\": \\\"application/json\\\",\\n        authorization: \\\"Token 12345678900987sr\\\",\\n    },\\n    processData: false,\\n    data: '{\\\\n  \\\"title\\\": \\\"Updated visit\\\",\\\\n  \\\"address\\\": \\\"New address\\\",\\\\n \\\"load\\\": 39,\\\\n  \\\"duration\\\": \\\"00:00:10\\\",\\\\n  \\\"contact_name\\\": \\\"New visit contact\\\",\\\\n  \\\"contact_phone\\\": \\\"+12341345\\\",\\\\n  \\\"notes\\\": \\\"New information\\\",\\\\n  \\\"planned_date\\\": \\\"2020-06-30\\\"\\\\n}',\\n};\\n\\n$.ajax(settings).done(function (response) {\\n    console.log(response);\\n});\\n\\nUpdates the specified argument by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\\nVisit detail\\nBy using the following endpoint you can obtain the detail information of a visit\\nGET https://api.simpliroute.com/plans/v1/visits/{{VISIT_ID}}/detail/\\n\\n\\n\\n\\nExample response\\n\\n{\\n\\\"window_start\\\":\\\"09:00:00\\\",\\n\\\"reference\\\":\\\"\\\",\\n\\\"planned_date\\\":\\\"2017-03-13\\\",\\n\\\"time_service\\\":\\\"00:00:03\\\",\\n\\\"window_end\\\":\\\"19:00:00\\\",\\n\\\"checkout_comment\\\":\\\"\\\",\\n\\\"duration\\\":\\\"00:20:00\\\",\\n\\\"estimated_time_arrival\\\":\\\"09:05:00\\\",\\n\\\"id\\\":89273,\\n\\\"checkin_time\\\":\\\"2017-03-13T20:17:08Z\\\",\\n\\\"pictures\\\":[],\\n\\\"window_start_2\\\":\\\"23:59:00\\\",\\n\\\"checkout_observation\\\":\\\"Testing\\\",\\n\\\"latitude\\\":\\\"-33.442880\\\",\\n\\\"status\\\":\\\"completed\\\",\\n\\\"checkout_time\\\":\\\"2017-03-13T20:17:11Z\\\",\\n\\\"window_end_2\\\":\\\"23:59:00\\\",\\n\\\"vehicle_name\\\":\\\"KILASK31\\\",\\n\\\"address\\\":\\\"FANOR VELASCO 85, SANTIAGO, Santiago\\\",\\n\\\"title\\\":\\\"PELUQUERIA DI GIANCARLO\\\",\\n\\\"longitude\\\":\\\"-70.659729\\\",\\n\\\"driver_name\\\":\\\"Paperito\\\",\\n\\\"order\\\":1\\n}\\n\\nThis endpoint provides more information, including Checkout Comment and Images\\nObtain details of the visit\\nBy using the following endpoint you can obtain the detail information of a bulk of visit\\n\\nURL Definition\\n\\nGET https://api.simpliroute.com/v1/routes/visits/{{VISIT_ID}}\\n\\nAPI validation of time windows - visitsCurrent situation\\nWhen creating/editing a visit, the API does not validate the time windows that are reported in it. This causes that there are eventualities in the optimization.\\nThe two problems found are:\\n- It is not validated that the start time is less than the end\\n- Overlapping time windows is not validated when loading both possible time windows for a visit.\\nThis problem appears only through the API integration, since there are validations in both the manual upload and the Excel upload.\\nExpected situation\\nWhen creating a visit that it has a time windows, the same validation that is used today for manual loading must be replicated, which consists of:\\n-  The start time cannot be greater than the end time (Ex: start time 19:00 - end time: 16:00)\\n\\nThe time window does not extend to the next day (Ex: start time 23:00 - end time: 04:00). Although it complies with the aforementioned validation, it is important to clarify that there is no \\\"Night\\\" time window.\\n\\nThe error message that the API will return is: \\n\\nExample \\n\\nTime error: the time window order is inverted. \\n\\nBoth manual and Excel handle the same messages as before.\\n\\nFor the second mentioned problem you need to validate:\\n\\nThat time window 1 is NOT later than time window 2 (Ex: window 1 from 12:00 to 14:00 and window 2 from 08:00 to 10:00).\\nThat there is NO intersection between the two windows (Ex: Window 1 from 12:00 to 14:00 and window 2 from 13:00 to 18:00).\\n\\nThe error message that the API will return is: Time error: the time window order is inverted. Both manual and Excel handle the same messages as before.\\nFor more information, contact your account executive, the support chat or write us an email to support@simpliroute.com.\\nCheckout a visit\\n\\nVisit checkout (minimal payload)\\n\\ncurl --location --request POST 'https://api.simpliroute.com/v1/mobile/visit/<visit_id>/checkout/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n    \\\"status\\\": \\\"completed\\\", \\n    \\\"checkout_time\\\": \\\"2024-04-24 13:24:53\\\", \\n    \\\"checkout_latitude\\\": -12.105513, \\n    \\\"checkout_longitude\\\": -76.965618, \\n    \\\"checkout_comment\\\": \\\"everything was OK\\\" \\n  }'\\n\\nTo check out a visit the following service is available:\\nhttps://api.simpliroute.com/v1/mobile/visit/<visit_id>/checkout/\\nA minimal payload cURL is shown at the right panel 👉\\nIf you plan to implement the same features as our mobile application please check The Checkout process\\n\\n\\nParameter\\ntype\\ndescription\\n\\n\\n\\nstatus\\nstring\\none of the following statuses: pending, completed, failed\\n\\n\\ncheckout_time\\nstring\\ndate and hour of checkout following the  ISO 8601 standard\\n\\n\\ncheckout_latitude\\nfloat\\nlatitude at the point of delivery\\n\\n\\ncheckout_longitude\\nfloat\\nlongitude at the point of delivery\\n\\n\\ncheckout_comment\\nstring\\noptional comment\\n\\n\\nPlans management\\nA plan is a series of Vehicle and Driver pairings for a specific day.\\nPlan is the entity that encompasses a system execution. To avoid problems, it is suggested that plan creation be done with the plan name as a timestamp. The start-end date of the plan, for general cases, is the day of execution of the plan. \\nCreate Plan\\nFirst of all, there are two main objects to consider in a plan:\\n\\nRoutes → The system entity that encompasses a set of visits\\nVisits → Anything that a driver has to do in the street: a service order, a delivery, a pickup\\nAlso, we need to know the id of the driver and vehicle that we are going to route, this can be done with the following endpoints:\\n>URL Definition\\n```url\\n\\nGET Vehicles: https://api.simpliroute.com/v1/routes/vehicles/\\n```\\n\\nURL Definition\\nurl\\nGET Driver: https://api.simpliroute.com/v1/accounts/drivers/\\n\\n\\nWhere we should save the ‘id’ field of each endpoint to use it later on. Once we get those\\nfields, we should be able to create a complete plan using all from above\\n\\nURL Definition\\n\\n\\nPOST https://api.simpliroute.com/v1/plans/create-plan/\\n\\n\\n\\nExample request\\n\\n{\\n  \\\"name\\\": \\\"Plan created through API 2022-09-02 12:55:18\\\",\\n  \\\"start_date\\\": \\\"2022-09-02\\\",\\n  \\\"end_date\\\": \\\"2022-09-02\\\",\\n  \\\"routes\\\": [\\n    {\\n      \\\"driver\\\": \\\"183371\\\",\\n      \\\"vehicle\\\": \\\"288202\\\",\\n      \\\"planned_date\\\": \\\"2022-09-02\\\",\\n      \\\"total_distance\\\": \\\"0\\\",\\n      \\\"total_duration\\\": \\\"00:38:00\\\",\\n      \\\"total_load\\\": 0,\\n      \\\"total_load_percentage\\\": 0,\\n      \\\"total_load_2\\\": 0,\\n      \\\"total_load_2_percentage\\\": 0,\\n      \\\"total_load_3\\\": 0,\\n      \\\"total_load_3_percentage\\\": 0,\\n      \\\"estimated_time_start\\\": \\\"08:00:00\\\",\\n      \\\"estimated_time_end\\\": \\\"08:38:00\\\",\\n      \\\"request_status\\\": \\\"created\\\",\\n      \\\"comment\\\": null,\\n      \\\"location_start_address\\\": \\\"Av. San Borja Sur 486, Cercado de Lima 15036\\\",\\n      \\\"location_start_latitude\\\": -12.101389,\\n      \\\"location_start_longitude\\\": -77.004534,\\n      \\\"location_end_address\\\": \\\"Av. San Borja Sur 486, Cercado de Lima 15036\\\",\\n      \\\"location_end_latitude\\\": -12.101389,\\n      \\\"location_end_longitude\\\": -77.004534,\\n      \\\"visits\\\": [\\n        {\\n          \\\"title\\\": \\\"Order 1234\\\",\\n          \\\"address\\\": \\\"Jirón Vesalio 252, San Borja\\\",\\n          \\\"latitude\\\": -12.105329,\\n          \\\"longitude\\\": -77.005524,\\n          \\\"order\\\": 1,\\n          \\\"load\\\": 1,\\n          \\\"window_start\\\": \\\"09:00:00\\\",\\n          \\\"window_end\\\": \\\"17:00:00\\\",\\n          \\\"duration\\\": \\\"00:10:00\\\",\\n          \\\"contact_name\\\": \\\"David Rosales\\\",\\n          \\\"contact_email\\\": \\\"davidrosales@ejemplo.com, otrocorreo@gmail.com\\\",\\n          \\\"reference\\\": \\\"\\\",\\n          \\\"notes\\\": \\\"Watch out with the dog!\\\",\\n          \\\"planned_date\\\": \\\"2022-09-02\\\",\\n          \\\"estimated_time_arrival\\\": \\\"08:02\\\",\\n          \\\"estimated_time_departure\\\": \\\"08:12\\\",\\n          \\\"request_status\\\": \\\"created\\\"\\n        },\\n        {\\n          \\\"title\\\": \\\"Order 4567\\\",\\n          \\\"address\\\": \\\"Jirón Tasso 423, San Borja\\\",\\n          \\\"latitude\\\": -12.105779,\\n          \\\"longitude\\\": -77.019189,\\n          \\\"order\\\": 2,\\n          \\\"load\\\": 1,\\\"window_start\\\": \\\"09:00:00\\\",\\n          \\\"window_end\\\": \\\"17:00:00\\\",\\n          \\\"duration\\\": \\\"00:10:00\\\",\\n          \\\"contact_name\\\": \\\"David Rosales\\\",\\n          \\\"contact_email\\\": \\\"correo@gmail.com\\\",\\n          \\\"reference\\\": \\\"\\\",\\n          \\\"notes\\\": \\\"Ask for David\\\",\\n          \\\"planned_date\\\": \\\"2022-09-02\\\",\\n          \\\"estimated_time_arrival\\\": \\\"08:20\\\",\\n          \\\"estimated_time_departure\\\": \\\"08:30\\\",\\n          \\\"request_status\\\": \\\"created\\\"\\n        }\\n      ]\\n    }\\n  ]\\n}\\n\\n\\nExample response\\n\\n{\\n\\\"id\\\": \\\"4363095e-8d7c-46d0-9a14-8c895c37fa88\\\",\\n\\\"name\\\": \\\"Plan created through API 2022-09-02 12:55:18\\\",\\n\\\"start_date\\\": \\\"2022-09-02\\\",\\n\\\"end_date\\\": \\\"2022-09-02\\\",\\n\\\"reset_day\\\": 1,\\n\\\"created\\\": \\\"2022-09-02T06:51:24.937690Z\\\",\\n\\\"modified\\\": \\\"2022-09-02T06:51:24.937690Z\\\",\\n\\\"is_cluster\\\": false,\\n\\\"routes\\\": [\\n\\\"349cd8a2-5149-4732-b46f-1073fb90ea07\\\"\\n],\\n\\\"plan_metadata\\\": null,\\n\\\"start_time\\\": null,\\n\\\"end_time\\\": null\\n}\\n> Example request\\n\\n```json\\n{\\n        \\\"name\\\": \\\"Agosto\\\",\\n        \\\"start_date\\\": \\\"2016-08-01\\\",\\n        \\\"end_date\\\": \\\"2016-08-01\\\"\\n    }\\n\\n\\n\\nExample response\\n\\n[{\\n        \\\"id\\\": \\\"fc65b49f-1f5c-4ca5-9b03-98565e1589f3\\\",\\n        \\\"name\\\": \\\"Agosto\\\",\\n        \\\"start_date\\\": \\\"2016-08-01\\\",\\n        \\\"end_date\\\": \\\"2016-08-01\\\",\\n        \\\"created\\\": \\\"2016-08-25T15:28:32.400027Z\\\",\\n        \\\"modified\\\": \\\"2016-08-25T15:28:32.400365Z\\\",\\n        \\\"is_cluster\\\": false\\n}]\\n\\nImportant considerations\\nAll parameters in bold are considered important to create plans\\nPlan\\n\\nname must be unique\\nstart_date and end_date must be the same\\n\\nRoutes\\n\\ndriver → driver id\\nvehicle → vehicle id\\nplanned_date must be equal to plan’s start_date and end_date\\nestimated_time_start → when the vehicle starts to work\\nestimated_time_end → when vehicle will end working\\nrequest_status → create a new route\\n\\nVisits\\nAn array with all the visits of a route.\\n- title → Identifier of the shop or person to deliver (will be displayed on mobile app)\\n- address → Address of the delivery (will be displayed on mobile app)\\n- order → The order in which will be delivered\\n- planned_date → Delivery date\\n- estimated_time_arrival → Arrival\\n- estimated_time_departure → Departure\\n- request_status → create a new visit\\nThe rest of the parameters are not mandatory and should be setted with dummy data if the i nformation is not available.\\nRoutes\\nRoute is the system entity that encompasses a set of visits. On this you can do the typical CRUD operations:\\nCreate routes\\n\\nURL Definition\\n\\nPOST https://api.simpliroute.com/v1/routes/routes/\\n\\n\\nExample request\\n\\n[\\n  {\\n    \\\"vehicle\\\": 2032,\\n    \\\"driver\\\": null,\\n    \\\"plan\\\": \\\"ab20be8f-e98e-4402-8519-98d6752e0f1a\\\",\\n    \\\"planned_date\\\": \\\"2016-05-20\\\",\\n    \\\"estimated_time_start\\\": \\\"03:00:00\\\",\\n    \\\"estimated_time_end\\\": \\\"19:33:00\\\",\\n    \\\"status\\\": \\\"pending\\\",\\n    \\\"total_duration\\\": \\\"16:33:00\\\",\\n    \\\"total_distance\\\": 0,\\n    \\\"total_load\\\": 2086,\\n    \\\"total_load_percentage\\\": 0,\\n    \\\"location_start_address\\\": \\\"Enrique Mac Iver 524, Santiago, Chile\\\",\\n    \\\"location_start_latitude\\\": \\\"-33.436571\\\",\\n    \\\"location_start_longitude\\\": \\\"-70.647308\\\",\\n    \\\"location_end_address\\\": \\\"Suecia 151, Providencia, Chile\\\",\\n    \\\"location_end_latitude\\\": \\\"-33.421958\\\",\\n    \\\"location_end_longitude\\\": \\\"-70.607270\\\",\\n    \\\"reference\\\": \\\"my reference\\\"\\n  }\\n]\\n\\n\\nExample response\\n\\n[\\n  {\\n    \\\"id\\\": \\\"33ddc43b-5ca8-4455-b3af-16a2f1971c1e\\\",\\n    \\\"vehicle\\\": 2032,\\n    \\\"driver\\\": null,\\n    \\\"plan\\\": \\\"ab20be8f-e98e-4402-8519-98d6752e0f1a\\\",\\n    \\\"status\\\": \\\"pending\\\",\\n    \\\"planned_date\\\": \\\"2016-05-20\\\",\\n    \\\"estimated_time_start\\\": \\\"03:00:00\\\",\\n    \\\"estimated_time_end\\\": \\\"19:33:00\\\",\\n    \\\"total_duration\\\": \\\"16:33:00\\\",\\n    \\\"total_distance\\\": 0,\\n    \\\"total_load\\\": 2086,\\n    \\\"total_load_percentage\\\": 0,\\n     \\\"total_load_2\\\": 0.0,\\n    \\\"total_load_2_percentage\\\": 0,\\n    \\\"total_load_3\\\": 0.0,\\n    \\\"total_load_3_percentage\\\": 0,\\n    \\\"location_start_address\\\": \\\"Enrique Mac Iver 524, Santiago, Chile\\\",\\n    \\\"location_start_latitude\\\": \\\"-33.436571\\\",\\n    \\\"location_start_longitude\\\": \\\"-70.647308\\\",\\n    \\\"location_end_address\\\": \\\"Suecia 151, Providencia, Chile\\\",\\n    \\\"location_end_latitude\\\": \\\"-33.421958\\\",\\n    \\\"location_end_longitude\\\": \\\"-70.607270\\\",\\n    \\\"comment\\\": \\\"Route 1\\\",\\n    \\\"start_time\\\": null,\\n    \\\"end_time\\\": null,\\n    \\\"created\\\": \\\"2016-08-01T20:45:25.672207Z\\\",\\n    \\\"modified\\\": \\\"2016-08-01T20:45:25.674460Z\\\",\\n    \\\"kilometers\\\": null,\\n    \\\"total_visits\\\": 0,\\n    \\\"latitude_init\\\": null,\\n    \\\"longitude_init\\\": null,\\n    \\\"latitude_finish\\\": null,\\n    \\\"longitude_finish\\\": null,\\n    \\\"is_revised\\\": false,\\n    \\\"reference\\\": \\\"my reference\\\"\\n  }\\n]\\nList of Vehicles with routes for a date\\n\\nURL Definition\\n\\nGET https://api.simpliroute.com/v1/plans/{{planned_date}}/vehicles/\\n\\n\\nExample response\\n\\n[\\n  {\\n    \\\"color\\\": \\\"#FFCC33\\\",\\n    \\\"routes\\\": [\\n      {\\n        \\\"plan_id\\\": \\\"f61cd65a-075e-454f-a080-d2c573d2be3e\\\",\\n        \\\"id\\\": \\\"e708c5ba-6d49-4418-b87e-9061e1194b1b\\\"\\n      }\\n    ],\\n    \\\"driver\\\":{\\n      \\\"id\\\": 742,\\n      \\\"name\\\": \\\"Conductor Demo\\\"\\n    },\\n    \\\"name\\\": \\\"Mi auto\\\",\\n    \\\"id\\\": 287\\n  }\\n]\\n\\nA Vehicle can have multiple routes for a day. A route is identified by a uuid.\\nList of Visits by RouteGET https://api.simpliroute.com/v1/plans/routes/{{PLAN_ID}}/visits/\\n\\n\\nExample response\\n\\n[\\n  {\\n    \\\"status\\\": \\\"failed\\\",\\n    \\\"plan_id\\\": \\\"f61cd65a-075e-454f-a080-d2c573d2be3e\\\",\\n    \\\"reference\\\": \\\"\\\",\\n    \\\"title\\\": \\\"STARK INDUSTRIES\\\",\\n    \\\"checkout_time\\\": \\\"2017-03-13T20:17:20Z\\\",\\n    \\\"longitude\\\": \\\"-70.651066\\\",\\n    \\\"id\\\": 89274,\\n    \\\"route_id\\\": \\\"e708c5ba-6d49-4418-b87e-9061e1194b1b\\\",\\n    \\\"address\\\": \\\"HUERFANOS 1011, SANTIAGO, Santiago\\\",\\n    \\\"latitude\\\": \\\"-33.439626\\\",\\n    \\\"estimated_time_arrival\\\": \\\"09:28:00\\\",\\n    \\\"order\\\": 2\\n  },\\n  {\\n    \\\"status\\\": \\\"completed\\\",\\n    \\\"plan_id\\\": \\\"f61cd65a-075e-454f-a080-d2c573d2be3e\\\",\\n    \\\"reference\\\": \\\"\\\",\\n    \\\"title\\\": \\\"PELUQUERIA DI GIANCARLO\\\",\\n    \\\"checkout_time\\\": \\\"2017-03-13T20:17:11Z\\\",\\n    \\\"longitude\\\": \\\"-70.659729\\\",\\n    \\\"id\\\": 89273,\\n    \\\"route_id\\\": \\\"2d3ced6c-70e4-414e-8313-d5abe9166a15\\\",\\n    \\\"address\\\": \\\"FANOR VELASCO 85, SANTIAGO, Santiago\\\",\\n    \\\"latitude\\\": \\\"-33.442880\\\",\\n    \\\"estimated_time_arrival\\\": \\\"09:05:00\\\",\\n    \\\"order\\\": 1\\n  }\\n]\\n\\nA Vehicle can have multiple routes for a day. A route is identified by a uuid.\\nUpdate reference field by RoutePATCH https://api.simpliroute.com/v1/routes/routes/{{route_id}}/\\n\\n\\nExample request\\n\\n{\\n  \\\"reference\\\": \\\"my own reference\\\"\\n}\\n\\n\\nExample response\\n\\n{\\n  \\\"id\\\": \\\"32024005-7b45-455d-b901-f3f9afa2679e\\\",\\n  \\\"vehicle\\\": 278533,\\n  \\\"driver\\\": 129373,\\n  \\\"plan\\\": \\\"ab20be8f-e98e-4402-8519-98d6752e0f1a\\\",\\n  \\\"status\\\": \\\"pending\\\",\\n  \\\"planned_date\\\": \\\"2024-02-28\\\",\\n  \\\"estimated_time_start\\\": \\\"09:00:00\\\",\\n  \\\"estimated_time_end\\\": \\\"10:54:00\\\",\\n  \\\"total_duration\\\": \\\"01:54:00\\\",\\n  \\\"total_distance\\\": 60992,\\n  \\\"total_load\\\": 0.0,\\n  \\\"total_load_percentage\\\": 0,\\n  \\\"total_load_2\\\": 0.0,\\n  \\\"total_load_2_percentage\\\": 0,\\n  \\\"total_load_3\\\": 0.0,\\n  \\\"total_load_3_percentage\\\": 0,\\n  \\\"location_start_address\\\": \\\"Lord Cochrane 298, Santiago, Chile\\\",\\n  \\\"location_start_latitude\\\": \\\"-33.449977\\\",\\n  \\\"location_start_longitude\\\": \\\"-70.654465\\\",\\n  \\\"location_end_address\\\": \\\"Av. Vicuña Mackenna 2365, Ñuñoa, San Joaquín, Región Metropolitana, Chile\\\",\\n  \\\"location_end_latitude\\\": \\\"-33.473420\\\",\\n  \\\"location_end_longitude\\\": \\\"-70.624235\\\",\\n  \\\"comment\\\": \\\"Route 1\\\",\\n  \\\"start_time\\\": null,\\n  \\\"end_time\\\": null,\\n  \\\"created\\\": \\\"2024-02-28T17:20:37.919471Z\\\",\\n  \\\"modified\\\": \\\"2024-04-02T20:14:46.945819Z\\\",\\n  \\\"kilometers\\\": null,\\n  \\\"total_visits\\\": 2,\\n  \\\"latitude_init\\\": null,\\n  \\\"longitude_init\\\": null,\\n  \\\"latitude_finish\\\": null,\\n  \\\"longitude_finish\\\": null,\\n  \\\"is_revised\\\": false,\\n  \\\"reference\\\": \\\"my own reference\\\"\\n}\\nRoute Properties\\n\\n\\nAttributes\\nData Type\\nDescription\\n\\n\\n\\ncolor\\nString\\nStores the color assigned to the route when creating a plan. To use this property, the account configuration enable_colors_for_contiguous_routes must be enabled.\\n\\n\\nis_start_blocked\\nBoolean\\nThis property is used to block the start of a route.\\n\\n\\nGet Route Properties\\n\\nURL Definition\\n\\n\\nGET https://api.simpliroute.com/v1/routes/routes-properties/{{ROUTE_ID}}\\n\\n\\n\\nExample Response\\n\\n{\\n  \\\"route\\\": \\\"3d20088b-02b8-456b-80f9-ecfa8dbf27d6\\\",\\n  \\\"color\\\": \\\"#0000FF\\\",\\n  \\\"is_start_blocked\\\": false\\n}\\n\\nThis endpoint retrieves all the properties of a specified route.\\nCreate Route Properties\\n\\nURL Definition\\n\\n\\nPOST https://api.simpliroute.com/v1/routes/routes-properties/\\n\\n\\n\\nExample Request\\n\\n{\\n  \\\"route\\\": \\\"3d20088b-02b8-456b-80f9-ecfa8dbf27d6\\\",\\n  \\\"color\\\": null,\\n  \\\"is_start_blocked\\\": false\\n}\\n\\nThis endpoint is used to create properties for a specified route. If properties for the route already exist, an error response will be returned\\nUpdate Route Properties\\n\\nURL Definition\\n\\n\\nPUT https://api.simpliroute.com/v1/routes/routes-properties/{{ROUTE_ID}}\\n\\n\\n\\nExample Request\\n\\n{\\n  \\\"color\\\": \\\"#D50000\\\",\\n  \\\"is_start_blocked\\\": true\\n}\\n\\nThis endpoint is used to update all the properties for a specified route.\\nPartial Update Route Properties\\nPATCH https://api.simpliroute.com/v1/routes/routes-properties/{{ROUTE_ID}}\\n\\n\\n\\nExample Request\\n\\n{\\n  \\\"is_start_blocked\\\": false\\n}\\n\\nThis endpoint allows for the partial update of route properties. Only the properties included in the request body will be updated.\\nDelete Route Properties\\nDELETE https://api.simpliroute.com/v1/routes/routes-properties/{{ROUTE_ID}}\\n\\n\\nThis endpoint is used to delete all the properties for a specified route.\\nBulk Search Routes Properties\\nPOST https://api.simpliroute.com/v1/routes/routes-properties/bulk-search/\\n\\n\\n\\nExample Request\\n\\n{\\n  \\\"route_ids\\\": [\\n    \\\"da6c3bac-898d-4343-8b05-5b80f2d7c26a\\\",\\n    \\\"3d20088b-02b8-456b-80f9-ecfa8dbf27d6\\\"\\n  ]\\n}\\n\\n\\nExample Response\\n\\n[\\n    {\\n        \\\"route\\\": \\\"3d20088b-02b8-456b-80f9-ecfa8dbf27d6\\\",\\n        \\\"color\\\": \\\"#658900\\\",\\n        \\\"is_start_blocked\\\": false\\n    },\\n    {\\n        \\\"route\\\": \\\"da6c3bac-898d-4343-8b05-5b80f2d7c26a\\\",\\n        \\\"color\\\": null,\\n        \\\"is_start_blocked\\\": true\\n    }\\n]\\n\\nThis endpoint is used to retrieve the properties of multiple routes in a single request. By providing a list of route IDs, you can get the properties for each specified route.\\nVehicles\\nTo facilitate the integration flow, the loading of the vehicles of each client can be done via API using the following endpoints.\\nThe delivery entity is separate from the vehicle entity in SimpliRoute. This in order to better track vehicle performance or other internal user metrics.\\nCreate vehicles\\n\\nURL Definition\\n\\n\\nPOST https://api.simpliroute.com/v1/routes/vehicles/\\n\\n\\n\\nExample Request with mandatory fields\\n\\n\\n{\\n    \\\"name\\\": \\\"ASDFQWER\\\",\\n    \\\"capacity\\\": 2000,\\n    \\\"default_driver\\\": null,\\n    \\\"location_start_address\\\": \\\"Direccion A\\\",\\n    \\\"location_start_latitude\\\": -33.3456,\\n    \\\"location_start_longitude\\\": -70.2345,\\n    \\\"location_end_address\\\": \\\"Direccion B\\\",\\n    \\\"location_end_latitude\\\": -33.34234,\\n    \\\"location_end_longitude\\\": -70.23456,\\n    \\\"skills\\\": []\\n}\\n\\nExample Request with all available fields\\n\\n{\\n    \\\"name\\\": \\\"Camión-1\\\",\\n    \\\"capacity\\\": 1000,\\n    \\\"default_driver\\\": null,\\n    \\\"location_start_address\\\": \\\"1 Calle A, Guatemala City, Guatemala\\\",\\n    \\\"location_end_address\\\": \\\"1 Calle A, Guatemala City, Guatemala\\\",\\n    \\\"location_end_latitude\\\": \\\"14.582131\\\",\\n    \\\"location_end_longitude\\\": \\\"-90.487034\\\",\\n    \\\"location_start_latitude\\\": \\\"14.582131\\\",\\n    \\\"location_start_longitude\\\": \\\"-90.487034\\\",\\n    \\\"skills\\\": [],\\n    \\\"capacity2\\\": \\\"1\\\",\\n    \\\"capacity3\\\": \\\"1\\\",\\n    \\\"cost\\\": null,\\n    \\\"shift_start\\\": null,\\n    \\\"shift_end\\\": null,\\n    \\\"reference_id\\\": \\\"12AB\\\",\\n    \\\"license_plate\\\": \\\"ABCD\\\",\\n    \\\"min_load\\\": 0,\\n    \\\"min_load_2\\\": 0,\\n    \\\"min_load_3\\\": 0,\\n    \\\"max_visit\\\": null,\\n    \\\"max_time\\\": null,\\n    \\\"rest_time_start\\\": null,\\n    \\\"rest_time_end\\\": null,\\n    \\\"rest_time_duration\\\": null,\\n    \\\"codrivers\\\": []\\n}\\n\\n\\nExample Response\\n\\n{\\n    \\\"id\\\": 487294,\\n    \\\"name\\\": \\\"Camión-1\\\",\\n    \\\"shift_start\\\": null,\\n    \\\"shift_end\\\": null,\\n    \\\"capacity\\\": 1000.0,\\n    \\\"capacity_2\\\": 1.0,\\n    \\\"capacity_3\\\": 1.0,\\n    \\\"default_driver\\\": null,\\n    \\\"location_start_address\\\": \\\"1 Calle A, Guatemala City, Guatemala\\\",  //(warehouse starting point of the vehicle)\\n    \\\"location_start_latitude\\\": \\\"14.582131\\\",\\n    \\\"location_start_longitude\\\": \\\"-90.487034\\\",\\n    \\\"location_end_address\\\": \\\"1 Calle A, Guatemala City, Guatemala\\\",  //(warehouse or last point of the vehicle)\\n    \\\"location_end_latitude\\\": \\\"14.582131\\\",\\n    \\\"location_end_longitude\\\": \\\"-90.487034\\\",\\n    \\\"skills\\\": [],\\n    \\\"created\\\": \\\"2024-06-26T16:28:39.193486Z\\\",\\n    \\\"modified\\\": \\\"2024-06-26T16:28:39.193486Z\\\",\\n    \\\"color\\\": \\\"#FF8C00\\\",\\n    \\\"reference_id\\\": \\\"12AB\\\",\\n    \\\"license_plate\\\": \\\"ABCD\\\",\\n    \\\"cost\\\": null,\\n    \\\"min_load\\\": 0,\\n    \\\"min_load_2\\\": 0,\\n    \\\"min_load_3\\\": 0,\\n    \\\"max_visit\\\": null,\\n    \\\"rest_time_start\\\": null,\\n    \\\"rest_time_end\\\": null,\\n    \\\"rest_time_duration\\\": null,\\n    \\\"deleted\\\": false,\\n    \\\"max_time\\\": null,\\n    \\\"codrivers\\\": [],\\n    \\\"status\\\": \\\"active\\\"\\n}\\nList Vehicle\\n\\nURL Definition\\n\\n\\nGET https://api.simpliroute.com/v1/routes/vehicles/\\n\\n\\nExample Response\\n\\n[{\\n    \\\"id\\\": 487294,\\n    \\\"name\\\": \\\"Camión-1\\\",\\n    \\\"shift_start\\\": null,\\n    \\\"shift_end\\\": null,\\n    \\\"capacity\\\": 1000.0,\\n    \\\"capacity_2\\\": 1.0,\\n    \\\"capacity_3\\\": 1.0,\\n    \\\"default_driver\\\": null,\\n    \\\"location_start_address\\\": \\\"1 Calle A, Guatemala City, Guatemala\\\",\\n    \\\"location_start_latitude\\\": \\\"14.582131\\\",\\n    \\\"location_start_longitude\\\": \\\"-90.487034\\\",\\n    \\\"location_end_address\\\": \\\"1 Calle A, Guatemala City, Guatemala\\\",\\n    \\\"location_end_latitude\\\": \\\"14.582131\\\",\\n    \\\"location_end_longitude\\\": \\\"-90.487034\\\",\\n    \\\"skills\\\": [],\\n    \\\"created\\\": \\\"2024-06-26T16:28:39.193486Z\\\",\\n    \\\"modified\\\": \\\"2024-06-26T16:28:39.193486Z\\\",\\n    \\\"color\\\": \\\"#FF8C00\\\",\\n    \\\"reference_id\\\": \\\"12AB\\\",\\n    \\\"license_plate\\\": \\\"ABCD\\\",\\n    \\\"cost\\\": null,\\n    \\\"min_load\\\": 0,\\n    \\\"min_load_2\\\": 0,\\n    \\\"min_load_3\\\": 0,\\n    \\\"max_visit\\\": null,\\n    \\\"rest_time_start\\\": null,\\n    \\\"rest_time_end\\\": null,\\n    \\\"rest_time_duration\\\": null,\\n    \\\"deleted\\\": false,\\n    \\\"max_time\\\": null,\\n    \\\"codrivers\\\": [],\\n    \\\"status\\\": \\\"active\\\"\\n}]\\n\\nDelete vechicle\\n\\nURL Definition\\n\\n\\nDELETE https://api.simpliroute.com/v1/routes/vehicles/{VECHICLE_ID}\\nCustomers\\nA customer is an individual or company. Customers are the end users. \\nCreate Customers\\n\\nURL Definition\\n\\n\\nPOST https://api.simpliroute.com/v1/accounts/clients/\\n\\n\\n\\nExample Request \\n\\n\\n[{\\n    \\\"key\\\": \\\"123456\\\",\\n    \\\"title\\\": \\\"Coop Enargas\\\",\\n    \\\"address\\\": \\\"\\\",\\n    \\\"latitude\\\": null,\\n    \\\"longitude\\\": null,\\n    \\\"load\\\": null,\\n    \\\"load_2\\\": 0.0,\\n    \\\"load_3\\\": 0.0,\\n    \\\"window_start\\\": null,\\n    \\\"window_end\\\": null,\\n    \\\"window_start_2\\\": null,\\n    \\\"window_end_2\\\": null,\\n    \\\"duration\\\": \\\"00:00:00\\\",\\n    \\\"contact_name\\\": null,\\n    \\\"contact_phone\\\": null,\\n    \\\"contact_email\\\": null,\\n    \\\"notes\\\": null,\\n    \\\"priority_level\\\": null,\\n    \\\"skills_required\\\": [\\n            30744,\\n            47593\\n        ],\\n        \\\"skills_optional\\\": [\\n            30567\\n        ],\\n    \\\"tags\\\": [],\\n}]\\n\\nBy using the following POST method, the clients/customers can be uploaded to the Simpliroute application, this generates the client master for each one of the accounts that will be registered and that will connect with the Web services of each ERP. Each main Client must have its own token to make the connection and inject the data to the platform\\nWhen you create clients, it can be viewed from the client master extension on the Simpliroute platform.\\nObtain Customers\\n\\nURL Definition\\n\\n\\nGET https://api.simpliroute.com/v1/accounts/clients/?key={{CLIENT_ID}}\\n\\n\\n\\nExample Request\\n\\n[{\\n    \\\"id\\\": 68156,\\n    \\\"key\\\": \\\"123456\\\",\\n    \\\"title\\\": \\\"Cliente Ejemplo\\\",\\n    \\\"address\\\": \\\"Pedro Montt 2245, Valparaíso, V Región\\\",\\n    \\\"latitude\\\": \\\"-33.464115\\\",\\n    \\\"longitude\\\": \\\"-70.652859\\\",\\n    \\\"load\\\": 4.0,\\n    \\\"load_2\\\": 2.0,\\n    \\\"load_3\\\": 1.0,\\n    \\\"window_start\\\": \\\"09:00:00\\\",\\n    \\\"window_end\\\": \\\"17:00:00\\\",\\n    \\\"window_start_2\\\": null,\\n    \\\"window_end_2\\\": null,\\n    \\\"duration\\\": \\\"00:00:00\\\",\\n    \\\"contact_name\\\": \\\"\\\",\\n    \\\"contact_phone\\\": \\\"\\\",\\n    \\\"contact_email\\\": \\\"cliente2@email.com\\\",\\n    \\\"notes\\\": \\\"Notas de Texto\\\",\\n    \\\"priority_level\\\": null\\n    }\\n]\\n\\nThrough the GET client method, you can obtain the id and the information related to the client via API, with this information we can generate the visits.\\nDelete a Customer\\n\\nURL Definition\\n\\nDELETE https://api.simpliroute.com/v1/accounts/clients/{{CLIENT_ID}}/\\nDelete Customers\\n\\nURL Definition\\n\\nDELETE https://api.simpliroute.com/v1/accounts/clients/\\n\\n\\nExample Request body\\n\\n{\\n [000000, 000001...]\\n}\\n\\n\\nThe array must have the id of the clients that you want to delete.\\nUpdate Customers\\n\\nURL Definition\\n\\nPUT https://api.simpliroute.com/v1/accounts/clients/\\n\\n\\nExample Request\\n\\n\\n[{\\n    \\\"id\\\": 68156,\\n    \\\"key\\\": \\\"123456\\\",\\n    \\\"title\\\": \\\"Coop Enargas\\\",\\n    \\\"address\\\": \\\"\\\",\\n    \\\"latitude\\\": null,\\n    \\\"longitude\\\": null,\\n    \\\"load\\\": null,\\n    \\\"load_2\\\": 0.0,\\n    \\\"load_3\\\": 0.0,\\n    \\\"window_start\\\": null,\\n    \\\"window_end\\\": null,\\n    \\\"window_start_2\\\": null,\\n    \\\"window_end_2\\\": null,\\n    \\\"duration\\\": \\\"00:00:00\\\",\\n    \\\"contact_name\\\": null,\\n    \\\"contact_phone\\\": null,\\n    \\\"contact_email\\\": null,\\n    \\\"notes\\\": null,\\n    \\\"priority_level\\\": null,\\n    \\\"skills_required\\\": [\\n            30744,\\n            47593\\n        ],\\n        \\\"skills_optional\\\": [\\n            30567\\n        ],\\n    \\\"tags\\\": [],\\n}]\\n\\nThis endpoint allows for the updating of multiple clients' information\\nClient Custom Properties\\nClient custom properties are additional attributes that can be added to clients to store any type of necessary information. To add custom properties to your clients, you must first create the attribute in your account. Once created, these attributes can be used when creating and modifying client records.\\nCreate custom property\\n\\nURL Definition\\n\\nPOST https://api.simpliroute.com/v1/planner/client-properties/\\n\\n\\nExample Request\\n\\n{\\n  \\\"label\\\": \\\"price\\\",\\n  \\\"type\\\": \\\"int\\\"\\n}\\n\\nThis endpoint is used to create a custom property for clients in the system/account. Custom properties allow you to add specific attributes tailored to your needs, which can be used when creating or modifying client records.\\n\\n\\nAttributes\\nData Type\\nDescription\\n\\n\\n\\nlabel\\nString\\nThe name of the custom property.\\n\\n\\ntype\\nString\\nThe data type of the custom property. Possible values include 'str', 'int', 'float', 'bool'\\n\\n\\nUsing Custom Properties\\n\\nExample Request\\n\\n[\\n    {\\n        \\\"key\\\": \\\"SFKK8976678\\\",\\n        \\\"title\\\": \\\"Cliente Ejemplo\\\",\\n        \\\"address\\\": \\\"Pedro Montt 2246, Valparaíso, V Región, Chile\\\",\\n        \\\"latitude\\\": \\\"-33.047400\\\",\\n        \\\"longitude\\\": \\\"-71.612920\\\",\\n        \\\"skills_required\\\": [],\\n        \\\"skills_optional\\\": [],\\n        \\\"load\\\": \\\"4\\\",\\n        \\\"load_2\\\": \\\"2\\\",\\n        \\\"load_3\\\": \\\"1\\\",\\n        \\\"window_start\\\": \\\"09:00:00\\\",\\n        \\\"window_end\\\": \\\"17:00:00\\\",\\n        \\\"window_start_2\\\": null,\\n        \\\"window_end_2\\\": null,\\n        \\\"duration\\\": \\\"00:00:00\\\",\\n        \\\"contact_name\\\": \\\"Cliente\\\",\\n        \\\"contact_email\\\": \\\"cliente@email.com\\\",\\n        \\\"contact_phone\\\": \\\"56995466337\\\",\\n        \\\"tags\\\": [],\\n        \\\"visit_type\\\": null,\\n        \\\"notes\\\": \\\"The doorbell is faulty\\\",\\n        \\\"priority_level\\\": null,\\n        \\\"custom_properties\\\": {\\n            \\\"price\\\": 100\\n        }\\n    }\\n]\\n\\nOnce you have created your custom property, you can use it in the creation and modification of client records.\\nForceField\\n\\nExample Request\\n\\n[\\n    {\\n        \\\"key\\\": \\\"SFKK8976678\\\",\\n        \\\"title\\\": \\\"Cliente Ejemplo\\\",\\n        \\\"address\\\": \\\"Pedro Montt 2246, Valparaíso, V Región, Chile\\\",\\n        \\\"latitude\\\": \\\"-33.047400\\\",\\n        \\\"longitude\\\": \\\"-71.612920\\\",\\n        \\\"skills_required\\\": [],\\n        \\\"skills_optional\\\": [],\\n        \\\"load\\\": \\\"4\\\",\\n        \\\"load_2\\\": \\\"2\\\",\\n        \\\"load_3\\\": \\\"1\\\",\\n        \\\"window_start\\\": \\\"09:00:00\\\",\\n        \\\"window_end\\\": \\\"17:00:00\\\",\\n        \\\"window_start_2\\\": null,\\n        \\\"window_end_2\\\": null,\\n        \\\"duration\\\": \\\"00:00:00\\\",\\n        \\\"contact_name\\\": \\\"Cliente\\\",\\n        \\\"contact_email\\\": \\\"cliente@email.com\\\",\\n        \\\"contact_phone\\\": \\\"56995466337\\\",\\n        \\\"tags\\\": [],\\n        \\\"visit_type\\\": null,\\n        \\\"notes\\\": \\\"The doorbell is faulty\\\",\\n        \\\"priority_level\\\": null,\\n        \\\"sales_visit_scheduled\\\": {\\n            \\\"period\\\": 7,\\n            \\\"interval\\\": 4,\\n            \\\"frequency\\\": 2\\n        },\\n        \\\"scheduled_visit_days\\\": {\\n            \\\"any_week\\\": [\\n                \\\"Monday\\\",\\n                \\\"Tuesday\\\"\\n            ]\\n        },\\n        \\\"custom_properties\\\": {\\n            \\\"price\\\": 100,\\n            \\\"currency\\\": \\\"USD\\\"\\n        }\\n    },\\n        {\\n        \\\"key\\\": \\\"SFKK89766100\\\",\\n        \\\"title\\\": \\\"Cliente 2 Ejemplo\\\",\\n        \\\"address\\\": \\\"Pedro Montt 2250, Valparaíso, V Región, Chile\\\",\\n        \\\"latitude\\\": \\\"-33.047400\\\",\\n        \\\"longitude\\\": \\\"-71.612920\\\",\\n        \\\"skills_required\\\": [],\\n        \\\"skills_optional\\\": [],\\n        \\\"load\\\": \\\"4\\\",\\n        \\\"load_2\\\": \\\"2\\\",\\n        \\\"load_3\\\": \\\"1\\\",\\n        \\\"window_start\\\": \\\"09:00:00\\\",\\n        \\\"window_end\\\": \\\"17:00:00\\\",\\n        \\\"window_start_2\\\": null,\\n        \\\"window_end_2\\\": null,\\n        \\\"duration\\\": \\\"00:00:00\\\",\\n        \\\"contact_name\\\": \\\"Cliente 2\\\",\\n        \\\"contact_email\\\": \\\"cliente2@email.com\\\",\\n        \\\"contact_phone\\\": \\\"56995466337\\\",\\n        \\\"tags\\\": [],\\n        \\\"visit_type\\\": null,\\n        \\\"notes\\\": \\\"The doorbell is faulty\\\",\\n        \\\"priority_level\\\": null,\\n        \\\"sales_visit_scheduled\\\": {\\n            \\\"period\\\": 28,\\n            \\\"interval\\\": 1,\\n            \\\"frequency\\\": 3\\n        },\\n        \\\"scheduled_visit_days\\\": {\\n            \\\"week_3\\\": [\\n              \\\"Monday\\\",\\n              \\\"Tuesday\\\",\\n              \\\"Sunday\\\"\\n            ]\\n        },\\n        \\\"custom_properties\\\": {\\n            \\\"price\\\": 200,\\n            \\\"currency\\\": \\\"USD\\\"\\n        }\\n    }\\n]\\n\\nTo use the ForceField attributes, it is necessary to activate the territory_planner addon. The new attributes are sales_visit_scheduled and scheduled_visit_days. These can be used in the endpoints for creating, modifying, and retrieving customers.\\nSales Visit Schedule Object\\n\\n\\nAttributes\\nData Type\\nDescription\\n\\n\\n\\nfrequency\\nInteger\\nRepresents the number of times a client should be visited within a given period.\\n\\n\\nperiod\\nInteger\\nRepresents the duration of a visit cycle for a particular client. Possible values are weekly (7), biweekly (14), or monthly (28).\\n\\n\\ninterval\\nInteger\\nRepresents the time gap between visits.\\n\\n\\nseller\\nInteger\\nSpecifies who conducts the visit to the client, which can be either a seller or a vehicle.\\n\\n\\nClient Scheduled Visit Day Object\\nThis object defines the days of the week on which a client is scheduled for visits. The attributes are organized by weeks, including a general option for any week where no specific week is predefined. Each attribute lists the possible days of the week that can be selected for scheduling.\\n\\n\\nAttributes\\nData Type\\nDescription\\n\\n\\n\\nany_week\\nArray\\nThis attribute is used when there is no predefined week. Possible values are 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'.\\n\\n\\nweek_1\\nArray\\nThis attribute corresponds to the first week of the month. Possible values are 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'.\\n\\n\\nweek_2\\nArray\\nThis attribute corresponds to the second week of the month. Possible values are 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'.\\n\\n\\nweek_3\\nArray\\nThis attribute corresponds to the third week of the month. Possible values are 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'.\\n\\n\\nweek_4\\nArray\\nThis attribute corresponds to the fourth week of the month. Possible values are 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'.\\n\\n\\nUsers\\nA user for SimpliRoute is a courier who will make deliveries through our mobile app\\nList users\\n\\nURL Definition\\n\\n\\n GET https://api.simpliroute.com/v1/accounts/drivers/\\n\\n\\n\\nExample Response\\n```json\\n[{\\n    \\\"id\\\": 114,\\n    \\\"username\\\": \\\"user2\\\",\\n    \\\"name\\\": \\\"\\\",\\n    \\\"phone\\\": \\\"\\\",\\n    \\\"email\\\": \\\"\\\",\\n    \\\"is_owner\\\": false,\\n    \\\"is_admin\\\": false,\\n    \\\"is_driver\\\": true,\\n    \\\"old_id\\\": 1477,\\n    \\\"created\\\": \\\"2016-06-24T20:47:06.859895Z\\\",\\n    \\\"modified\\\": \\\"2016-06-30T20:04:51.043122Z\\\",\\n    \\\"last_login\\\": null\\n  },\\n  {\\n    \\\"id\\\": 24,\\n    \\\"old_id\\\": 930,\\n    \\\"username\\\": \\\"test\\\",\\n    \\\"name\\\": \\\"Test\\\",\\n    \\\"phone\\\": \\\"\\\",\\n    \\\"email\\\": \\\"\\\",\\n    \\\"is_owner\\\": false,\\n    \\\"is_admin\\\": false,\\n    \\\"is_driver\\\": true,\\n    \\\"old_id\\\": 1477,\\n    \\\"created\\\": \\\"2016-06-24T20:47:06.859895Z\\\",\\n    \\\"modified\\\": \\\"2016-06-30T20:04:51.043122Z\\\",\\n    \\\"last_login\\\": null\\n  }]\\n\\n## Create user\\n\\nWith the following endpoint you can create via API a user\\n\\n> URL Definition\\n\\n```url\\n\\nPOST https://api.simpliroute.com/v1/accounts/drivers/\\n\\n\\n\\nExample Body\\n```json\\n[{\\n    \\\"username\\\": \\\"testtest2\\\",\\n    \\\"name\\\": \\\"Conductor 1\\\",\\n    \\\"phone\\\": \\\"\\\",\\n    \\\"email\\\": \\\"\\\",\\n    \\\"is_admin\\\": false,\\n    \\\"password\\\": \\\"driver\\\",\\n    \\\"is_driver\\\": true\\n}]\\n\\n> Example Response\\n```json\\n[{\\n    \\\"id\\\": 40779,\\n    \\\"username\\\": \\\"testtest2\\\",\\n    \\\"name\\\": \\\"Conductor 1\\\",\\n    \\\"phone\\\": \\\"\\\",\\n    \\\"email\\\": \\\"\\\",\\n    \\\"is_owner\\\": false,\\n    \\\"is_admin\\\": false,\\n    \\\"is_driver\\\": true,\\n    \\\"is_router_jr\\\": false,\\n    \\\"is_monitor\\\": false,\\n    \\\"is_coordinator\\\": false,\\n    \\\"is_router\\\": false,\\n    \\\"is_staff\\\": false,\\n    \\\"old_id\\\": null,\\n    \\\"created\\\": \\\"2020-03-19T19:13:45.178268Z\\\",\\n    \\\"modified\\\": \\\"2020-03-19T19:13:45.223900Z\\\",\\n    \\\"last_login\\\": null\\n}]\\nGet a determine user\\n\\nURL Definition\\n\\n\\nGET https://api.simpliroute.com/v1/accounts/drivers/{{user_id}}/\\n\\n\\n\\nExample Response\\njson \\n[\\n{\\\"id\\\": 203,\\n  \\\"username\\\": \\\"driver33\\\",\\n  \\\"name\\\": \\\"Driver 3\\\",\\n  \\\"phone\\\": \\\"\\\",\\n  \\\"email\\\": \\\"\\\",\\n  \\\"is_owner\\\": false,\\n  \\\"is_admin\\\": false,\\n  \\\"is_driver\\\": true,\\n  \\\"old_id\\\": 1979,\\n  \\\"created\\\": \\\"2016-08-01T20:23:31.966307Z\\\",\\n  \\\"modified\\\": \\\"2016-08-01T20:23:32.158526Z\\\",\\n  \\\"last_login\\\": null\\n}\\n]\\n\\nUpdate user\\nURL Definition\\n\\n\\nPUT https://api.simpliroute.com/v1/accounts/drivers/{{USER_ID}}/\\n\\n\\n\\n\\nExample Body\\n```json\\n[{\\n    \\\"username\\\": \\\"driver3\\\",\\n    \\\"name\\\": \\\"Driver 3\\\",\\n    \\\"email\\\": \\\"\\\",\\n    \\\"is_admin\\\": false,\\n    \\\"password\\\": \\\"driver\\\"\\n    }]\\n\\n> Example Response\\n``` json\\n[{\\n    \\\"id\\\": 24,\\n  \\\"old_id\\\": 930,\\n  \\\"username\\\": \\\"test\\\",\\n  \\\"name\\\": \\\"Test\\\",\\n  \\\"created\\\": \\\"2016-03-08T15:54:03.095458Z\\\",\\n  \\\"modified\\\": \\\"2016-03-08T15:54:03.268615Z\\\",\\n  \\\"last_login\\\": null}]\\n\\nDelete user\\n\\nURL Definition\\n\\n\\nDELETE https://api.simpliroute.com/v1/accounts/drivers/{{user_id}}/\\n\\n\\nSkills\\nSkills are ways to tag our visitors and vehicles so that the algorithm uses those tags as constraints. If a visitor has the required skill \\\"COLD\\\" the vehicles that can transport that dispatch must also have the skill \\\"COLD\\\".\\nTo get the list of skills\\n\\nURL Definition\\n\\n\\nGET https://api.simpliroute.com/v1/routes/skills/\\n\\n\\n\\nExample response\\n\\n\\n[\\n  {\\n    \\\"id\\\": 295,\\n    \\\"skill\\\": \\\"armijo\\\",\\n    \\\"created\\\": \\\"2017-01-24T21:06:42.545448Z\\\",\\n    \\\"modified\\\": \\\"2017-01-24T21:06:42.545683Z\\\"\\n  },\\n  {\\n    \\\"id\\\": 296,\\n    \\\"skill\\\": \\\"calderon\\\",\\n    \\\"created\\\": \\\"2017-01-24T21:06:46.328027Z\\\",\\n    \\\"modified\\\": \\\"2017-01-24T21:06:46.328273Z\\\"\\n  }\\n ]\\nWebhooks\\nUse webhooks to be notified about events that happen in a SimpliRoute account.\\nHow to work with SimpliRoute's webhooks\\nSimpliRoute can send webhook events that notify your application any time an event happens on your account. This is especially useful for events—like completed or failed deliverURLs that we will notify any time an event happens in your account. When the event occurs, SimpliRoute will send a POST evento to your URL.\\nThis Event object contains all the relevant information about what just happened, including the type of event and the data associated with that event. SimpliRoute then sends the Event object, via an HTTP POST request, to any endpoint URLs that you have defined in your account’s Webhooks settings.ies that are not triggered by a direct API request. This mechanism is also useful for services that are not directly responsible for making an API request, but still need to know the response from that request.\\nWhich events can be notified\\nCurrently, SimpliRoute can notify this events:\\n\\nPlan created\\nPlan edition\\nRoute creation\\nRoute edition\\nRoute deletion\\nRoute started\\nRoute Finish\\nVisit created\\nVisit updated\\nOn it`s way\\nCheckout\\n\\n\\nCompleted delivery\\nFailed delivery\\nPartial Delivery\\n\\nCheckout detailed\\n\\nIf you need some other events, let us know to add them to our roadmap. Feel free to reach us over email to contact@simpliroute.com\\nConfiguring your Webhooks settings\\nWe describe the steps to follow to read, create, update and delete webhooks via API\\nAvailable webhooks\\n\\nplan_created\\nplan_edited \\nroute_created\\nroute_edited\\nroute_started\\nroute_finished\\non_its_way\\nvisit_checkout\\nvisit_checkout_detailed\\n\\nImportant: Each webhook is related to a url and headers. \\nFor example: route_created is related to:\\n- route_created_webhook_url\\n- route_created_webhook_headers\\nAdditionally, requests must include the header:\\n\\nExample Headers\\n\\n[{\\n    Content-Type: application/json\\n    authorization: token {{TOKEN}}\\n}]\\n\\n// Where {{TOKEN}} equals the SR account token.\\n\\n\\n\\n\\nAttributes\\n\\n\\nDescription\\n\\n\\n\\nwebhook\\n\\n\\nName of the available webhook object.\\n\\n\\nurl\\n\\n\\nURL provided by the customer\\n\\n\\nheaders\\n\\n\\nNecessary parameters for communication towards the final server\\n\\n\\nIf you have doubts or problems to configure Webhooks\\n- Send an emails to our team customersuccess@simpliroute.com\\n- In this email, send the URL that you want to receive the webhook.\\n- We'll let you know when the configuration is ready.\\nCreate Webhook\\n\\nURL Definition\\n\\n\\nPOST https://api.simpliroute.com/v1/addons/webhooks\\n\\n\\n\\nExample body\\n\\n{\\n  \\\"webhook\\\": \\\"plan_created\\\",\\n  \\\"url\\\": \\\"https://estoesunwebhookdeprueba.com\\\",\\n  \\\"headers\\\": {\\n    \\\"Content-Type\\\": \\\"application/json\\\",\\n    \\\"Authorization\\\": \\\"Token 16a57ec5ad76c627959c75323274d33d8cc0451e\\\"\\n  }\\n}\\n\\n\\nExample response\\n\\n[\\n  {\\n    \\\"title\\\": \\\"plan_created_webhook_url webhook url\\\",\\n    \\\"key\\\": \\\"plan_created_webhook_url\\\",\\n    \\\"value\\\": \\\"https://estoesunwebhookdeprueba.com\\\",\\n    \\\"description\\\": \\\"plan_created_webhook_url webhook url Luis Bermudez SR Team\\\",\\n    \\\"add_on_id\\\": 29950\\n  },\\n  {\\n    \\\"title\\\": \\\"plan_created_webhook_headers webhook headers\\\",\\n    \\\"key\\\": \\\"plan_created_webhook_headers\\\",\\n    \\\"value\\\": \\\"{\\\\\\\"Content-Type\\\\\\\": \\\\\\\"application/json\\\\\\\", \\\\\\\"Authorization\\\\\\\": \\\\\\\"Token 16a57ec5ad76c627959c75323274d33d8cc0451e\\\\\\\"}\\\",\\n    \\\"description\\\": \\\"plan_created_webhook_headers webhook url Luis Bermudez SR Team\\\",\\n    \\\"add_on_id\\\": 29950\\n  }\\n]\\nList Webhooks\\n\\nURL Definition\\n\\n\\nGET https://api.simpliroute.com/v1/addons/webhooks\\n\\n\\n\\nExample response\\n\\n[\\n  {\\n    \\\"title\\\": \\\"plan_created_webhook_url webhook url\\\",\\n    \\\"key\\\": \\\"plan_created_webhook_url\\\",\\n    \\\"value\\\": \\\"https://estoesunwebhookdeprueba.com\\\",\\n    \\\"description\\\": \\\"plan_created_webhook_url webhook url Luis Bermudez SR Team\\\",\\n    \\\"add_on_id\\\": 29950\\n  },\\n  {\\n    \\\"title\\\": \\\"plan_created_webhook_headers webhook headers\\\",\\n    \\\"key\\\": \\\"plan_created_webhook_headers\\\",\\n    \\\"value\\\": \\\"{\\\\\\\"Content-Type\\\\\\\": \\\\\\\"application/json\\\\\\\", \\\\\\\"Authorization\\\\\\\": \\\\\\\"Token 16a57ec5ad76c627959c75323274d33d8cc0451e\\\\\\\"}\\\",\\n    \\\"description\\\": \\\"plan_created_webhook_headers webhook url Luis Bermudez SR Team\\\",\\n    \\\"add_on_id\\\": 29950\\n  }\\n]\\nUpdate Webhooks\\n\\nURL Definition\\n\\n\\nPUT https://api.simpliroute.com/v1/addons/webhooks\\n\\n\\n\\nExample body\\n\\n{\\n  \\\"webhook\\\": \\\"plan_created\\\",\\n  \\\"url\\\": \\\"https://estoesunwebhookdeprueba.com/nueva-url\\\",\\n  \\\"headers\\\": {\\n    \\\"Content-Type\\\": \\\"application/json\\\"\\n  }\\n}\\n\\n\\n\\nExample response\\n\\n[\\n  {\\n    \\\"title\\\": \\\"plan_created_webhook_url webhook url\\\",\\n    \\\"key\\\": \\\"plan_created_webhook_url\\\",\\n    \\\"value\\\": \\\"https://estoesunwebhookdeprueba.com/nueva-url\\\",\\n    \\\"description\\\": \\\"plan_created_webhook_url webhook url Luis Bermudez SR Team\\\"\\n  },\\n  {\\n    \\\"title\\\": \\\"plan_created_webhook_headers webhook headers\\\",\\n    \\\"key\\\": \\\"plan_created_webhook_headers\\\",\\n    \\\"value\\\": \\\"{\\\\\\\"Content-Type\\\\\\\":\\\\\\\"application/json\\\\\\\"}\\\",\\n    \\\"description\\\": \\\"plan_created_webhook_headers webhook url Luis Bermudez SR Team\\\"\\n  }\\n]\\nDelete Webhooks\\n\\nURL Definition\\n\\n\\nDELETE https://api.simpliroute.com/v1/addons/webhooks\\n\\n\\n\\n\\nExample body\\n\\n{\\n    \\\"webhook\\\": \\\"plan_created\\\"\\n}\\n\\n\\n\\nExample response\\n\\n[{\\n  \\\"message\\\": \\\"The webhook was deleted\\\"\\n}]\\nWebhook Plan creation\\nSimpliRoute is able to send Webhook for Plan creation, the information available is detailed in the table above at the moment the Plan is created using POST method with headers that can be specified by the customer.\\nThe webhook is expecting a response with status code 200, otherwise it will retry after 30 seconds a maximum of 3 times total.\\n\\nURL Definition\\n\\n\\nPOST https://api.simpliroute.com/v2/plans/create-plan/ \\n\\n\\n\\nExample\\n\\n[{\\n  \\\"account_id\\\": 295,\\n  \\\"id\\\": \\\"9503f703-ba7c-41a0-b91f-3bcebeca7b17\\\",\\n  \\\"start_date\\\": \\\"2020-03-19\\\",\\n  \\\"end_date\\\": \\\"2020-03-19\\\",\\n  \\\"reset_day\\\": 1,\\n  \\\"route_ids\\\": [\\n    \\\"9894ddcd-e844-4c77-90e8-9d9a2a226f05\\\"\\n  ],\\n  \\\"fleet_id\\\": 647\\n}]\\n\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nid\\nUUID\\n\\nPlan ID\\n\\n\\naccount_id\\nint\\n\\nAccount id.\\n\\n\\nstart_date\\nDate format YYYY-MM-DD\\n\\nThe date when the plan starts.\\n\\n\\nend_date\\nDate format YYYY-MM-DD\\n\\nThe date when the plan ends.\\n\\n\\nreset_day\\nInt, 1=Monday, 2=Tuesday…, 100=no reset\\n\\nThe day when the plan resets.\\n\\n\\nroute_ids\\nArray of uuid\\n\\nList of the routes in the plan.\\n\\n\\nfleet_id\\nint\\n\\nId of the fleet assigned to the plan\\n\\n\\nWebhook Plan edition\\nSimpliRoute is able to send Webhook when a plan is edited.\\nTo use this webhook, the customer should provide a webservice prepared to process POST requests with the information detailed in the tables above.\\nThe webhook is expecting a response with status code 200, otherwise it will retry after 30 seconds a maximum of 3 times total.\\n\\nURL Definition\\n\\n\\nPOST https://api.simpliroute.com/v2/plans/edit-plan/ \\n\\n\\n\\nExample \\n\\n{\\n \\\"id\\\": \\\"9b420e42-m492-29m1-a214-f2ad927707b4\\\",\\n \\\"account\\\": {\\n   \\\"id\\\": 1,\\n   \\\"name\\\": \\\"demo@simpliroute.com\\\"\\n },\\n \\\"end_date\\\": \\\"2019-12-24\\\",\\n \\\"reset_day\\\": 1,\\n \\\"start_date\\\": \\\"2019-12-24\\\",\\n \\\"fleet_id\\\": 647,\\n \\\"routes\\\": [\\n   {\\n     \\\"id\\\": \\\"900787e1-k582-0185-9eeb-d93b68c98b85\\\",\\n     \\\"planned_date\\\": \\\"2019-12-24\\\",\\n     \\\"total_load\\\": 50,\\n     \\\"total_load_2\\\": 0,\\n     \\\"total_load_3\\\": 0,\\n     \\\"estimated_time_end\\\": \\\"11:37:00\\\",\\n     \\\"estimated_time_start\\\": \\\"09:00:00\\\",\\n     \\\"comment\\\": null,\\n     \\\"driver\\\": {\\n       \\\"id\\\": 1,\\n       \\\"name\\\": \\\"Driver Demo\\\"\\n     },\\n     \\\"vehicle\\\": {\\n       \\\"id\\\": 1,\\n       \\\"reference\\\": \\\"XXXX11\\\",\\n       \\\"name\\\": \\\"Vehicle Demo\\\"\\n     },\\n     \\\"visits\\\": [\\n       {\\n         \\\"id\\\": 20661418,\\n         \\\"title\\\": \\\"foo\\\",\\n         \\\"planned_date\\\": \\\"2019-12-24\\\",\\n         \\\"latitude\\\": \\\"-33.370405\\\",\\n         \\\"longitude\\\": \\\"-70.684798\\\",\\n         \\\"load\\\": 0,\\n         \\\"load_2\\\": 0,\\n         \\\"load_3\\\": 0,\\n         \\\"duration\\\": \\\"0:10:00\\\",\\n         \\\"estimated_time_departure\\\": \\\"09:30:00\\\",\\n         \\\"estimated_time_arrival\\\": \\\"09:20:00\\\",\\n         \\\"notes\\\": \\\"\\\",\\n         \\\"order\\\": 1\\n       },\\n       {\\n         \\\"load\\\": 25,\\n         \\\"estimated_time_departure\\\": \\\"10:00:00\\\",\\n         \\\"planned_date\\\": \\\"2019-12-24\\\",\\n         \\\"load_3\\\": 0,\\n         \\\"load_2\\\": 0,\\n         \\\"duration\\\": \\\"0:15:00\\\",\\n         \\\"estimated_time_arrival\\\": \\\"09:45:00\\\",\\n         \\\"id\\\": 20661406,\\n         \\\"title\\\": \\\"bar\\\",\\n         \\\"notes\\\": \\\"\\\",\\n         \\\"longitude\\\": \\\"-70.758134\\\",\\n         \\\"latitude\\\": \\\"-33.384390\\\",\\n         \\\"order\\\": 2\\n       },\\n       {\\n         \\\"load\\\": 0,\\n         \\\"estimated_time_departure\\\": \\\"10:24:00\\\",\\n         \\\"planned_date\\\": \\\"2019-12-24\\\",\\n         \\\"load_3\\\": 0,\\n         \\\"load_2\\\": 0,\\n         \\\"duration\\\": \\\"0:10:00\\\",\\n         \\\"estimated_time_arrival\\\": \\\"10:14:00\\\",\\n         \\\"id\\\": 20661420,\\n         \\\"title\\\": \\\"foo-bar\\\",\\n         \\\"notes\\\": \\\"\\\",\\n         \\\"longitude\\\": \\\"-70.703681\\\",\\n         \\\"latitude\\\": \\\"-33.427045\\\",\\n         \\\"order\\\": 3\\n       }       \\n     ]     \\n   }\\n ]\\n}\\nPlan Object\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nid\\nUUID\\n\\nPlan ID\\n\\n\\naccount {id, name}\\nid: int - name: string.\\n\\nAccount information.\\n\\n\\nstart_date\\nDate format YYYY-MM-DD\\n\\nThe date when the plan starts.\\n\\n\\nend_date\\nDate format YYYY-MM-DD\\n\\nThe date when the plan ends.\\n\\n\\nreset_day\\nInt, 1=Monday, 2=Tuesday…, 100=no reset\\n\\nThe day when the plan resets.\\n\\n\\nfleet_id\\nint\\n\\nId of the fleet assigned to the plan\\n\\n\\nroutes\\nlist(Route)\\n\\nList of the routes in the plan. See Route Object for details.\\n\\n\\nRoute Object\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nid\\nUUID\\n\\nId of the route in SimpliRoute.\\n\\n\\nplanned_date\\ndate (YYYY-MM-DD)\\n\\nDate of the route\\n\\n\\ntotal_load\\ndouble\\n\\nThe total load 1 of the route.\\n\\n\\ntotal_load2\\ndouble\\n\\nThe total load 2 of the route.\\n\\n\\ntotal_load_3\\ndouble\\n\\nThe total load 3 of the route.\\n\\n\\nestimated_time_start\\ntime (hh:mm:ss)\\n\\nEstimated time of the route to start in local timezone of the account.\\n\\n\\nestimated_time_end\\ntime (hh:mm:ss)\\n\\nEstimated time of the route to end in local timezone of the account.\\n\\n\\ncomment\\nstring\\n\\nComment of the route.\\n\\n\\ndriver {id, name}\\nid: id of the driver in SimpliRoute- name: name of the driver\\n\\nDriver information.\\n\\n\\nvehicle  {id, reference, name}\\nid: id of the vehicle in SimpliRoute.reference: reference id, it could be the licence plate for example.name: name of the vehicle in SimpliRoute\\n\\nVehicle information\\n\\n\\nvisits\\nlist(Visit)\\n\\nList of the visits in the route. See Visit Object for details.\\n\\n\\nVisit Object\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nid\\nint\\n\\nId of the visit in SimpliRoute.\\n\\n\\ntitle\\nstring\\n\\nTitle of the visit.\\n\\n\\nplanned_date\\nDate format YYYY-MM-DD\\n\\nDate of the delivery.\\n\\n\\nlatitude\\ndouble\\n\\nThe date when the plan ends.\\n\\n\\nlongitude\\ndouble\\n\\nThe day when the plan resets.\\n\\n\\nload\\ndouble\\n\\nLoad 1.\\n\\n\\nload2\\ndouble\\n\\nLoad 2.\\n\\n\\nload3\\ndouble\\n\\nLoad 3.\\n\\n\\nduration\\ndouble\\n\\nService time of the visit.\\n\\n\\nestimated_time_arrival\\ndouble\\n\\nEstimated time to arrive to the visit.\\n\\n\\nestimated_time_departure\\ndouble\\n\\nEstimated time of departure from the visit. It should be estimated_time_arrival + duration.\\n\\n\\nnotes\\nstring\\n\\nNotes of the visit.\\n\\n\\norder\\nint\\n\\nOrder of the visit in the route\\n\\n\\nWebhook Route creation\\nSimpliRoute can send Webhooks for route creation, the available information is detailed in the table below. At the time the route is created using the POST method with headers that the client can specify.\\nThe webhook expects a response with status code 200; otherwise, it will try again after 30 seconds, a maximum of 3 times in total.\\n\\nExample body\\n\\n{\\n  \\\"id\\\": \\\"e5bb5b51-d494-483f-8180-ace00c89c06d\\\",\\n  \\\"comment\\\": null,\\n  \\\"planned_date\\\": \\\"2024-01-12\\\",\\n  \\\"plan\\\": {\\n    \\\"id\\\": \\\"1ef9f5c4-2197-41da-8f23-adfcabd272b5\\\",\\n    \\\"name\\\": \\\"12-01-2024 14:53:03\\\"\\n  },\\n  \\\"driver\\\": {\\n    \\\"id\\\": 118553,\\n    \\\"name\\\": \\\"rapidoqa1\\\"\\n  },\\n  \\\"route_start\\\": {\\n    \\\"lat\\\": \\\"-33.449977\\\",\\n    \\\"lon\\\": \\\"-70.654465\\\",\\n    \\\"address\\\": \\\"Lord Cochrane 298, Santiago, Chile\\\",\\n    \\\"start_time\\\": null,\\n    \\\"estimated_time_start\\\": \\\"09:42:00\\\"\\n  },\\n  \\\"route_end\\\": {\\n    \\\"lat\\\": \\\"-33.449977\\\",\\n    \\\"lon\\\": \\\"-70.654465\\\",\\n    \\\"address\\\": \\\"Lord Cochrane 298, Santiago, Chile\\\",\\n    \\\"estimated_time_end\\\": \\\"10:08:00\\\",\\n    \\\"end_time\\\": null\\n  },\\n  \\\"visit_ids\\\": [\\n    370679703\\n  ],\\n  \\\"info_visits\\\": [\\n    {\\n      \\\"id\\\": 370679703,\\n      \\\"reference\\\": \\\"\\\",\\n      \\\"tracking_id\\\": \\\"SR68561793642931\\\",\\n      \\\"order\\\": 1,\\n      \\\"estimated_time_arrival\\\":\\\"09:42:00\\\",\\n      \\\"notes\\\":\\\"notes\\\"\\n    }\\n  ],\\n  \\\"vehicle\\\": {\\n    \\\"id\\\": 266603,\\n    \\\"name\\\": \\\"VEH1F\\\",\\n    \\\"reference\\\": \\\"XXX333\\\"\\n  },\\n  \\\"timestamp\\\": \\\"2024-01-30 15:14:45.708968\\\",\\n  \\\"order\\\": 3,\\n  \\\"status\\\": \\\"created\\\"\\n}\\n\\n\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nvehicle {id, name}\\nid: int - name: string\\n\\nVehicle information.\\n\\n\\nplan {id, name}\\nid: int - name: string\\n\\nPlan information\\n\\n\\ntimestamp\\ntimestamp\\n\\nUTC timestamp of the creation of the route.\\n\\n\\nroute_start {lat, lon, start_time, estimated_time_start, address}\\nlat: float - lon: float - start_time: time - estimated_time_start: time - address: string\\n\\nRoute start information. start_time is the time that the driver started the route, so it will be null always at this point, but if we extend this webhook in the future for edition it will have the “real” start_time.\\n\\n\\nroute_end {lat, lon, end_time, estimated_time_end, address}\\nlat: float - lon: float - end_time: time - estimated_time_end: time- address: string.\\n\\nRoute end information\\n\\n\\nplanned_date\\nDate in format YYYY-MM-DD.\\n\\nDate for the route.\\n\\n\\nvisit_ids\\nid\\n\\nList of the visit ids in the route.\\n\\n\\ndriver {id, name}\\nid: int - name: string.\\n\\nDriver information.\\n\\n\\norder\\nint\\n\\nshow the order of the vehicle route.\\n\\n\\nstatus\\nstring\\n\\nDisplay the operation's status event, 'created'\\n\\n\\nWebhook Route edition\\nSimpliRoute can send Webhooks for route edition, the available information is detailed in the table below. At the time the route is updated using the POST method with headers that the client can specify.\\nThe webhook expects a response with status code 200; otherwise, it will try again after 30 seconds, a maximum of 3 times in total.\\n\\nExample body\\n\\n[\\n  {  \\n   \\\"vehicle\\\":{  \\n      \\\"id\\\":1,\\n      \\\"name\\\":\\\"Test\\\",\\n      \\\"reference\\\": \\\"1234FF\\\"\\n   },\\n   \\\"plan\\\":{  \\n      \\\"id\\\":\\\"528e6fa8-129d-4049-9a3c-8ad5ea12502e\\\",\\n      \\\"name\\\":\\\"Plan name\\\"\\n   },\\n   \\\"timestamp\\\":\\\"2019-07-17 14:32:14.799962\\\",\\n   \\\"route_start\\\":{  \\n      \\\"lat\\\":\\\"-33.448890\\\",\\n      \\\"start_time\\\":null,\\n      \\\"estimated_time_start\\\":\\\"09:00:00\\\",\\n      \\\"lon\\\":\\\"-70.669265\\\",\\n      \\\"address\\\":\\\"Santiago, Chile\\\"\\n   },\\n   \\\"route_end\\\":{  \\n      \\\"lat\\\":\\\"-33.448890\\\",\\n      \\\"lon\\\":\\\"-70.669265\\\",\\n      \\\"end_time\\\":null,\\n      \\\"estimated_time_end\\\":\\\"16:23:00\\\",\\n      \\\"address\\\":\\\"Santiago, Chile\\\"\\n   },\\n   \\\"planned_date\\\":\\\"2019-07-17\\\",\\n   \\\"visit_ids\\\":[15901924, 15901923, 15901922, 15901921, 15901920, 15901919, 15901918, 15901917, 15901916, 15901915, 15901914, 15901913, 15901912, 15901911, 15901910, 15901909],\\n   \\\"info_visits\\\": [\\n        {\\n          \\\"id\\\": 15901924, \\\"reference\\\": \\\"\\\", \\\"tracking_id\\\": \\\"SR88515397622033\\\", \\\"order\\\": 1,   \\\"estimated_time_arrival\\\":\\\"09:42:00\\\", \\\"notes\\\":\\\"notes\\\",\\n          \\\"id\\\": 15901923, \\\"reference\\\": \\\"\\\", \\\"tracking_id\\\": \\\"SR88515397622034\\\", \\\"order\\\": 2, \\\"estimated_time_arrival\\\":\\\"09:42:00\\\", \\\"notes\\\":\\\"notes\\\",\\n          \\\"id\\\": 15901922, \\\"reference\\\": \\\"\\\", \\\"tracking_id\\\": \\\"SR88515397622035\\\", \\\"order\\\": 3, \\\"estimated_time_arrival\\\":\\\"09:42:00\\\", \\\"notes\\\":\\\"notes\\\",\\n          \\\"id\\\": 15901921, \\\"reference\\\": \\\"\\\", \\\"tracking_id\\\": \\\"SR88515397622036\\\", \\\"order\\\": 4, \\\"estimated_time_arrival\\\":\\\"09:42:00\\\", \\\"notes\\\":\\\"notes\\\"\\n        }\\n    ],\\n   \\\"driver\\\":{  \\n      \\\"id\\\":23870,\\n      \\\"name\\\":\\\"Conductor 1\\\"\\n   },\\n   \\\"order\\\":1,\\n   \\\"status\\\":\\\"edited\\\",\\n   \\\"id\\\":\\\"51019ab7-c464-4503-bcd6-d00c3d6209f2\\\"\\n}]\\n\\n\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nvehicle {id, name}\\nid: int - name: string\\n\\nVehicle information.\\n\\n\\nplan {id, name}\\nid: int - name: string\\n\\nPlan information\\n\\n\\ntimestamp\\ntimestamp\\n\\nUTC timestamp of the creation of the route.\\n\\n\\nroute_start {lat, lon, start_time, estimated_time_start, address}\\nlat: float - lon: float - start_time: time - estimated_time_start: time - address: string\\n\\nRoute start information. start_time is the time that the driver started the route, so it will be null always at this point, but if we extend this webhook in the future for edition it will have the “real” start_time.\\n\\n\\nroute_end {lat, lon, end_time, estimated_time_end, address}\\nlat: float - lon: float - end_time: time - estimated_time_end: time- address: string.\\n\\nRoute end information\\n\\n\\nplanned_date\\nDate in format YYYY-MM-DD.\\n\\nDate for the route.\\n\\n\\nvisit_ids\\nid\\n\\nList of the visit ids in the route.\\n\\n\\ninfo_visits\\nlist(visit)\\n\\nList of the visits in the route.\\n\\n\\ndriver {id, name}\\nid: int - name: string.\\n\\nDriver information.\\n\\n\\norder\\nint\\n\\nshow the order of the vehicle route.\\n\\n\\nstatus\\nstring\\n\\nDisplay the operation's status event, indicating whether the route has been edited or deleted.\\n\\n\\nWebhook Route started\\nSimpliRoute is able to send Webhook for route started, the information available is detailed in the table above at the moment the route is started using POST method with headers that can be specified by the customer.\\nThe webhook is expecting a response with status code 200, otherwise it will retry after 30 seconds a maximum of 3 times total.\\n\\nUrl Definition\\n\\n\\nPOST https://api.simpliroute.com/v1/events/register/\\n\\n\\nExample request\\n\\n\\ncurl \\n--location \\n--request POST 'http://api.simpliroute.com/v1/events/register/' \\\\\\n--header 'Authorization: Token b2de5a16bccec465aeb9083a4db41e1666520uij' \\\\\\n--header 'content-type: application/json;charset=UTF-8' \\\\\\n--header 'Content-Type: text/plain' \\\\\\n--data-raw '{\\n    \\\"date_time\\\" : \\\"2020-05-27 16:35:00\\\",\\n    \\\"route_id\\\": \\\"402ecd99-a0c9-418c-9cd9-088a0cb70242\\\",\\n    \\\"type\\\" : \\\"ROUTE_STARTED\\\"\\n}'\\n\\n\\nExample \\n\\n[\\n{\\n  \\\"vehicle\\\": {\\n    \\\"id\\\": 101174,\\n    \\\"name\\\": \\\"KGST\\\"\\n  },\\n  \\\"plan\\\": {\\n    \\\"id\\\": \\\"728c5d34-ff14-4ccf-9fd8-16257f4332e9\\\",\\n    \\\"name\\\": \\\"26-05-2020 21:37:25\\\"\\n  },\\n  \\\"timestamp\\\": \\\"2020-05-27 20:43:40.650476\\\",\\n  \\\"route_start\\\": {\\n    \\\"lat\\\": \\\"-33.459425\\\",\\n    \\\"start_time\\\": \\\"2020-05-27 16:35:00+00:00\\\",\\n    \\\"estimated_time_start\\\": \\\"09:00:00\\\",\\n    \\\"lon\\\": \\\"-70.654531\\\",\\n    \\\"address\\\": \\\"Aldunate 1047, Santiago, Región Metropolitana, Chile\\\"\\n  },\\n  \\\"route_end\\\": {\\n    \\\"lat\\\": \\\"-33.459425\\\",\\n    \\\"lon\\\": \\\"-70.654531\\\",\\n    \\\"end_time\\\": null,\\n    \\\"estimated_time_end\\\": \\\"09:15:00\\\",\\n    \\\"address\\\": \\\"Aldunate 1047, Santiago, Región Metropolitana, Chile\\\"\\n  },\\n  \\\"planned_date\\\": \\\"2020-05-26\\\",\\n  \\\"visit_ids\\\": [\\n    32397185\\n  ],\\n  \\\"driver\\\": {\\n    \\\"id\\\": 26351,\\n    \\\"name\\\": \\\"Flash\\\"\\n  },\\n  \\\"id\\\": \\\"e1d12cf7-25c6-4f01-98d5-83a52c9b3aed\\\"\\n}\\n]\\n\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nvehicle {id, name}\\nid: int - name: string\\n\\nVehicle information.\\n\\n\\nplan {id, name}\\nid: int - name: string\\n\\nPlan information\\n\\n\\ntimestamp\\ntimestamp\\n\\nUTC timestamp of the creation of the route.\\n\\n\\nroute_start {lat, lon, start_time, estimated_time_start, address}\\nlat: float - lon: float - start_time: time - estimated_time_start: time - address: string\\n\\nRoute start information. start_time is the time that the driver started the route, so it will be null always at this point, but if we extend this webhook in the future for edition it will have the “real” start_time.\\n\\n\\nroute_end {lat, lon, end_time, estimated_time_end, address}\\nlat: float - lon: float - end_time: time - estimated_time_end: time- address: string.\\n\\nRoute end information\\n\\n\\nplanned_date\\nDate in format YYYY-MM-DD.\\n\\nDate for the route.\\n\\n\\nvisit_ids\\nid\\n\\nList of the visit ids in the route.\\n\\n\\ndriver {id, name}\\nid: int - name: string.\\n\\nDriver information.\\n\\n\\nid\\nid\\n\\nString with the route id.\\n\\n\\nWebhook Route Finish\\nSimpliRoute is able to send Webhook for finished route, the information available is detailed in the table above at the moment the route is started using POST method with headers that can be specified by the customer.\\nThe webhook is expecting a response with status code 200, otherwise it will retry after 30 seconds a maximum of 3 times total.\\n\\nUrl Definition\\n\\n\\nPOST https://api.simpliroute.com/v1/events/register/\\n\\n\\nExample request\\n\\ncurl \\n--location \\n--request POST 'http://api.simpliroute.com/v1/events/register/' \\\\\\n--header 'Authorization: Token b2de5a16bccec465aeb9083a4db41e1666520uij' \\\\\\n--header 'content-type: application/json;charset=UTF-8' \\\\\\n--header 'Content-Type: text/plain' \\\\\\n--data-raw '{\\n    \\\"date_time\\\" : \\\"2020-05-27 17:35:00\\\",\\n    \\\"route_id\\\": \\\"402ecd99-a0c9-418c-9cd9-088a0cb70242\\\",\\n    \\\"type\\\" : \\\"ROUTE_FINISHED\\\"\\n}'\\n\\n\\n\\n\\nExample \\n\\n[{\\n  \\\"vehicle\\\": {\\n    \\\"id\\\": 101174,\\n    \\\"name\\\": \\\"KGST\\\"\\n  },\\n  \\\"plan\\\": {\\n    \\\"id\\\": \\\"728c5d34-ff14-4ccf-9fd8-16257f4332e9\\\",\\n    \\\"name\\\": \\\"26-05-2020 21:37:25\\\"\\n  },\\n  \\\"timestamp\\\": \\\"2020-05-27 20:46:01.471879\\\",\\n  \\\"route_start\\\": {\\n    \\\"lat\\\": \\\"-33.459425\\\",\\n    \\\"start_time\\\": \\\"2020-05-27 16:35:00+00:00\\\",\\n    \\\"estimated_time_start\\\": \\\"09:00:00\\\",\\n    \\\"lon\\\": \\\"-70.654531\\\",\\n    \\\"address\\\": \\\"Aldunate 1047, Santiago, Región Metropolitana, Chile\\\"\\n  },\\n  \\\"route_end\\\": {\\n    \\\"lat\\\": \\\"-33.459425\\\",\\n    \\\"lon\\\": \\\"-70.654531\\\",\\n    \\\"end_time\\\": \\\"2020-05-27 17:35:00+00:00\\\",\\n    \\\"estimated_time_end\\\": \\\"09:15:00\\\",\\n    \\\"address\\\": \\\"Aldunate 1047, Santiago, Región Metropolitana, Chile\\\"\\n  },\\n  \\\"planned_date\\\": \\\"2020-05-26\\\",\\n  \\\"visit_ids\\\": [\\n    32397185\\n  ],\\n  \\\"driver\\\": {\\n    \\\"id\\\": 26351,\\n    \\\"name\\\": \\\"Flash\\\"\\n  },\\n  \\\"id\\\": \\\"e1d12cf7-25c6-4f01-98d5-83a52c9b3aed\\\"\\n}\\n]\\n\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nvehicle {id, name}\\nid: int - name: string\\n\\nVehicle information.\\n\\n\\nplan {id, name}\\nid: int - name: string\\n\\nPlan information\\n\\n\\ntimestamp\\ntimestamp\\n\\nUTC timestamp of the creation of the route.\\n\\n\\nroute_start {lat, lon, start_time, estimated_time_start, address}\\nlat: float - lon: float - start_time: time - estimated_time_start: time - address: string\\n\\nRoute start information. start_time is the time that the driver started the route, so it will be null always at this point, but if we extend this webhook in the future for edition it will have the “real” start_time.\\n\\n\\nroute_end {lat, lon, end_time, estimated_time_end, address}\\nlat: float - lon: float - end_time: time - estimated_time_end: time- address: string.\\n\\nRoute end information\\n\\n\\nplanned_date\\nDate in format YYYY-MM-DD.\\n\\nDate for the route.\\n\\n\\nvisit_ids\\nid\\n\\nList of the visit ids in the route.\\n\\n\\ndriver {id, name}\\nid: int - name: string.\\n\\nDriver information.\\n\\n\\nWebhook  On it`s way\\nSimpliRoute can send visit information at the time an on 'its way' event is launched by calling a POST method to a webservice provided by clients, the available information is described in the following table (not necessarily in that order) .\\nThe webhook expects to get a response with code 200, it will retry every 30 seconds with a maximum of 3 attempts.\\n\\nExample body\\n\\n\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nid\\nint\\nId of the visit in SimpliRoute.\\n\\n\\n\\nload\\ndouble\\nLoad 1.\\n\\n\\n\\nload2\\ndouble\\nLoad 2.\\n\\n\\n\\nload3\\ndouble\\nLoad 3.\\n\\n\\n\\nwindow_start\\nTime\\nInitial Hour when the visit can be visit\\n\\n\\n\\nwindow_end\\nTime\\nFinal Hour when the visit can be visit\\n\\n\\n\\nwindow_start_2\\nTime\\nInitial Hour when the visit can be visit\\n\\n\\n\\nwindow_end_2\\nTime\\nFinal Hour when the visit can be visit\\n\\n\\n\\nreference\\nString\\nReference or internal identifier of the company. Example: Invoice or order number.\\n\\n\\n\\nplanned_date date\\nYYYY-MM-DD\\nDate for the route.\\n\\n\\n\\norder\\nint\\nplanned delivery order\\n\\n\\n\\ncheckout_comment\\ntext\\nComments on delivery time\\n\\n\\n\\nduration\\ntime\\nService time\\n\\n\\n\\ncalculated_service_time\\ntime\\nCalculated service time\\n\\n\\n\\ntitle\\nvarchar(254)\\nVisit Title.\\n\\n\\n\\ncontact_name\\nvarchar(254)\\nContact name\\n\\n\\n\\ncontact_email\\ntext\\ne-mail contat\\n\\n\\n\\ncontact_phone\\nvarchar(254)\\nContact phone\\n\\n\\n\\nnotes\\ntext\\nNotes of the visit\\n.\\n\\n\\nlatitude\\nnumeric(9,6)\\nLatitud of the visit\\n\\n\\n\\nlongitude\\nnumeric(9,6)\\nLongitud of the visit\\n\\n\\n\\nstatus\\nvarchar(100)\\nStatus of the visit: pending, completed or failed.\\n\\n\\n\\naddress\\nvarchar(254)\\nAddress of the visit\\n\\n\\n\\naccount\\nvarchar(254)\\nAccount name\\n\\n\\n\\nroute\\nvarchar(254)\\nRoute name.\\n\\n\\n\\nstatus_changed\\ntimestamp\\nDate and time of the last status change.\\n\\n\\n\\npriority_level\\nint\\nVisit priority.\\n\\n\\n\\ncreated\\ntimestamp\\nCreation time of the visit.\\n\\n\\n\\nmodified\\ntimestamp\\nTime of the last modification of the visit.\\n\\n\\n\\nestimated_time_arrival\\ntime\\nestimated time of arrival to the visit.\\n\\n\\n\\ncurrent_eta\\ndate\\nEstimated time of arrival of the visit.\\n\\n\\n\\nestimated_time_departure\\ntime\\nestimated time of departure from the visit.\\n\\n\\n\\ntracking_id\\nvarchar(254)\\nTracking id.\\n\\n\\n\\nsignature\\nvarchar(100)\\nAddress where the signature is stored\\n\\n\\n\\ncheckin_time\\ntimestamp\\nArrival time at visit (by GPS driver).\\n\\n\\n\\ncheckin_latitude\\nnumeric(9,6)\\nLatitude of arrival at the visit.\\n\\n\\n\\ncheckin_longitude\\nnumeric(9,6)\\nLongitude of arrival at visit.\\n\\n\\n\\ncheckout_longitude\\nnumeric(9,6)\\nLongitude of checkout.\\n\\n\\n\\ncheckout_observation\\nuuid\\nId of the observation selected at checkout.\\n\\n\\n\\ncheckout_latitude\\nnumeric(9,6)\\nLatitude of checkout\\n\\n\\n\\ncheckout_time\\ntimestamp\\nCheckout date and time.\\n\\n\\n\\ngeocode_alert\\nvarchar(22)\\nAlert when georeferencing the address.\\n\\n\\n\\npostal_code\\nvarchar(15)\\nZip Code if the visit.\\n\\n\\n\\nprogrammed_date\\ndate\\nScheduled date of visit.\\n\\n\\n\\nvisit_type\\njson\\nType of the visit that is being made.\\n\\n\\n\\nfleet\\njson\\nInformation of the fleet to which the visit belongs.\\n\\n\\n\\nhas_alert\\nboolean\\nDeprecated.\\n\\n\\n\\npriority\\nboolean\\nDeprecated.\\n\\n\\n\\nWebhook Checkout\\nSimpliRoute can send information about the visit at the time of checkout through a POST method call to a webservice provided by clients, the available information is described in the following table (not necessarily in that order).\\nThe webhook expects to get a response with code 200, it will retry every 30 seconds with a maximum of 3 attempts.\\n\\nExample body\\n\\nEjemplo:\\n[{\\n   \\\"id\\\": 18843965,\\n   \\\"load\\\": 0.0,\\n   \\\"load_2\\\": 0.0,\\n   \\\"load_3\\\": 0.0,\\n   \\\"window_start\\\": \\\"09:00:00\\\",\\n   \\\"window_end\\\": \\\"19:00:00\\\",\\n   \\\"window_start_2\\\": \\\"23:59:00\\\",\\n   \\\"window_end_2\\\": \\\"23:59:00\\\",\\n   \\\"reference\\\": \\\"\\\",\\n   \\\"planned_date\\\": \\\"2019-09-09\\\",\\n   \\\"order\\\": 4,\\n   \\\"checkout_comment\\\": \\\"Test\\\",\\n   \\\"duration\\\": \\\"0:20:00\\\",\\n   \\\"calculated_service_time\\\": \\\"0:00:00\\\",\\n   \\\"title\\\": \\\"INDUSTRIAS RIC\\\\u00d3N\\\",\\n   \\\"contact_name\\\": \\\"Victor Gonzalez\\\",\\n   \\\"contact_email\\\": \\\"\\\",\\n   \\\"contact_phone\\\": \\\"978567812\\\",\\n   \\\"notes\\\": \\\"\\\",\\n   \\\"latitude\\\": \\\"-33.439046\\\",\\n   \\\"longitude\\\": \\\"-70.648752\\\",\\n   \\\"status\\\": \\\"completed\\\",\\n   \\\"address\\\": \\\"HUERFANOS 835 OF. 202, SANTIAGO, Santiago\\\",\\n   \\\"account\\\": \\\"demo_apple@simpliroute.com\\\",\\n   \\\"route\\\": \\\"2019-09-09 - Test\\\",\\n   \\\"status_changed\\\": \\\"2019-09-09 21:23:01.251595+00:00\\\",\\n   \\\"priority_level\\\": 0,\\n   \\\"created\\\": \\\"2019-08-29 22:33:44.015108+00:00\\\",\\n   \\\"modified\\\": \\\"2019-09-09 21:23:01.251582+00:00\\\",\\n   \\\"estimated_time_arrival\\\": \\\"10:12:00\\\",\\n   \\\"estimated_time_departure\\\": \\\"10:32:00\\\",\\n   \\\"tracking_id\\\": \\\"SR67118024023080\\\",\\n   \\\"signature\\\": \\\"visit-signatures/2019/09/09/ac6bf49a-35b.png\\\",\\n   \\\"checkin_time\\\": null,\\n   \\\"checkin_latitude\\\": null,\\n   \\\"checkin_longitude\\\": null,\\n   \\\"checkout_observation\\\": null,\\n   \\\"checkout_latitude\\\": \\\"-33.420471\\\",\\n   \\\"checkout_longitude\\\": \\\"-70.603384\\\",\\n   \\\"checkout_time\\\": \\\"2019-09-09 21:22:56.068000+00:00\\\",\\n   \\\"on_its_way\\\": null,\\n   \\\"geocode_alert\\\": null,\\n   \\\"has_alert\\\": false,\\n   \\\"priority\\\": false\\n}]\\n\\n\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nid\\nint\\n\\nId of the visit in SimpliRoute\\n\\n\\nload\\ndouble\\n\\nLoad 1\\n\\n\\nload2\\ndouble\\n\\nLoad 2\\n\\n\\nload3\\ndouble\\n\\nLoad 3\\n\\n\\nwindow_start\\ntime\\n\\nStart time window 1. Format HH:MM:SS\\n\\n\\nwindow_end\\ntime\\n\\nEnd time window 1. Format HH:MM:SS\\n\\n\\nwindow_start_2\\ntime\\n\\nStart time window 2. Format HH:MM:SS\\n\\n\\nwindow_end_2\\ntime\\n\\nEnd time window 2. Format HH:MM:SS.\\n\\n\\nreference\\nvarchar(254)\\n\\nVisit reference\\n\\n\\nplanned_date\\ndate\\n\\nDelivery date. Format YYYY-MM-DD\\n\\n\\norder\\nint\\n\\nPlanned delivery order\\n\\n\\ncheckout_comment\\nstring\\n\\nComments upon delivery\\n\\n\\nduration\\ntime\\n\\nService time of the visit\\n\\n\\ncheckout_comment\\nstring\\n\\nComments upon delivery\\n\\n\\nduration\\ntime\\n\\nService time\\n\\n\\ncalculated_service_time\\ntime\\n\\nCalculated service time\\n\\n\\ntitle\\nvarchar(254)\\n\\nTitle of the visit\\n\\n\\ncontact_name\\nvarchar(254)\\n\\nContact name\\n\\n\\ncontact_email\\nstring\\n\\nContact e mail\\n\\n\\ncontact_phone\\nvarchar(254)\\n\\nContact phone number\\n\\n\\nnotes\\nstring\\n\\nNotes of the visit\\n\\n\\nlatitude\\ndouble\\n\\nLatitude of the visit\\n\\n\\nlongitude\\ndouble\\n\\nLongitude of the visit\\n\\n\\nstatus\\nvarchar(100)\\n\\nStatus of the visit: pending, completed, failed, partial\\n\\n\\naddress\\nvarchar(254\\n\\nAddress of the visit\\n\\n\\naccount\\nvarchar(254\\n\\nAccount name\\n\\n\\nroute\\nvarchar(254\\n\\nRoute name\\n\\n\\nstatus_changed\\ntimestamp\\n\\nDate and time of the last status change\\n\\n\\npriority_level\\ninteger\\n\\nPriority of the Visit. Ej 1 high priority, 2 second priority\\n\\n\\ncreated\\ntimestamp\\n\\nCreation time of the visit.\\n\\n\\nmodified\\ntimestamp\\n\\nTime of the last modification of the visit.\\n\\n\\nestimated_time_arrival\\ntime\\n\\nEstimated time of arrival for the visit\\n\\n\\nestimated_time_departure\\ntime\\n\\nEstimated time of departure from the visit.\\n\\n\\ntracking_id\\nvarchar(254)\\n\\nId of tracking\\n\\n\\nsignature\\nvarchar(100)\\n\\nAddress where the signature is stored.\\n\\n\\ncheckin_time\\ntimestamp\\n\\nArrival time for the visit (by GPS driver).\\n\\n\\ncheckin_latitude\\ndouble\\n\\nLatitude of arrival at the visit\\n\\n\\ncheckin_longitude\\ndoube\\n\\nLongitude of arrival at the visit\\n\\n\\ncheckout_observation\\nuuid\\n\\nId of the observation selected at checkout\\n\\n\\ncheckout_latitude\\ndouble\\n\\nCheckout latitude\\n\\n\\ncheckout_longitude\\ndouble\\n\\nCheckout longitude\\n\\n\\ncheckout_time\\ntimestamp\\n\\nCheckout date and time\\n\\n\\non_its_way\\ntimestamp\\n\\nDate and time when “On its way” was marked.\\n\\n\\ngeocode_alert\\n\\n\\nAlert when georeferencing the address\\n\\n\\nWebhook Checkout detailed\\nSimpliRoute can send detailed information about the visit at the time of checkout through a POST method call to a webservice provided by the clients, the information available is described in the following table (not necessarily in that order).\\nThe webhook expects to get a response with code 200, it will retry every 30 seconds with a maximum of 3 attempts.\\n\\nExample \\n\\n{\\n    \\\"load\\\": 50.0,\\n    \\\"window_start\\\": \\\"09:00:00\\\",\\n    \\\"reference\\\": \\\"96018725010003\\\",\\n    \\\"planned_date\\\": \\\"2020-09-02\\\",\\n    \\\"has_alert\\\": false,\\n    \\\"address\\\": \\\"SANTA MARIA 2670, PROVIDENCIA, Santiago\\\",\\n    \\\"load_3\\\": 0.0,\\n    \\\"load_2\\\": 0.0,\\n    \\\"programmed_date\\\": null,\\n    \\\"window_end\\\": \\\"19:00:00\\\",\\n    \\\"postal_code\\\": null,\\n    \\\"longitude\\\": \\\"-70.609643\\\",\\n    \\\"duration\\\": \\\"0:20:00\\\",\\n    \\\"status_changed\\\": \\\"2020-09-02 22:36:12.886508+00:00\\\",\\n    \\\"contact_name\\\": \\\"Paulina Mu\\\\u00f1oz\\\",\\n    \\\"id\\\": 44678051,\\n    \\\"window_start_2\\\": \\\"23:59:00\\\",\\n    \\\"visit_type\\\": null,\\n    \\\"title\\\": \\\"CONFITERIA SAN RODRIGO\\\",\\n    \\\"pictures\\\": [\\n    \\\"https://simpli-visit-images-dev.s3.amazonaws.com/visit-pictures/2020/09/02/vi93grwrv.jpg\\\"\\n    ],\\n    \\\"checkout_longitude\\\": \\\"-122.406417\\\",\\n    \\\"priority\\\": false,\\n    \\\"checkout_observation\\\": null,\\n    \\\"latitude\\\": \\\"-33.416713\\\",\\n    \\\"contact_phone\\\": \\\"967603803\\\",\\n    \\\"status\\\": \\\"completed\\\",\\n    \\\"estimated_time_departure\\\": \\\"09:37:00\\\",\\n    \\\"route\\\": {\\n        \\\"comment\\\": \\\"Comentario\\\",\\n        \\\"vehicle\\\": { \\n            \\\"id\\\": 153969, \\n            \\\"name\\\": \\\"asd\\\",\\n            \\\"reference\\\": \\\"1234FF\\\"\\n        },\\n        \\\"plan\\\": {\\n            \\\"id\\\": \\\"9ab4c716-020d-44cd-a90c-4dc88cabf884\\\",\\n            \\\"name\\\": \\\"2-09-2020 18:34:49\\\"\\n        },\\n        \\\"timestamp\\\": \\\"2020-09-02 22:36:16.361577\\\",\\n        \\\"route_start\\\": {\\n            \\\"lat\\\": \\\"-33.415468\\\",\\n            \\\"start_time\\\": \\\"2020-09-02 22:35:48.034000+00:00\\\",\\n            \\\"estimated_time_start\\\": \\\"09:00:00\\\",\\n            \\\"lon\\\": \\\"-70.667961\\\",\\n            \\\"address\\\": \\\"Avenida Domingo Santa Mar\\\\u00eda 12, Independencia, Chile\\\"\\n        },\\n        \\\"route_end\\\": {\\n            \\\"lat\\\": \\\"-33.415468\\\",\\n            \\\"lon\\\": \\\"-70.667961\\\",\\n            \\\"end_time\\\": null,\\n            \\\"estimated_time_end\\\": \\\"11:41:00\\\",\\n            \\\"address\\\": \\\"Avenida Domingo Santa Mar\\\\u00eda 12, Independencia, Chile\\\"\\n        },\\n        \\\"planned_date\\\": \\\"2020-09-02\\\",\\n        \\\"visit_ids\\\": [44678051, 44678052, 44678053, 44678054, 44678055],\\n        \\\"driver\\\": { \\\"id\\\": 75388, \\\"name\\\": \\\"f\\\" },\\n        \\\"id\\\": \\\"e05b954e-754d-4774-b91b-000859eef55b\\\"\\n    },\\n    \\\"window_end_2\\\": \\\"23:59:00\\\",\\n    \\\"extra_field_values\\\": {\\n        \\\"numero_interior\\\": null,\\n        \\\"cantidad\\\": null,\\n        \\\"codigo_postal\\\": null,\\n        \\\"entre_calles_1\\\": null,\\n        \\\"edificio\\\": null,\\n        \\\"comentarios\\\": null,\\n        \\\"remision\\\": null\\n    },\\n    \\\"checkout_time\\\": \\\"2020-09-02 22:36:12.330000+00:00\\\",\\n    \\\"geocode_alert\\\": null,\\n    \\\"contact_email\\\": \\\"diego.araneda@simplit-solutions.com\\\",\\n    \\\"current_eta\\\": null,\\n    \\\"calculated_service_time\\\": \\\"0:00:00\\\",\\n    \\\"account\\\": { \\\"id\\\": 28387, \\\"name\\\": \\\"11FabianUrrutia\\\" },\\n    \\\"priority_level\\\": 0,\\n    \\\"checkout_latitude\\\": \\\"37.785834\\\",\\n    \\\"observation\\\": {},\\n    \\\"created\\\": \\\"2020-09-02 22:35:01.950457+00:00\\\",\\n    \\\"on_its_way\\\": null,\\n    \\\"checkin_time\\\": null,\\n    \\\"modified\\\": \\\"2020-09-02 22:36:12.886496+00:00\\\",\\n    \\\"checkout_comment\\\": \\\"Comentario del conductor\\\",\\n    \\\"order\\\": 1,\\n    \\\"estimated_time_arrival\\\": \\\"09:17:00\\\",\\n    \\\"tracking_id\\\": \\\"SR99086101951738\\\",\\n    \\\"signature\\\": \\\"\\\",\\n    \\\"checkin_latitude\\\": null,\\n    \\\"fleet\\\": null,\\n    \\\"notes\\\": \\\"\\\",\\n    \\\"checkin_longitude\\\": null,\\n    \\\"plan\\\": {\\n        \\\"route_ids\\\": [\\\"e05b954e-754d-4774-b91b-000859eef55b\\\"],\\n        \\\"fleet_id\\\": null,\\n        \\\"name\\\": \\\"2-09-2020 18:34:49\\\",\\n        \\\"end_date\\\": \\\"2020-09-02\\\",\\n        \\\"reset_day\\\": 1,\\n        \\\"id\\\": \\\"9ab4c716-020d-44cd-a90c-4dc88cabf884\\\",\\n        \\\"account_id\\\": 28387,\\n        \\\"start_date\\\": \\\"2020-09-02\\\"\\n    },\\n    \\\"invoices\\\": [{\\n        \\\"id\\\": \\\"21bbbce0-d97f-4735-bd58-afa510c20398\\\",\\n        \\\"reference\\\": \\\"08224267\\\",\\n        \\\"type\\\": \\\"bill\\\",\\n        \\\"items\\\": [{\\n            \\\"id\\\": 198907,\\n            \\\"delivery_issue\\\": null,\\n            \\\"product\\\": \\\"5be6599e-652d-4dcd-b2a2-c6899d4d63ac\\\",\\n            \\\"reference\\\": \\\"121076\\\",\\n            \\\"status\\\": \\\"completed\\\",\\n            \\\"title\\\": \\\"Nordic Zero Ginger Ale PT3,0 x 6\\\",\\n            \\\"sku\\\": \\\"121076\\\",\\n            \\\"unit_price\\\": 9335,\\n            \\\"planned_units\\\": 10,\\n            \\\"delivered_units\\\": 10,\\n            \\\"type\\\": \\\"pack\\\"\\n        },\\n        {\\n            \\\"id\\\": 198908,\\n            \\\"delivery_issue\\\": null,\\n            \\\"product\\\": null,\\n            \\\"reference\\\": \\\"122615\\\",\\n            \\\"status\\\": \\\"completed\\\",\\n            \\\"title\\\": \\\"Vital C/G PT 1,6 x 6 term.\\\",\\n            \\\"sku\\\": \\\"122615\\\",\\n            \\\"unit_price\\\": 13744,\\n            \\\"planned_units\\\": 10,\\n            \\\"delivered_units\\\": 10,\\n            \\\"type\\\": \\\"pack\\\"\\n        },\\n        {\\n            \\\"id\\\": 198909,\\n            \\\"delivery_issue\\\": {\\n                \\\"id\\\": 115,\\n                \\\"title\\\": \\\"14 Duplicado/Mal digitado\\\"\\n            },\\n            \\\"product\\\": null,\\n            \\\"reference\\\": \\\"120111\\\",\\n            \\\"status\\\": \\\"failed\\\",\\n            \\\"title\\\": \\\"Coca Cola RP2,0cc x 8\\\",\\n            \\\"sku\\\": \\\"120111\\\",\\n            \\\"unit_price\\\": 9916,\\n            \\\"planned_units\\\": 10,\\n            \\\"delivered_units\\\": 0,\\n            \\\"type\\\": \\\"box\\\"\\n        }],\\n        \\\"label\\\": null,\\n        \\\"payment_method\\\": \\\"cash\\\",\\n        \\\"payment_method_details\\\": null,\\n        \\\"status\\\": \\\"partial\\\"\\n    }]\\n}\\n\\n\\n\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nid\\nint\\n\\nId of the visit in SimpliRoute\\n\\n\\nload\\ndouble\\n\\nLoad 1\\n\\n\\nload2\\ndouble\\n\\nLoad 2\\n\\n\\nload3\\ndouble\\n\\nLoad 3\\n\\n\\nwindow_start\\ntime\\n\\nStart time window 1. Format HH:MM:SS\\n\\n\\nwindow_end\\ntime\\n\\nEnd time window 1. Format HH:MM:SS\\n\\n\\nwindow_start_2\\ntime\\n\\nStart time window 2. Format HH:MM:SS\\n\\n\\nwindow_end_2\\ntime\\n\\nEnd time window 2. Format HH:MM:SS.\\n\\n\\nreference\\nvarchar(254)\\n\\nVisit reference\\n\\n\\nplanned_date\\ndate\\n\\nDelivery date. Format YYYY-MM-DD\\n\\n\\norder\\nint\\n\\nPlanned delivery order\\n\\n\\ncheckout_comment\\nstring\\n\\nComments upon delivery\\n\\n\\nduration\\ntime\\n\\nService time of the visit\\n\\n\\ncheckout_comment\\nstring\\n\\nComments upon delivery\\n\\n\\nduration\\ntime\\n\\nService time\\n\\n\\ncalculated_service_time\\ntime\\n\\nCalculated service time\\n\\n\\ntitle\\nvarchar(254)\\n\\nTitle of the visit\\n\\n\\ncontact_name\\nvarchar(254)\\n\\nContact name\\n\\n\\ncontact_email\\nstring\\n\\nContact e mail\\n\\n\\ncontact_phone\\nvarchar(254)\\n\\nContact phone number\\n\\n\\nnotes\\nstring\\n\\nNotes of the visit\\n\\n\\nlatitude\\ndouble\\n\\nLatitude of the visit\\n\\n\\nlongitude\\ndouble\\n\\nLongitude of the visit\\n\\n\\nstatus\\nvarchar(100)\\n\\nStatus of the visit: pending, completed, failed, partial\\n\\n\\naddress\\nvarchar(254\\n\\nAddress of the visit\\n\\n\\naccount\\nvarchar(254)\\n\\nAccount name\\n\\n\\naccount.id\\ninteger\\n\\nId of the account\\n\\n\\naccount.name\\nvarchar(254)\\n\\nAccount namme\\n\\n\\nroute\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.id\\nvarchar(254)\\n\\nId of the route\\n\\n\\nroute.comment\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.driver\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.driver.id\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.driver.name\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.plan\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.plan.id\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.plan.name\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.route_start\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.route_start.address\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.route_start.estimated_time_start\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.route_start.lat\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.route_start.lon\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.route_start.start_time\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.route_end\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.route_end.address\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.route_end.estimated_time_start\\nvarchar(254)\\n\\nEstimated completion time\\n\\n\\nroute.route_end.lat\\ndouble\\n\\nLatitude of the end of the route.\\n\\n\\nroute.route_end.lon\\ndouble\\n\\nLongitude of the end of the route\\n\\n\\nroute.route_end.end_time\\ntime\\n\\nReal moment of the end of the route\\n\\n\\nroute.timestamp\\ndate\\n\\nCurrent time of information request.\\n\\n\\nroute.vehicle\\njson\\n\\nContains route vehicle information.\\n\\n\\nroute.vehicle.id\\ninteger\\n\\nId of the vehicle of the route.\\n\\n\\nroute.vehicle.name\\nvarchar(254)\\n\\nRoute vehicle name.\\n\\n\\nroute.visit_ids\\narray\\n\\nArray with a list of visits corresponding to the assigned checkout route\\n\\n\\nroute.planned_date\\ndate\\nDate of the route planning.\\n\\n\\n\\nstatus_changed\\ntimestamp\\n\\nDate and time of the last status change\\n\\n\\npriority_level\\ninteger\\n\\nPriority of the Visit. Ej 1 high priority, 2 second priority\\n\\n\\ncreated\\ntimestamp\\n\\nCreation time of the visit.\\n\\n\\nmodified\\ntimestamp\\n\\nTime of the last modification of the visit.\\n\\n\\nestimated_time_arrival\\ntime\\n\\nEstimated time of arrival for the visit\\n\\n\\nestimated_time_departure\\ntime\\n\\nEstimated time of departure from the visit.\\n\\n\\ntracking_id\\nvarchar(254)\\n\\nId of tracking\\n\\n\\nsignature\\nvarchar(100)\\n\\nAddress where the signature is stored.\\n\\n\\ncheckin_time\\ntimestamp\\n\\nArrival time for the visit (by GPS driver).\\n\\n\\ncheckin_latitude\\ndouble\\n\\nLatitude of arrival at the visit\\n\\n\\ncheckin_longitude\\ndoube\\n\\nLongitude of arrival at the visit\\n\\n\\ncheckout_observation\\nuuid\\n\\nId of the observation selected at checkout\\n\\n\\ncheckout_latitude\\ndouble\\n\\nCheckout latitude\\n\\n\\ncheckout_longitude\\ndouble\\n\\nCheckout longitude\\n\\n\\ncheckout_time\\ntimestamp\\n\\nCheckout date and time\\n\\n\\non_its_way\\ntimestamp\\n\\nDate and time when “On its way” was marked.\\n\\n\\ngeocode_alert\\nvarchar (22)\\n\\nAlert when georeferencing the address\\n\\n\\npictures\\narray\\n\\nArray with urls of the photos added to the visit.\\n\\n\\npostal_code\\nvarchar (15)\\n\\nPostal code of the visit.\\n\\n\\nprogrammed_date\\ndate\\n\\nScheduled date of visit.\\n\\n\\nvisit_type\\njson\\n\\nType of the visit that is being made.\\n\\n\\nextra_fields_values\\narray\\n\\nExtra values ​​of the visit. Format: [{“key”:”value”}]\\n\\n\\ncurrent_eta\\ndate\\n\\nEstimated time of arrival to the visit.\\n\\n\\nobservation\\njson\\n\\nContains observation information added to the visit\\n\\n\\nobservation.id\\ninteger\\n\\nId of the Observation\\n\\n\\nobservation.labe\\nvarchar (254)\\n\\nObservation visit label\\n\\n\\nfleet\\njson\\n\\nInformation of the fleet to which the visit belongs.\\n\\n\\nplan\\njson\\n\\nContains plan information associated with the visit\\n\\n\\nplan.id\\nuuid\\n\\nid of the plan associated with the visit.\\n\\n\\nplan.route_ids\\narray\\n\\nArray with id of the plan routes.\\n\\n\\nplan.fleet_id\\ninteger\\n\\nid of the fleet which the plan belongs\\n\\n\\nplan.name\\nvarchar (254)\\n\\nName of the plan\\n\\n\\nplan.end_date\\ndate\\n\\nPlan termination date.\\n\\n\\nplan.reset_day\\ninteger\\n\\nPlan reset time.\\n\\n\\nplan.account_id\\nid\\n\\nId of the account assigned to the plan\\n\\n\\nplan.start_date\\ndate\\n\\nPlan start date\\n\\n\\ninvoices\\nlist\\n\\nList of invoices of the visit. See Invoice for its fields.\\n\\n\\nOptimization\\n\\nOptimization Endpoint\\n\\n\\nhttp://optimizer.simpliroute.com/vrp/optimize/sync\\n\\n\\nDue to our wide experience in route optimization, we guarantee this is the best way to create your company's delivery routes. We believe that everyday problems deserve simple solutions, which is why you now have available the API of our algorithm. Solve your logistics delivery problems in the quickest and easiest way possible.\\nSimpliRoute gets these restrictions in consideration:\\n\\nCapacities of your vehicles.\\nDifferent start and end points for your vehicles.\\nDrivers' shifts.\\nTime windows of your clients.\\nAnd a lot more\\n\\nIn the next couple of sections, we'll go in deep detail about our API, which objects it contains and a lot of practical examples to start developing your app using our API. If you have questions, you can send us an email to contact@simpliroute.com\\nOptimization Instance\\n\\nInput json\\n\\n[{\\n    \\\"vehicles\\\": [\\n        {\\n            \\\"ident\\\": \\\"Vehicle 1\\\",\\n            \\\"location_start\\\": {\\n                \\\"ident\\\": \\\"warehouse A\\\",\\n                \\\"lat\\\": -33.4233926,\\n                \\\"lon\\\": -70.6104996\\n            },\\n            \\\"location_end\\\": {\\n                \\\"ident\\\": \\\"warehouse C\\\",\\n                \\\"lat\\\": -33.4233926,\\n                \\\"lon\\\": -70.6104996\\n            },\\n            \\\"capacity\\\": 3500,\\n            \\\"capacity_2\\\": 3500,\\n            \\\"capacity_3\\\": 3500,\\n            \\\"shift_start\\\": \\\"9:00\\\",\\n            \\\"shift_end\\\": \\\"22:00\\\",\\n            \\\"skills\\\": []\\n        },\\n        {\\n            \\\"ident\\\": \\\"Vehicle 2\\\",\\n            \\\"location_start\\\": {\\n                \\\"ident\\\": \\\"warehouse B\\\",\\n                \\\"lat\\\": -33.4233926,\\n                \\\"lon\\\": -70.6104996\\n            },\\n            \\\"location_end\\\": {\\n                \\\"ident\\\": \\\"warehouse C\\\",\\n                \\\"lat\\\": -33.4233926,\\n                \\\"lon\\\": -70.6104996\\n            },\\n            \\\"capacity\\\": 3500,\\n            \\\"capacity_2\\\": 3500,\\n            \\\"capacity_3\\\": 3500,\\n            \\\"shift_start\\\": \\\"9:00\\\",\\n            \\\"shift_end\\\": \\\"22:00\\\",\\n            \\\"skills\\\": []\\n        }\\n    ],\\n    \\\"nodes\\\": [\\n        {\\n            \\\"ident\\\": \\\"El Salto 4875\\\",\\n            \\\"lat\\\": -33.3887,\\n            \\\"lon\\\": -70.62304,\\n            \\\"window_start\\\": \\\"09:00\\\",\\n            \\\"window_end\\\": \\\"17:00\\\",\\n            \\\"window_start_2\\\": \\\"19:00\\\",\\n            \\\"window_end_2\\\": \\\"22:00\\\",\\n            \\\"duration\\\": 15\\n        },\\n        {\\n            \\\"ident\\\": \\\"Avenida Del Valle 7\\\",\\n            \\\"lat\\\": -33.39124,\\n            \\\"lon\\\": -70.61387,\\n            \\\"load\\\": 2530,\\n            \\\"window_start\\\": \\\"9:00\\\",\\n            \\\"window_end\\\": \\\"11:00\\\",\\n            \\\"window_start_2\\\": \\\"19:00\\\",\\n            \\\"window_end_2\\\": \\\"22:00\\\",\\n            \\\"duration\\\": 15\\n        },\\n        {\\n            \\\"ident\\\": \\\"Larrain 5862\\\",\\n            \\\"lat\\\": -33.45066,\\n            \\\"lon\\\": -70.54915,\\n            \\\"load\\\": 77,\\n            \\\"window_start\\\": \\\"09:00\\\",\\n            \\\"window_end\\\": \\\"17:00\\\",\\n            \\\"window_start_2\\\": \\\"19:00\\\",\\n            \\\"window_end_2\\\": \\\"22:00\\\",\\n            \\\"priority_level\\\": 1,\\n\\n            \\\"duration\\\": 10\\n        }\\n    ],\\n    \\\"balance\\\": true,\\n    \\\"all_vehicles\\\": false,\\n    \\\"join\\\": true,\\n    \\\"open_ended\\\": false,\\n    \\\"single_tour\\\": true,\\n    \\\"fmv\\\": 1.0\\n}]\\n\\nOur API receives JSON object as input. The Optimization json can be divided in this sections:\\n\\nVehicles: Array of vehicles with their information to be optimized with our API.\\nNodes: Array of deliveries with their constraints to be routed with our API.\\nOptimization options: Different optimizations criteria to adjust the optimization to your requirements.\\n\\nIn the following sections, we'll discuss more in detail each of this objects. Also, we'll show a few examples of how to make a request to our API with different use-cases to make easier for you to start coding with SimpliRoute.\\nVehicles\\n\\nVehicle's object example:\\n\\n[{\\n    \\\"ident\\\": \\\"Vehicle 1\\\",\\n    \\\"location_start\\\": {\\n        \\\"ident\\\": \\\"warehouse B\\\",\\n        \\\"lat\\\": -33.4233926,\\n        \\\"lon\\\": -70.6104996\\n    },\\n    \\\"location_end\\\": {\\n        \\\"ident\\\": \\\"warehouse C\\\",\\n        \\\"lat\\\": -33.345523,\\n        \\\"lon\\\": -70.456992\\n    },\\n    \\\"capacity\\\": 3500,\\n    \\\"capacity_2\\\": 3500,\\n    \\\"capacity_3\\\": 3500,\\n    \\\"shift_start\\\": \\\"09:00\\\",\\n    \\\"shift_end\\\": \\\"18:00\\\",\\n    \\\"refill\\\": 30,     \\n    \\\"skills\\\": [\\n        \\\"47076\\\"\\n        \\\"47054\\\"\\n    ],\\n    \\\"zones\\\": [\\n        14730\\n    ],\\n    \\\"max_tour_duration\\\": 40,\\n    \\\"cost\\\": 100,\\n    \\\"min_load\\\": 0,\\n    \\\"min_load_2\\\": 0,\\n    \\\"min_load_3\\\": 0,\\n    \\\"max_visit\\\": 35,\\n    \\\"max_number_of_routes\\\": 2\\n}]\\n\\nWhen using our API, the first object that you have to understand is the vehicle object. In our API, a vehicle is any moving device in your city, then if you are working with fleet, field services or sales people, all of them should be created as a \\\"vehicle\\\" in our API. Each of the attributes are described below:\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nident\\nMandatory\\nString\\nUnique identifier for the object.\\n\\n\\nlocation_start\\nMandatory\\nObject\\nLocation of the vehicle when the optimization was called\\n\\n\\nlocation_end\\nOptional\\nObject\\nLocation where the vehicle should end its route\\n\\n\\ncapacity\\nOptional\\nFloat\\nVehicle's capacity load\\n\\n\\ncapacity_2\\nOptional\\nFloat\\nVehicle's second capacity load\\n\\n\\ncapacity_3\\nOptional\\nFloat\\nVehicle's third capacity load\\n\\n\\nshift_start\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). When the vehicle's shift starts.\\n\\n\\nshift_end\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). When the vehicle's shift ends.\\n\\n\\nskills\\nOptional\\nString array\\nSkills that the vehicles supports. Deliveries must have skills in order to be used.\\n\\n\\nrefill\\nOptional\\nInteger\\nMinutes that takes to refill the vehicle when it returns to the depot before starts a new route.\\n\\n\\nzones\\nOptional\\nInteger array\\nIdentifiers of the zones to which the vehicle belongs. A vehicle can belong to more than one zone.\\n\\n\\nmax_tour_duration\\nOptional\\nInteger\\nMaximum minutes that the vehicle is allowed to make all its routes.\\n\\n\\nmin_load\\nOptional\\nInteger\\nPercentage of minimum load associated with capacity attribute that the vehicle must have to go out on the road.\\n\\n\\nmin_load_2\\nOptional\\nInteger\\nPercentage of minimum load associated with capacity_2 attribute that the vehicle must have to go out on the road.\\n\\n\\nmin_load_3\\nOptional\\nInteger\\nPercentage of minimum load associated with capacity_3 attribute that the vehicle must have to go out on the road.\\n\\n\\nmax_visit\\nOptional\\nInteger\\nMaximum number of visits that the routes carried out by the vehicle can have.\\n\\n\\nmax_number_of_routes\\nOptional\\nInteger\\nMaximum number of routes that each vehicle can have. If the value is 0 or null, the maximum is infinity.\\n\\n\\nopen_start\\nOptional\\nBoolean\\nWhen true, this feature allows vehicles to begin their routes from locations other than the depot. It's false by default.\\n\\n\\nopen_end\\nOptional\\nBoolean\\nWhen true, this feature allows vehicles to end their routes in locations other than the depot. It's false by default. If open_ended is true, it overwrites this parameter.\\n\\n\\nDeliveries\\n\\nDelivery's object example:\\n\\n[{\\n    \\\"nodes\\\": [\\n        {\\n            \\\"ident\\\": \\\"Delivery 1\\\",\\n            \\\"group_id\\\": \\\"Delivery 1\\\",\\n            \\\"lat\\\": -33.3887,\\n            \\\"lon\\\": -70.62304\\n        },\\n        {\\n            \\\"ident\\\": \\\"Delivery 2\\\",\\n            \\\"group_id\\\": \\\"Delivery 1\\\",\\n            \\\"address\\\": \\\"Ricardo Flores Magon # 28. Nave 12. Parque industrial San Jeronimo Caleras. San Jeronimo Caleras, Pue.\\\",\\n            \\\"lat\\\": -33.39124,\\n            \\\"lon\\\": -70.61387,\\n            \\\"load\\\": 253.1,\\n            \\\"load_2\\\": 2.0,\\n            \\\"load_2\\\": 3.2,\\n            \\\"window_start\\\": \\\"09:00\\\",\\n            \\\"window_end\\\": \\\"11:00\\\",\\n            \\\"window_start_2\\\": \\\"13:00\\\",\\n            \\\"window_end_2\\\": \\\"15:00\\\",\\n            \\\"duration\\\": 15,\\n            \\\"skills_required\\\": [\\n                30744,\\n                47593\\n            ],\\n            \\\"skills_optional\\\": [\\n                30567\\n            ],\\n            \\\"priority_level\\\": 2,\\n            \\\"zones\\\": [\\n                14730\\n            ],\\n            \\\"open_start\\\": true,\\n            \\\"open_end\\\": false\\n        }\\n    ]\\n}]\\n\\nA delivery is something that your vehicle has to do in the street: delivery orders, sales opportunities, field service orders, etc.\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nident\\nMandatory\\nString\\nUnique identifier for the object.\\n\\n\\nlat\\nMandatory\\nFloat\\nLatitude of the delivery's location.\\n\\n\\nlon\\nMandatory\\nFloat\\nLongitude of the delivery's location.\\n\\n\\naddress\\nOptional\\nString\\nAddress of the delivery. If there are lat and lon attributes, it will privilege those fields over this\\n\\n\\ngroup_id\\nOptional\\nString\\nIdentifier of the delivery to which this delivery will be linked when using join_v2 (see optimization options).\\n\\n\\nload\\nOptional\\nFloat\\nLoad of this delivery. Must be on same units as vehicle's load.\\n\\n\\nload_2\\nOptional\\nFloat\\nSecondary load of this delivery. Must be on same units as vehicle's load 2.\\n\\n\\nload_3\\nOptional\\nFloat\\nThird load of this delivery. Must be on same units as vehicle's load 3.\\n\\n\\nwindow_start\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). Minimum time this delivery can be attended.\\n\\n\\nwindow_end\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). Maximum time this delivery can be attended.\\n\\n\\nwindow_start_2\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). Secondary minimum time this delivery can be attended. (Ex: I can visit this place from 10:00 to 12:00 and from 15:00 to 19:00)\\n\\n\\nwindow_end_2\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). Secondary maximum time this delivery can be attended.\\n\\n\\nduration\\nOptional\\nInteger\\nMinutes that the vehicle will stay on the delivery.\\n\\n\\nskills_required\\nOptional\\nInteger array\\nSkills this delivery needs to be fulfilled. Only the vehicles who have all of these skills will attend the delivery.\\n\\n\\nskills_optional\\nOptional\\nInteger array\\nSkills this delivery needs to be fulfilled. Only the vehicles who have at least one of these skills will attend the delivery.\\n\\n\\npriority_level\\nOptional\\nInteger\\nUsed to indicate this delivery is more important than others. Possible values are 1: First of the day, 2: Last of its route, 3: High Priority, 4: Medium Priority, 5: Low Priority.\\n\\n\\nzones\\nOptional\\nInteger array\\nIdentifier of the zone to which this delivery belongs. Only vehicles that have this area will attend the delivery.\\n\\n\\nOptimization options\\nSimpliRoute has some additional features allowing you to configure the optimization in the best possible way that fits your company.\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\ncountry\\nMandatory\\nString\\nISO code referring to the country where the delivery locations are located.\\n\\n\\nbalance\\nOptional\\nBoolean\\nDefault: False. If true, there will be an enforced balance between all the vehicles, in time and number of locations for the algorithm procedure\\n\\n\\nfmv\\nOptional\\nFloat\\nDefault: 2.0, Speed traffic factor. It could be 1.0 = Low Traffic, 1.5 = Medium Traffic, 2.0 = High Traffic or 3.0 = Intense Traffic.\\n\\n\\nall_vehicles\\nOptional\\nBoolean\\nDefault: False. If true, the algorithm will use all the selected vehicles. If false, will minimize the number of vehicles.\\n\\n\\nopen_ended\\nOptional\\nBoolean\\nDefault: False. If true, the route will be created assuming the vehicle won't return the depot at the end of the day.\\n\\n\\nsingle_tour\\nOptional\\nBoolean\\nDefault: False. If true, all vehicles will have only one route.\\n\\n\\njoin_v2\\nOptional\\nBoolean\\nDefault: False.  If true, the algorithm performs a union of visits with the same address, respecting the capacity of the vehicles, and seeking to minimize the number of vehicles that have similar visits.\\n\\n\\nbeauty\\nOptional\\nBoolean\\nDefault: False. If true, the algorithm groups visits into clusters and creates routes within these clusters.\\n\\n\\nfmb\\nOptional\\nInteger\\nDefault: 5. Clustering factor. It could be 1.0 = Zero Clustering, 2.0 = Low Clustering, 3.0 = Medium Clustering, 4.0 = High Clustering  or  5.0 = Intense Clustering\\n\\n\\nuse_euclidean_distance\\nOptional\\nBoolean\\nDefault: False. If true, it is considered as the distance between two locations, the direct line that joins both nodes.\\n\\n\\nautoZone\\nOptional\\nBoolean\\nDefault: False. If true, the algorithm assigns the vehicles that serve each specified zone in the visits.\\n\\n\\nintensive_intra\\nOptional\\nBoolean\\nDefault: False.  If true, the algorithm performs a more intensive search on the solution space. Response time may increase.\\n\\n\\nopen_routes_logic\\nOptional\\nBoolean\\nDefault: False. If true, the route will be created assuming the vehicle won't return the depot at the end of the day, BUT it does.\\n\\n\\nvehicle_capacities_increment\\nOptional\\nInteger\\nDefault: 0. Percentage increase in load capacity of all vehicles.\\n\\n\\nvehicle_journey_extention\\nOptional\\nInteger\\nDefault: 0. Percentage of increase in the time window of all vehicles.\\n\\n\\nenable_soft_window\\nOptional\\nBoolean\\nDefault: False. If true, it allows not respecting the deliveries time windows, but seeking to minimize the total delay time.\\n\\n\\nisReorder\\nOptional\\nBoolean\\nDefault: False. When enabled, this feature will try to insert all nodes, considering only the first time windows. If this is not achievable, it will try again ignoring the time window constraints.\\n\\n\\nradial_routing\\nOptional\\nInteger\\nDefault: 0. When its value is 1, each route will start close to the depot and end far from the depot. When its value is -1, each route will start far from the depot and end close to the depot. When its value is 0, the option is disabled. Other values are not accepted.\\n\\n\\n\\nExample - Basic Optimization JSON input\\n\\n{\\n    \\\"vehicles\\\": [\\n        {\\n            \\\"ident\\\": \\\"Vehicle 1\\\",\\n            \\\"location_start\\\": {\\n                \\\"ident\\\": \\\"depot_1_start\\\",\\n                \\\"lat\\\": -33.4233926,\\n                \\\"lon\\\": -70.6104996\\n            }\\n        }\\n    ],\\n    \\\"nodes\\\": [\\n        {\\n            \\\"ident\\\": \\\"1\\\",\\n            \\\"lat\\\": -33.436135,\\n            \\\"lon\\\": -70.6509688\\n        },\\n        {\\n            \\\"ident\\\": \\\"2\\\",\\n            \\\"lat\\\": -33.4334123,\\n            \\\"lon\\\": -70.653234\\n        },\\n        {\\n            \\\"ident\\\": \\\"3\\\",\\n            \\\"lat\\\": -33.333413,\\n            \\\"lon\\\": -70.5534688\\n        }\\n    ]\\n}\\n\\n\\nJSON output\\n\\n{\\n    \\\"vehicles\\\": [\\n        {\\n            \\\"ident\\\": \\\"Vehicle 1\\\",\\n            \\\"tours\\\": [\\n                {\\n                    \\\"nodes\\\": [\\n                        {\\n                            \\\"arrival\\\": \\\"00:00:00\\\",\\n                            \\\"ident\\\": \\\"depot_1_start\\\",\\n                            \\\"lon\\\": -70.6104996,\\n                            \\\"departure\\\": \\\"00:00:00\\\",\\n                            \\\"lat\\\": -33.4233926,\\n                            \\\"order\\\": 0,\\n                            \\\"priority\\\": null,\\n                            \\\"load\\\": 0,\\n                            \\\"load_2\\\": 0,\\n                            \\\"load_3\\\": 0\\n                        },\\n                        {\\n                            \\\"load\\\": 0,\\n                            \\\"arrival\\\": \\\"00:17:00\\\",\\n                            \\\"ident\\\": \\\"3\\\",\\n                            \\\"lon\\\": -70.5534688,\\n                            \\\"departure\\\": \\\"00:17:00\\\",\\n                            \\\"lat\\\": -33.333413,\\n                            \\\"order\\\": 1,\\n                            \\\"priority\\\": 0,\\n                            \\\"load\\\": 0,\\n                            \\\"load_2\\\": 0,\\n                            \\\"load_3\\\": 0\\n                        },\\n                        {\\n                            \\\"load\\\": 0,\\n                            \\\"arrival\\\": \\\"00:39:00\\\",\\n                            \\\"ident\\\": \\\"2\\\",\\n                            \\\"lon\\\": -70.653234,\\n                            \\\"departure\\\": \\\"00:39:00\\\",\\n                            \\\"lat\\\": -33.4334123,\\n                            \\\"order\\\": 2,\\n                            \\\"priority\\\": 0,\\n                            \\\"load\\\": 0,\\n                            \\\"load_2\\\": 0,\\n                            \\\"load_3\\\": 0\\n                        },\\n                        {\\n                            \\\"load\\\": 0,\\n                            \\\"arrival\\\": \\\"00:40:00\\\",\\n                            \\\"ident\\\": \\\"1\\\",\\n                            \\\"lon\\\": -70.6509688,\\n                            \\\"departure\\\": \\\"00:40:00\\\",\\n                            \\\"lat\\\": -33.436135,\\n                            \\\"order\\\": 3,\\n                            \\\"priority\\\": 0,\\n                            \\\"load\\\": 0,\\n                            \\\"load_2\\\": 0,\\n                            \\\"load_3\\\": 0\\n                        },\\n                        {\\n                            \\\"arrival\\\": \\\"01:42:00\\\",\\n                            \\\"ident\\\": \\\"depot_1_start\\\",\\n                            \\\"lon\\\": -70.6104996,\\n                            \\\"departure\\\": \\\"01:42:00\\\",\\n                            \\\"lat\\\": -33.4233926,\\n                            \\\"order\\\": 4,\\n                            \\\"priority\\\": null,\\n                            \\\"load\\\": 0,\\n                            \\\"load_2\\\": 0,\\n                            \\\"load_3\\\": 0\\n                        }\\n                    ]\\n                }\\n            ]\\n        }\\n    ],\\n    \\\"num_vehicles_used\\\": 1,\\n    \\\"filteredClientsNodes\\\": [],\\n    \\\"unattendedClientsNodes\\\": []\\n}\\n\\nThe most basic example of routing optimization using our API is when there's only one depot, from which all of your vehicles will start and end the day.\\nAdditionally, on every location your vehicles need to visit there are no restrictions regarding load or time windows. This happens usually on cases like:\\n\\nDelivery of letters and documents\\nFood delivery with vehicles on which load restrictions are not an issue\\n\\nYou can see an input and output JSON example on the right.\\nIn this example there are two relevant entities: vehicles and nodes. The first of them must contain:\\n\\n\\n{\\n\\\"vehicles\\\": [\\n{\\n\\\"ident\\\": \\\"Vehicle 1\\\",\\n\\\"location_start\\\": {\\n\\\"ident\\\": \\\"depot_1_start\\\",\\n\\\"lat\\\": -33.4233926,\\n\\\"lon\\\": -70.6104996\\n}\\n}\\n]\\n}\\n\\n\\n\\\"Ident\\\" is required and is the vehicle's id. The object \\\"location_start\\\" is the location from where the vehicle will begin its daily operation. Since in this example we didn't define a \\\"location_end\\\" our algorithm will assume that the vehicle will end its day on \\\"location_start\\\".\\nIn the nodes case, you must define the following:\\n\\n\\n{\\n\\\"ident\\\": \\\"8\\\",\\n\\\"lat\\\": -33.438943,\\n\\\"lon\\\": -70.655193\\n}\\n\\n\\nWe use \\\"ident\\\" as an ID for the visit, and \\\"lat\\\" and \\\"lon\\\" to specify the latitude and longitude of the node. Since in this example there are no time windows nor loads, there's no need to specify anything else on each visit.\\nVehicle Time Windows\\nIf no time windows are specified for the vehicle, our algorithm will assume that the vehicle will work between \\\"00:00\\\" and \\\"23:59\\\" hours of that day. If you wish to specify a time window for the vehicle, you must add the values \\\"shift_start\\\" and \\\"shift_end\\\". An example of this:\\n\\n\\n{\\n\\\"ident\\\": \\\"Vehicle 1\\\",\\n\\\"shift_start\\\": \\\"9:00\\\",\\n\\\"shift_end\\\": \\\"18:00\\\",\\n\\\"location_start\\\": {\\n\\\"ident\\\": \\\"depot_1_start\\\",\\n\\\"lat\\\": -33.4233926,\\n\\\"lon\\\": -70.6104996\\n}\\n\\n\\nService Times\\nIf service time is not specified, our algorithm will assume that service time in that location is 0 (zero) minutes. If you wish to add a value, you can specify it on the node object as it follows:\\n\\n\\n{\\n\\\"ident\\\": \\\"8\\\",\\n\\\"lat\\\": -33.438943,\\n\\\"lon\\\": -70.655193,\\n\\\"duration\\\": 5\\n}\\n\\n\\n\\\"Duration\\\" must be an integer in minutes. It represents how long will the vehicle stay on that location.\\nOptimization Response\\nThe optimization response, which is the ouput optimization, can be divided into these sections:\\n\\nVehicles: Array of vehicles from the Json input.\\nTours: Array of tours. A tour is the list of all the routes that the vehicle takes from the beginning of its journey until its end.\\nNodes: Array of deliveries that were included in some route.\\nnum_vehicles_used: Number of vehicles used to create the routes.\\nfilteredClientsNodes: Array of deliveries' ident that were removed from the Optimization input before optimizing the routes, due to the impossibility of serving them due to the constraints of the problem.\\nunattendedClientsNodes: Array of deliveries' ident, not filtered, that could not be included in some route during the optimization of the problem.\\n\\nSome of the attributes that the nodes have in the optmization response are the same as those sent in the request, except for these: \\n\\n\\nAttributes\\nType\\nDescription\\n\\n\\n\\narrival\\nString\\nString \\\"HH:mm:ss\\\" (military time). Vehicle arrival time at delivery.\\n\\n\\ndeparture\\nString\\nString \\\"HH:mm:ss\\\" (military time). Vehicle departure time from delivery.\\n\\n\\norder\\nInteger\\nOrder in which delivery is visited.\\n\\n\\nExample - Multiple depots\\nSimilar to last case, you can define for each vehicle a different location to start and end the day. This way, you can simulate more complex operations in which a vehicle must begin the day on a city and end the day on another place. An example JSON of this is on the right.\\n\\nJSON input:\\n\\n{\\n    \\\"vehicles\\\": [\\n        {\\n            \\\"ident\\\": \\\"Vehicle 1 different start and end\\\",\\n            \\\"shift_start\\\": \\\"09:00\\\",\\n            \\\"shift_end\\\": \\\"19:00\\\",\\n            \\\"location_start\\\": {\\n                \\\"ident\\\": \\\"depot_1_start\\\",\\n                \\\"lat\\\": -33.4233926,\\n                \\\"lon\\\": -70.6104996\\n            },\\n            \\\"location_end\\\": {\\n                \\\"ident\\\": \\\"depot_2_end\\\",\\n                \\\"lat\\\": -33.436662,\\n                \\\"lon\\\": -70.577584\\n            }\\n        }\\n    ],\\n    \\\"nodes\\\": [\\n        {\\n            \\\"ident\\\": \\\"1\\\",\\n            \\\"lat\\\": -33.436135,\\n            \\\"lon\\\": -70.6509688\\n        },\\n        {\\n            \\\"ident\\\": \\\"2\\\",\\n            \\\"lat\\\": -33.4334135,\\n            \\\"lon\\\": -70.6534688,\\n            \\\"duration\\\": 5\\n        },\\n        {\\n            \\\"ident\\\": \\\"3\\\",\\n            \\\"lat\\\": -33.333413,\\n            \\\"lon\\\": -70.5534688,\\n            \\\"duration\\\": 5\\n        }\\n    ]\\n}\\n\\n\\nJSON output:\\n\\n{\\n    {\\n    \\\"vehicles\\\": [{\\n        \\\"ident\\\": \\\"Vehicle 1 different start and end\\\",\\n        \\\"tours\\\": [{\\n            \\\"nodes\\\": [{\\n                \\\"arrival\\\": \\\"09:00\\\",\\n                \\\"ident\\\": \\\"depot_1_start\\\",\\n                \\\"lon\\\": -70.6104996,\\n                \\\"departure\\\": \\\"09:00\\\",\\n                \\\"lat\\\": -33.4233926,\\n                \\\"order\\\": 0\\n            }, {\\n                \\\"load\\\": 0,\\n                \\\"arrival\\\": \\\"09:17\\\",\\n                \\\"ident\\\": \\\"2\\\",\\n                \\\"lon\\\": -70.6534688,\\n                \\\"departure\\\": \\\"09:22\\\",\\n                \\\"lat\\\": -33.4334135,\\n                \\\"order\\\": 1\\n            }, {\\n                \\\"load\\\": 0,\\n                \\\"arrival\\\": \\\"10:05\\\",\\n                \\\"ident\\\": \\\"1\\\",\\n                \\\"lon\\\": -70.6509688,\\n                \\\"departure\\\": \\\"10:35\\\",\\n                \\\"lat\\\": -33.436135,\\n                \\\"order\\\": 2\\n            }, {\\n                \\\"load\\\": 0,\\n                \\\"arrival\\\": \\\"10:49\\\",\\n                \\\"ident\\\": \\\"3\\\",\\n                \\\"lon\\\": -70.5534688,\\n                \\\"departure\\\": \\\"11:19\\\",\\n                \\\"lat\\\": -33.333413,\\n                \\\"order\\\": 3\\n            },{\\n                \\\"arrival\\\": \\\"11:56\\\",\\n                \\\"ident\\\": \\\"depot_2_end\\\",\\n                \\\"lon\\\": -70.577584,\\n                \\\"departure\\\": \\\"11:56\\\",\\n                \\\"lat\\\": -33.436662,\\n                \\\"order\\\": 4\\n            }]\\n        }]\\n    }],\\n    \\\"num_vehicles_used\\\": 1\\n}\\n\\nBackhaul Optimization (Routes with picks and drop offs)\\n\\nExample of Nodes Object with Loads and Pickloads\\n\\n{\\n    \\\"nodes\\\": [\\n        {\\n            \\\"ident\\\": \\\"Regular Delivery\\\",\\n            \\\"lat\\\": -33.3887,\\n            \\\"lon\\\": -70.62304,\\n            \\\"load\\\": 10.1,\\n            \\\"load_2\\\": 2.0,\\n            \\\"load_3\\\": 3.2\\n        },\\n        {\\n            \\\"ident\\\": \\\"Regular Pick up\\\",\\n            \\\"lat\\\": -33.39124,\\n            \\\"lon\\\": -70.61387,\\n            \\\"pickload\\\": 5.1,\\n            \\\"pickload_2\\\": 1.0,\\n            \\\"pickload_3\\\": 1.2\\n        },\\n        {\\n            \\\"ident\\\": \\\"Pick up and Delivery\\\",\\n            \\\"lat\\\": -33.4887,\\n            \\\"lon\\\": -70.92304\\n            \\\"load\\\": 7.2,\\n            \\\"load_2\\\": 1.0,\\n            \\\"load_2\\\": 2.2,\\n            \\\"pickload\\\": 4.1,\\n            \\\"pickload_2\\\": 3.0,\\n            \\\"pickload_3\\\": 3.2\\n        }\\n    ]\\n}\\n\\nOur algorithm is extended to also support routes in which your vehicles must deliver products to your customers and also pick up products from your customers that must come back to your depot or warehouse. In this scenario, on each customer you can either deliver, pick up or both pick up and deliver products.\\nThis type of routing is commonly known as Backhaul Route Optimization, which must not be confused with Pick up And Delivery Optimization which is a slightly different problem. In this type of route optimization, the capacity of the vehicle must be checked on each stop, in order not to overbook it on the middle of the route.\\nIn order to use our Backhaul Optimization you must use the same route optimization endpoint that is used for regular optimizations, but adding some optional parameters into the nodes object for each visit.\\nThese are the new parameters you can add, and how they are related to the parameters of regular route optimization:\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nload\\nOptional\\nFloat\\nLoad that must be delivered on this client. Must be on the same unit as vehicle's load.\\n\\n\\nload_2\\nOptional\\nFloat\\nSecondary Load that must be delivered on this client. Must be on the same unit as vehicle's secondary load.\\n\\n\\nload_3\\nOptional\\nFloat\\nThird Load that must be delivered on this client. Must be on the same unit as vehicle's third load.\\n\\n\\npickload\\nOptional\\nFloat\\nLoad that must be picked up on this client. Must be on the same unit as vehicle's load and this visit's load.\\n\\n\\npickload_2\\nOptional\\nFloat\\nSecondary Load that must be picked up on this client. Must be on the same unit as vehicle's secondary load and this visit's load_2.\\n\\n\\npickload_3\\nOptional\\nFloat\\nThird Load that must be picked up on this client. Must be on the same unit as vehicle's third load and this visit's load_3.\\n\\n\\nStop Routing\\n\\nThe visit_joiner object is added to the optimization request and can be used with vrp or big-vrp endpoints.\\nExample Request for \\\"Merging Stops by Distance\\\"\\n\\n{\\n    \\\"visit_joiner\\\": {\\n        \\\"enable_visit_join\\\": true,\\n        \\\"maximum_distance\\\": 0.5,\\n        \\\"match_skills\\\": true,\\n        \\\"match_zones\\\": true,\\n        \\\"match_time_windows\\\": true\\n    }\\n}\\n\\n\\nThe Stop Routing feature allows grouping or merging visits into a single stop based on specific geographical proximity criteria and other client-configurable parameters. The goal of this feature is to optimize routes by reducing the number of individual visits when they share similar conditions in location and restrictions.\\nParameters\\n\\n\\nParameter\\nType\\nDescription\\n\\n\\n\\nenable_visit_join\\nBoolean\\nEnables the stop routing feature when set to true.\\n\\n\\nmaximum_distance\\nNumber\\nMaximum distance (in kilometers) for grouping visits into a stop. Set to 0 to enable merging by exact location.\\n\\n\\nmatch_skills\\nBoolean\\nGroups visits with the same required skills when active.\\n\\n\\nmatch_zones\\nBoolean\\nGroups visits within the same zone when active.\\n\\n\\nmatch_time_windows\\nBoolean\\nGroups visits with the same time window when active.\\n\\n\\nGrouping Visits by Distance\\nThe service processes requests to group visits into a single stop when they meet the following criteria:\\nThey are within a maximum configured distance.\\nThey share the same required skills.\\nThey share the same time window.\\nGrouping Similar Visits by Address (Distance 0)\\n\\nExample Request for \\\"Merging Similar Stops\\\" (Distance 0)\\njson\\n{\\n  \\\"visit_joiner\\\": {\\n    \\\"enable_visit_join\\\": true,\\n    \\\"maximum_distance\\\": 0,\\n    \\\"match_skills\\\": true,\\n    \\\"match_zones\\\": true,\\n    \\\"match_time_windows\\\": true\\n  }\\n}\\n\\nThis option groups visits located at the exact same spot that share:\\n\\n\\nThe same latitude and longitude.\\nThe same required skills.\\nThe same time window.\\n\\nOutput for Both Modes\\n\\nCombined Load: The loads of the individual visits are summed.\\nService Time: The longest service time among the merged visits is assigned.\\n\\nSpecial Conditions and Validations\\n\\nCompatibility with similars_by_priority: When enabled, two visits with the same priority will not be merged.\\nVehicle Capacity Check: If the combined load of merged visits exceeds vehicle capacity, the visits will not be grouped.\\nPrimary Time Window: For visits with the same latitude and longitude but different time windows, the time window of the primary visit (stop) is used.\\n\\n\\nAPI Usage Considerations\\n\\n\\\"Merging Similar Stops\\\" does not validate the address field; only lat and lon are checked.\\nThis functionality is backend-only; do not activate join:true in the frontend.\\n\\n\\nAPI Response\\nTo verify that a visit has been grouped in the optimization response, you can check the attended visits in the parameter order: number. If they have the same order, it indicates that these visits have been grouped into one stop.\\nPick-up and Delivery\\n\\nJob object example: one pick node.\\n\\n{\\n  \\\"jobs\\\": [\\n    {\\n      \\\"pickNodes\\\": [\\n        {\\n          \\\"ident\\\": \\\"OnlyPickUp_1\\\",\\n          \\\"lat\\\": -22.931935311303512,\\n          \\\"lon\\\": -43.39394580787891,\\n          \\\"duration\\\": 11,\\n          \\\"load\\\": 2,\\n          \\\"load_2\\\": 1,\\n          \\\"load_3\\\": 1,\\n          \\\"window_start\\\": \\\"09:00\\\",\\n          \\\"window_end\\\": \\\"23:59\\\",\\n          \\\"skills_required\\\": [],\\n          \\\"skills_optional\\\": [],\\n          \\\"priority_level\\\": 0\\n    }],\\n    \\\"deliveryNodes\\\": [\\n      ]}\\n  ]\\n}\\n\\n\\nJob object example: one delivery node.\\n\\n{\\n  \\\"jobs\\\": [\\n    {\\n      \\\"pickNodes\\\": [\\n      ],\\n      \\\"deliveryNodes\\\": [\\n        {\\n          \\\"ident\\\": \\\"OnlyDelivery_1\\\",\\n          \\\"lat\\\": -22.928792360672404,\\n          \\\"lon\\\": -43.389912163599,\\n          \\\"duration\\\": 12,\\n          \\\"load\\\": 2,\\n          \\\"load_2\\\": 1,\\n          \\\"load_3\\\": 1,\\n          \\\"window_start\\\": \\\"09:00\\\",\\n          \\\"window_end\\\": \\\"23:59\\\",\\n          \\\"skills_required\\\": [],\\n          \\\"skills_optional\\\": [],\\n          \\\"priority_level\\\": 0\\n    }]}\\n  ]\\n}\\n\\n\\nJob object example: one pick node and one delivery node.\\n\\n{\\n  \\\"jobs\\\": [\\n    {\\n      \\\"pickNodes\\\": [\\n        {\\n          \\\"ident\\\": \\\"PickUp_1\\\",\\n          \\\"lat\\\": -22.92770862905761,\\n          \\\"lon\\\": -43.37154320004268,\\n          \\\"duration\\\": 29,\\n          \\\"load\\\": 2,\\n          \\\"load_2\\\": 1,\\n          \\\"load_3\\\": 1,\\n          \\\"window_start\\\": \\\"09:00\\\",\\n          \\\"window_end\\\": \\\"23:59\\\",\\n          \\\"skills_required\\\": [],\\n          \\\"skills_optional\\\": [],\\n          \\\"priority_level\\\": 0\\n    }],\\n      \\\"deliveryNodes\\\": [\\n        {\\n          \\\"ident\\\": \\\"Delivery_1\\\",\\n          \\\"group\\\":[],\\n          \\\"lat\\\": -22.930334385243487,\\n          \\\"lon\\\": -43.390728465304214,\\n          \\\"duration\\\": 3,\\n          \\\"load\\\": 2,\\n          \\\"load2\\\": 1,\\n          \\\"load3\\\": 1,\\n          \\\"window_start\\\": \\\"09:00\\\",\\n          \\\"window_end\\\": \\\"23:59\\\",\\n          \\\"skills_required\\\": [],\\n          \\\"skills_optional\\\": [],\\n          \\\"priority_level\\\": 0\\n    }]}\\n  ]\\n}\\n\\nOne of the variants supported by the routing algorithm is the Pick-up and Delivery Problem. In this problem, nodes are divided into two categories that serve different goals: picks and deliveries. While a pick is meant to pick up load from a fixed location, a delivery has to take it to its destination.\\nThe fundamental unit of this problem is known as a job, which consists of a group of nodes. Each job falls into one of the following three cases: \\n\\nOne pick node: in this case, after visiting the node, the driver will pick and transport its load in the vehicle until the next depot.\\nOne delivery node: in this case, when the driver arrives at the node, it delivers the load that comes originally from a depot.\\nOne pick node and one delivery node: in this scenario, the driver must first pass through the pick-up node to pick up the load, which consequently must be taken to a specific delivery node.\\n\\nRegarding the capacity constraint, it should be noted that the total load of a vehicle changes dynamically depending on whether it picks up or delivers load during the route.\\nThe optimization input is a JSON object that has a similar structure to the regular optimization case. It is composed of optimization options, a list of vehicles and a list of jobs (instead of nodes). Each job in turn is composed of a list of pick nodes and a list of delivery nodes, to cover the three job cases explained above.  In order to use this mode, the request must be sent to the following endpoint: https://optimizer.simpliroute.com/pd/optimize/sync/. \\nA pickNode or deliveryNode is very similar to the node (delivery) object that was previously defined and is compatible with the following attributes:\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nident\\nMandatory\\nString\\nUnique identifier for the object.\\n\\n\\nlat\\nMandatory\\nFloat\\nLatitude of the pick or delivery's location.\\n\\n\\nlon\\nMandatory\\nFloat\\nLongitude of the pick or delivery's location.\\n\\n\\naddress\\nOptional\\nString\\nAddress of the pick or delivery. If there are lat and lon attributes, it will prioritize those fields over this.\\n\\n\\nload\\nOptional\\nFloat\\nLoad of this pick or delivery. Must be on same units as vehicle's load.\\n\\n\\nload_2\\nOptional\\nFloat\\nSecondary load of this pick or delivery. Must be on same units as vehicle's load 2.\\n\\n\\nload_3\\nOptional\\nFloat\\nThird load of this pick or delivery. Must be on same units as vehicle's load 3.\\n\\n\\nwindow_start\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). Minimum time this pick or delivery can be visited.\\n\\n\\nwindow_end\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). Maximum time this pick delivery can be visited.\\n\\n\\nwindow_start_2\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). Secondary minimum time this pick or delivery can be attended. (Ex: I can visit this place from 10:00 to 12:00 and from 15:00 to 19:00)\\n\\n\\nwindow_end_2\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). Secondary maximum time this pick or delivery can be attended.\\n\\n\\nduration\\nOptional\\nInteger\\nMinutes that the vehicle will stay on the pick or delivery.\\n\\n\\nskills_required\\nOptional\\nInteger array\\nSkills this pick or delivery needs to be fulfilled. Only the vehicles who have all of these skills will visit it.\\n\\n\\nskills_optional\\nOptional\\nInteger array\\nSkills this pick or delivery needs to be fulfilled. Only the vehicles who have at least one of these skills will visit it.\\n\\n\\npriority_level\\nOptional\\nInteger\\nUsed to indicate this pick or delivery is more important than others. Possible values are 1: First of the day, 2: Last of its route, 3: High Priority, 4: Medium Priority, 5: Low Priority.\\n\\n\\nRest Time (Routes with a break time)\\n\\nExample of Vehicles Object with rest time\\n\\n{\\n       \\\"vehicles\\\": [\\n        {\\n            \\\"ident\\\": \\\"159331\\\",\\n            \\\"location_start\\\": {\\n                \\\"ident\\\": \\\"vehicle-start-159331\\\",\\n                \\\"lat\\\": -33.405976,\\n                \\\"lon\\\": -70.652035\\n            },\\n            \\\"location_end\\\": {\\n                \\\"ident\\\": \\\"vehicle-end-159331\\\",\\n                \\\"lat\\\": -33.405976,\\n                \\\"lon\\\": -70.652035\\n            },\\n            \\\"capacity\\\": 10.0,\\n            \\\"capacity_2\\\": 1.0,\\n            \\\"capacity_3\\\": 1.0,\\n            \\\"shift_start\\\": \\\"11:00\\\",\\n            \\\"shift_end\\\": \\\"23:00\\\",\\n            \\\"skills\\\": [\\n                \\\"32073\\\",\\n                \\\"32074\\\"\\n            ],\\n            \\\"refill\\\": 0,\\n            \\\"rest_time_start\\\": \\\"12:00\\\",\\n            \\\"rest_time_end\\\": \\\"14:00\\\",\\n            \\\"rest_time_duration\\\": 60\\n        },\\n        {\\n            \\\"ident\\\": \\\"159351\\\",\\n            \\\"location_start\\\": {\\n                \\\"ident\\\": \\\"vehicle-start-159351\\\",\\n                \\\"lat\\\": -33.594771,\\n                \\\"lon\\\": -70.520194\\n            },\\n            \\\"location_end\\\": {\\n                \\\"ident\\\": \\\"vehicle-end-159351\\\",\\n                \\\"lat\\\": -33.594771,\\n                \\\"lon\\\": -70.520194\\n            },\\n            \\\"capacity\\\": 10.0,\\n            \\\"capacity_2\\\": 1.0,\\n            \\\"capacity_3\\\": 1.0,\\n            \\\"shift_start\\\": \\\"08:00\\\",\\n            \\\"shift_end\\\": \\\"14:00\\\",\\n            \\\"skills\\\": [\\n                \\\"32076\\\"\\n            ],\\n            \\\"refill\\\": 0,\\n            \\\"rest_time_start\\\": \\\"12:00\\\",\\n            \\\"rest_time_end\\\": \\\"14:00\\\",\\n            \\\"rest_time_duration\\\": 60\\n        },\\n        {\\n            \\\"ident\\\": \\\"159349\\\",\\n            \\\"location_start\\\": {\\n                \\\"ident\\\": \\\"vehicle-start-159349\\\",\\n                \\\"lat\\\": -33.486415,\\n                \\\"lon\\\": -70.609595\\n            },\\n            \\\"location_end\\\": {\\n                \\\"ident\\\": \\\"vehicle-end-159349\\\",\\n                \\\"lat\\\": -33.486415,\\n                \\\"lon\\\": -70.609595\\n            },\\n            \\\"capacity\\\": 10.0,\\n            \\\"capacity_2\\\": 1.0,\\n            \\\"capacity_3\\\": 1.0,\\n            \\\"shift_start\\\": \\\"08:00\\\",\\n            \\\"shift_end\\\": \\\"14:00\\\",\\n            \\\"skills\\\": [\\n                \\\"32073\\\"\\n            ],\\n            \\\"refill\\\": 0,\\n            \\\"rest_time_start\\\": \\\"12:00\\\",\\n            \\\"rest_time_end\\\": \\\"14:00\\\",\\n            \\\"rest_time_duration\\\": 60\\n        }\\n    ],\\n    \\\"enable_rest_time\\\": true\\n}\\n\\nOur algorithm can consider a defined rest time for each vehicle (driver) in order to take a break in the journey that must be traveled during the day. This feature considers only a pause in the route of a vehicle, at a time defined in the request.\\nIn order to use Rest Time, you must use the same route optimization endpoint that is used for regular optimizations, but adding some optional parameters in the vehicles object for each vehicle. In addition, you must turn on an additional parameter that allows you to use this feature. Only the vehicles that have the additional parameters are considered with a rest time.\\nThese are the new parameters you can add:\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nrest_time_start\\nMandatory\\nString\\nString \\\"HH:mm\\\" (military time). Minimum time in which this vehicle must take the rest period. This time must be less than the shift end attribute.\\n\\n\\nrest_time_end\\nMandatory\\nString\\nString \\\"HH:mm\\\" (military time). Maximum time in which this vehicle must take the rest period. This time must be greater than the shift start attribute.\\n\\n\\nrest_time_duration\\nMandatory\\nInteger\\nMinutes that this vehicle will remain in a rest time. This duration must be less than or equal to the time window established to take the break.\\n\\n\\nenable_rest_time\\nOptional\\nBoolean\\nDefault: False. If true, the vehicles considering a rest time on the route, which is defined with the previous parameters.\\n\\n\\nIncremental Routing (Vehicles with previously created routes)\\n\\nExample of Vehicle object with pre-created routes for each vehicle\\n\\n{\\n  \\\"vehicles\\\": [\\n    {\\n      \\\"ident\\\": \\\"7247\\\",\\n      \\\"location_start\\\": {\\n        \\\"ident\\\": \\\"7247\\\",\\n        \\\"lat\\\": -21.6698437,\\n        \\\"lon\\\": -49.7495409\\n      },\\n      \\\"shift_start\\\": \\\"09:12\\\",\\n      \\\"shift_end\\\": \\\"18:00\\\",\\n      \\\"partial_tour\\\": {\\n        \\\"ident\\\": \\\"7247\\\",\\n        \\\"partial_routes\\\": [\\n          {\\n            \\\"nodes\\\": [\\n              \\\"18112000205726\\\",\\n              \\\"10081834157634\\\",\\n              \\\"10089320449243\\\"\\n            ],\\n            \\\"fixed_nodes_number\\\": 2\\n          },\\n          {\\n            \\\"nodes\\\": [\\n              \\\"10089034859206\\\",\\n              \\\"18162900171426\\\",\\n              \\\"18109901985501\\\",\\n              \\\"18162900171339\\\"\\n            ],\\n            \\\"fixed_nodes_number\\\": 3\\n          }\\n        ]\\n      }\\n    }\\n  ],\\n    \\\"incremental_routing\\\": true\\n}\\n\\nIn some scenarios, there are routes already created and it is desired to optimize considering that these routes are not disassembled but integrating new nodes in the same vehicles or in others. This optimization, called incremental routing, allows to optimize considering that there are routes that must remain fixed.\\nThe incremental routing optimization have two sections:\\n\\nPartial Tour: Object indicating that the vehicle has previously created partial routes. It contains an ident that is the same vehicle ident. If you don't want the vehicle to have partial routes then this object should be null.\\nPartial Routes: Array of partial route object. Each partial route object is a pre-created route and contains a list of node idents.\\n\\nIn order to use incremental routing optimization, you must use the same route optimization endpoint that is used for regular optimizations, but adding this sections and some optional parameters in the vehicles object for each vehicle. Only the vehicles that have the additional objects and parameters are considered to have pre-created routes. It is important to consider that both nodes belonging to partial routes and new nodes must be within the deliveries list of the Nodes Object.\\nThese are the new parameters you can add in the partial route object:\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nnodes\\nMandatory\\nString array\\nIdent of the nodes that are part of the route that you want to keep in the vehicle.\\n\\n\\nfixed_nodes_number\\nMandatory\\nInteger\\nFirst n nodes that remain fixed in the vehicle and in the position in this previously created route. If the value is equal to 0, all the nodes can change their position but not the vehicle. If the value is equal to the size of the list of nodes, this partial route remains as it is, no node moves.\\n\\n\\nAdditionally, you must turn on this additional parameter that allows you to use this feature:\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nincremental_routing\\nOptional\\nBoolean\\nDefault: False. If true, the vehicles considering the previouly created routes  which are defined with the previous objetcs and parameters.\\n\\n\\nLong Routes\\n\\nExample of Vehicles and Nodes Objects with long routes optimization, where a night route starts at 10:00 p.m. and ends at 7:00 a.m. the following day (equivalent to 31:00 hrs).\\n\\n{\\n  \\\"vehicles\\\": [\\n    {\\n      \\\"ident\\\": \\\"Vehicle 1\\\",\\n      \\\"location_start\\\": {\\n        \\\"ident\\\": \\\"warehouse A\\\",\\n        \\\"lat\\\": -12.101389,\\n        \\\"lon\\\": -77.004534\\n      },\\n      \\\"capacity\\\": 3500,\\n      \\\"shift_start\\\": \\\"22:00\\\",\\n      \\\"shift_end\\\": \\\"31:00\\\"\\n    }\\n  ],\\n  \\\"nodes\\\": [\\n    {\\n      \\\"ident\\\": \\\"Jirón Vesalio 252, San Borja\\\",\\n      \\\"lat\\\": -12.105329,\\n      \\\"lon\\\": -77.005524,\\n      \\\"arrayOfTimeWindows\\\": [\\n        [\\n          \\\"25:00\\\",\\n          \\\"28:00\\\"\\n        ]\\n      ],\\n      \\\"load\\\": 77,\\n      \\\"duration\\\": 10\\n    },\\n    {\\n      \\\"ident\\\": \\\"Jirsón Tasso 423, San Borja\\\",\\n      \\\"lat\\\": -12.098615,\\n      \\\"lon\\\": -77.007240,\\n      \\\"arrayOfTimeWindows\\\": [\\n        [\\n          \\\"26:00\\\",\\n          \\\"30:00\\\"\\n        ]\\n      ],\\n      \\\"load\\\": 77,\\n      \\\"duration\\\": 10\\n    }\\n  ],\\n  \\\"longRoutes\\\": true\\n}\\n\\nOur algorithm extends the creation of routes to perform overnight routing operations, i.e., beyond the 24 hours of a day, called Long Routes Optimization.\\nTo use Long Routes Optimization, you must use the same route optimization endpoint that is used for regular optimizations, but add some optional parameters on all node objects. In addition, you must activate an additional parameter that allows you to use this feature.\\nIt is important to consider that this feature is focused on performing night routing optimizations, but it is possible to make routes of more than one day. However, this feature only supports horizons of no more than 7 days, no more than 10 vehicles and/or 40 nodes per vehicle.\\nThese are the new parameters you can add:\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\narrayOfTimeWindows\\nOptional\\nObject\\nArray of time windows (array of two String in format \\\"HH:mm\\\") to attend the visit.  Times can be set for more than 24 hours. This attribute only works if longRoutes is True.\\n\\n\\nlongRoutes\\nOptional\\nBoolean\\nDefault: False. If true, it allows the vehicle to have a shift_end greater than 24 hours. In the visits the time windows must be sent.\\n\\n\\nRadial Routing\\nThis routing option makes the routing tend to be more radial with respect to the depot. When \\\"radial_routing\\\": 1, the routes will tend to start closer to the depot and end farther away, and in the sequence of visits, each visit will tend to be farther from the depot than the previous one. When \\\"radial_routing\\\": -1, the routes will tend to start farther from the depot and end closer, and in the sequence of visits, each visit will tend to be closer to the depot than the previous one. The effect will be more noticeable and is intended for the case of one route per vehicle (\\\"single_tour\\\": true). It is important to note that, for the purposes of this option, the proximity of visits refers to proximity in travel time, not in distance.\\nTo use Radial Routing, you must turn on the radial_routing parameter (by setting its value to 1 or -1) and one or more of the following conditions should be met:\\n- beauty parameter is turned on (\\\"beauty\\\": true).\\n- min_load parameter has a value greater than 0.\\n- there are more than 800 nodes.\\nEstimated Time Calculation\\n\\nETC Update Endpoint\\n\\n\\nhttps://optimizator.simpliroute.com/etc/sync\\n\\n\\n\\nJSON input\\n\\n{\\n    \\\"vehicle\\\": {\\n        \\\"vehicle_id\\\": \\\"Vehicle 1\\\",\\n        \\\"lat\\\": -33.45754,\\n        \\\"lon\\\": -70.92697,\\n        \\\"departure_time\\\": \\\"09:00\\\"\\n    },\\n    \\\"tours\\\": [\\n        {\\n            \\\"nodes\\\": [\\n                {\\n                    \\\"id\\\": \\\"id1\\\",\\n                    \\\"lat\\\": -33.45754,\\n                    \\\"lon\\\": -70.62697,\\n                    \\\"service_time\\\": 30.0,\\n                    \\\"order\\\": 0\\n                },\\n                {\\n                    \\\"id\\\": \\\"id2\\\",\\n                    \\\"lat\\\": -33.45744,\\n                    \\\"lon\\\": -70.77532,\\n                    \\\"service_time\\\": 90.0,\\n                    \\\"order\\\": 1\\n                },\\n                {\\n                    \\\"id\\\": \\\"id3\\\",\\n                    \\\"lat\\\": -33.45742,\\n                    \\\"lon\\\": -70.60364,\\n                    \\\"service_time\\\": 90.0,\\n                    \\\"order\\\": 2\\n                }\\n            ]\\n        }\\n    ],\\n    \\\"fmv\\\": 2.0\\n}\\n\\nAfter your vehicle is on route, a lot of things can happen:\\n\\nTraffic jams\\nLonger service times than expected\\nUnexpected street situations\\nNew priorities along the days\\n\\nThen, after a while, the initial calculated ETA is not longer valid and you need to recalculated it. For this cases, we have a dedicated endpoint to solve the issue. A few considerations about this endpoint:\\n\\nYou have to provide the current time to recalculate the ETA (\\\"departure_time\\\")\\nIt only accepts one vehicle with one tour per request\\nIt will maintain the provided order, it will not compute any optimization (VRP or TSP)\\nThe predicted ETA/ETD will be based in our traffic estimations.\\n\\nBelow you can see the input information and their corresponding vehicle's data types:\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nvehicle_id\\nMandatory\\nString\\nThe vehicle id identifier\\n\\n\\nlat\\nMandatory\\nDouble\\nCurrent vehicle's latitude\\n\\n\\nlon\\nMandatory\\nDouble\\nCurrent vehicle's longitude\\n\\n\\ndeparture_time\\nMandatory\\nTime\\nCurrent time to start the ETA recalculation \\\"HH:mm\\\"\\n\\n\\nIn the tours and node side, this is the attributes:\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nid\\nMandatory\\nString\\nVisit identifier\\n\\n\\nlat\\nMandatory\\nDouble\\nVisit latitude\\n\\n\\nlon\\nMandatory\\nDouble\\nVisit longitude\\n\\n\\nservice_time\\nMandatory\\nDouble\\nMinutes to unload deliveries from the vehicle\\n\\n\\norder\\nMandatory\\nInteger\\nOrder of visit inside of the tour.\\n\\n\\nAt the moment there is only support one route per tour. If more than one route is sent it will respond with an error.\\nThe request can also include Traffic factor\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nfmv\\nOptional\\nInteger\\nDefault: 2.0, Speed traffic factor. It could be 1.0 = Low Traffic, 1.5 = Medium Traffic, 2.0 = High Traffic or 3.0 = Intense Traffic.\\n\\n\\nYou can see an example of the response in the right side of this documentation.\\n\\nJSON response:\\n\\n{\\n    \\\"vehicle\\\": {\\n        \\\"vehicle_id\\\": \\\"Vehicle 1\\\",\\n        \\\"lat\\\": -33.45754,\\n        \\\"lon\\\": -70.92697,\\n        \\\"departure_time\\\": \\\"09:00\\\"\\n    },\\n    \\\"tours\\\": [\\n        {\\n            \\\"nodes\\\": [\\n                {\\n                    \\\"id\\\": \\\"id1\\\",\\n                    \\\"lat\\\": -33.45754,\\n                    \\\"lon\\\": -70.62697,\\n                    \\\"service_time\\\": 30,\\n                    \\\"order\\\": 0,\\n                    \\\"arrival\\\": \\\"09:48\\\",\\n                    \\\"departure\\\": \\\"10:18\\\"\\n                },\\n                {\\n                    \\\"id\\\": \\\"id2\\\",\\n                    \\\"lat\\\": -33.45744,\\n                    \\\"lon\\\": -70.77532,\\n                    \\\"service_time\\\": 90,\\n                    \\\"order\\\": 1,\\n                    \\\"arrival\\\": \\\"10:50\\\",\\n                    \\\"departure\\\": \\\"12:20\\\"\\n                },\\n                {\\n                    \\\"id\\\": \\\"id3\\\",\\n                    \\\"lat\\\": -33.45742,\\n                    \\\"lon\\\": -70.60364,\\n                    \\\"service_time\\\": 90,\\n                    \\\"order\\\": 2,\\n                    \\\"arrival\\\": \\\"13:00\\\",\\n                    \\\"departure\\\": \\\"14:30\\\"\\n                }\\n            ]\\n        }\\n    ]\\n}\\nOptimization: Metadata\\nThe Optimization Metadata pretends give to the client information not available in the optimization endpoint,\\nsuch as the vehicle's route planned distances provided by the Optimization Endpoint.    \\nDistance\\nThe distances endpoint offers the estimated kilometers for a previous optimized routes. \\nAn Authorization Header containing a valid Token is required.\\n\\nOptimization Metadata Distances Endpoint\\n\\n\\nhttps://optimizator.simpliroute.com/v1/optimization/metadata/distance\\n\\nRequest\\nIt respects the structure of the Optimization Response, so it should be easier to build after obtaining an optimization.\\nRoot object:\\n\\n\\nAttributes\\nMandatory\\nData Type\\nDescription\\n\\n\\n\\ncountry\\nYes\\nString\\nISO code referring to the country where the delivery locations are located.\\n\\n\\nvehicles\\nYes\\nObject\\nList of vehicles incurred in the Optimization\\n\\n\\nVehicle object:\\n\\n\\nAttributes\\nMandatory\\nData Type\\nDescription\\n\\n\\n\\nident\\nNo\\nString\\nVehicle's identification string\\n\\n\\ntours\\nYes\\nObject\\nList of tours assigned to the current vehicle\\n\\n\\nTour object:\\n\\n\\nAttributes\\nMandatory\\nData Type\\nDescription\\n\\n\\n\\nnodes\\nYes\\nObject\\nList of nodes that forms the current tour graph.\\n\\n\\nNode object:\\n\\n\\nAttributes\\nMandatory\\nData Type\\nDescription\\n\\n\\n\\nlat\\nYes\\nFloat\\nCoordinate representing the latitude of the visit or depot\\n\\n\\nlon\\nYes\\nFloat\\nCoordinate representing the longitude of the visit or depot\\n\\n\\n\\nExample of Request\\n\\n{\\n    \\\"country\\\": \\\"CL\\\",\\n    \\\"vehicles\\\": [\\n        {\\n            \\\"ident\\\": \\\"123\\\",\\n            \\\"tours\\\": [\\n                {\\n                    \\\"nodes\\\": [\\n                        {\\n                            \\\"lat\\\": -41.319286,\\n                            \\\"lon\\\": -72.995719\\n                        },\\n                        {\\n                            \\\"lat\\\": -41.319081,\\n                            \\\"lon\\\": -72.989037\\n                        }\\n                    ]\\n                },\\n                {\\n                    \\\"nodes\\\": [\\n                        {\\n                            \\\"lat\\\": -41.317910,\\n                            \\\"lon\\\": -73.006348\\n                        },\\n                        {\\n                            \\\"lat\\\": -41.317449, \\n                            \\\"lon\\\": -72.981885\\n                        }\\n                    ]\\n                }\\n            ]\\n        },\\n        {\\n            \\\"ident\\\": \\\"456\\\",\\n            \\\"tours\\\": [\\n                {\\n                    \\\"nodes\\\": [\\n                        {\\n                            \\\"lat\\\": -42.319286,\\n                            \\\"lon\\\": -73.995719\\n                        },\\n                        {\\n                            \\\"lat\\\": -42.319081,\\n                            \\\"lon\\\": -73.989037\\n                        }\\n                    ]\\n                },\\n                {\\n                    \\\"nodes\\\": [\\n                        {\\n                            \\\"lat\\\": -42.317910,\\n                            \\\"lon\\\": -73.006348\\n                        },\\n                        {\\n                            \\\"lat\\\": -42.317449, \\n                            \\\"lon\\\": -73.981885\\n                        }\\n                    ]\\n                }\\n            ]\\n        }\\n    ]\\n}\\nResponse\\n200\\nIt will return 200 when the request is successful. It will follow the same object structure than the request.\\n\\n200 response example\\n\\n{\\n    \\\"vehicles\\\": [\\n        {\\n            \\\"ident\\\": \\\"123\\\",\\n            \\\"tours\\\": [\\n                {\\n                    \\\"distance\\\": 899.5,\\n                    \\\"metric\\\": \\\"meters\\\"\\n                },\\n                {\\n                    \\\"distance\\\": 2200.6,\\n                    \\\"metric\\\": \\\"meters\\\"\\n                }\\n            ]\\n        },\\n        {\\n            \\\"ident\\\": \\\"456\\\",\\n            \\\"tours\\\": [\\n                {\\n                    \\\"distance\\\": 899.5,\\n                    \\\"metric\\\": \\\"meters\\\"\\n                },\\n                {\\n                    \\\"distance\\\": 2200.6,\\n                    \\\"metric\\\": \\\"meters\\\"\\n                }\\n            ]\\n        }\\n    ]\\n}\\n\\n\\n400 response example\\n\\n{\\n    \\\"statusCode\\\": 400,\\n    \\\"message\\\": \\\"Country value is required\\\"\\n}\\n\\n\\n5XX reponse example\\n\\n{\\n    \\\"errors\\\": [\\n        {\\n            \\\"code\\\": \\\"E5000\\\",\\n            \\\"message\\\": \\\"Internal server error\\\",\\n            \\\"metadata\\\": {\\n                \\\"code\\\": \\\"E5000\\\"\\n            }\\n        }\\n    ]\\n}\\nValidate Incompatibilities\\nThe validation process involves iterating through each visit and checking against each vehicle for any type of incompatibility based on required skills, optional skills, loads, time windows, or zones constraints.\\nThis process is only supported for VRP-type problems and is carried out in the optimizer at the beginning of the process, just before the problem is processed. Visits that are found to be incompatible will be filtered out and will not be considered in the optimization process.\\nSince a visit can have different incompatibilities for each vehicle, it's challenging to specify a single cause. In such cases, a summary description will be provided, listing the categories that are incompatible with the visit.\\nExample\\nHere's an example of a problem response that contains 1 visit and 3 vehicles, where neither vehicle meets the visit requirements:\\n\\nJSON response:\\n\\n{\\n  \\\"filteredClientsNodes\\\": [\\n    {\\n      \\\"ident\\\": \\\"Visit\\\",\\n      \\\"cause\\\": {\\n        \\\"description\\\": \\\"No vehicles matching: required skills, optional skills, time windows, zone, load\\\",\\n        \\\"codes\\\": [\\n          \\\"W02002\\\",\\n          \\\"W02102\\\",\\n          \\\"W03002\\\",\\n          \\\"W04002\\\",\\n          \\\"W01001\\\"\\n        ],\\n        \\\"details\\\": [\\n          {\\n            \\\"code\\\": \\\"W02002\\\",\\n            \\\"category\\\": \\\"required skills\\\",\\n            \\\"description\\\": \\\"None Vehicles has the required skills for this visit.\\\",\\n            \\\"count\\\": 3\\n          },\\n          {\\n            \\\"code\\\": \\\"W02102\\\",\\n            \\\"category\\\": \\\"optional skills\\\",\\n            \\\"description\\\": \\\"None Vehicles has the optional skill for this visit.\\\",\\n            \\\"count\\\": 3\\n          },\\n          {\\n            \\\"code\\\": \\\"W03002\\\",\\n            \\\"category\\\": \\\"time windows\\\",\\n            \\\"description\\\": \\\"The visit's time window falls out outside the working hours of all vehicles.\\\",\\n            \\\"count\\\": 3\\n          },\\n          {\\n            \\\"code\\\": \\\"W04002\\\",\\n            \\\"category\\\": \\\"zone\\\",\\n            \\\"description\\\": \\\"None vehicle has been assigned to the visit's zone\\\",\\n            \\\"count\\\": 3\\n          },\\n          {\\n            \\\"code\\\": \\\"W01001\\\",\\n            \\\"category\\\": \\\"load\\\",\\n            \\\"description\\\": \\\"Some vehicles has not the required capacity for this visit.\\\",\\n            \\\"count\\\": 2\\n          }\\n        ]\\n      }\\n    }\\n  ]\\n}\\n\\nWhile the description informs us that there are incompatibilities in the 5 categories (load, required skills, optional skills, time windows, zone), in the \\\"details\\\" attribute, we can observe a \\\"counter\\\" attribute that indicates the number of vehicles that are not compatible in each category. The causes are ordered in descending order based on the number of incompatible vehicles.\\nList of Codes\\nBelow is the code description and the list of supported incompatibility causes.\\nStructure\\n<Initial Letter><Problem Category><Specific Number>\\nInitial Letter:\\n\\nW: Indicates an Alert or warning related to a poorly created visit.\\n\\nPrimary Incompatibility Codes\\n\\nW00001: Undefined.\\nW01002: No vehicles have the required capacity for this visit.\\nW02002: No vehicles have the required skills for this visit.\\nW02102: No vehicles have the optional skill for this visit.\\nW03002: The visit's time window falls outside the working hours of all vehicles.\\nW04002: No vehicle has been assigned to the visit's zone.\\n\\nSecondary Incompatibility Codes\\n\\nW01001: Some vehicles do not have the required capacity for this visit.\\nW02001: Some vehicles do not have the required skills for this visit.\\nW02101: Some vehicles do not have the optional skill for this visit.\\nW03001: The visit's time window falls outside the working hours of some vehicles.\\nW04001: Some vehicle has not been assigned to the visit's zone.\\n\\nInvoices\\nTo use this API, your account must have the Accounting AddOn activated, please contact your on-boarding specialist.\\nNote: this API is constantly adding fields or making small adjustments. The information presented may change.\\nInvoice\\nMain entity representing a financial document, such as an invoice, receipt, delivery note, etc. \\nWe formally use this definition:\\nInvoice: a time-stamped commercial document that itemizes and records a transaction between a buyer and a seller\\n\\nInvoice creation cURL (minimal payload)\\n\\ncurl --location --request POST 'http://api.simpliroute.com/v1/accounting/invoices/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n    \\\"reference\\\" : \\\"external identifier\\\",\\n    \\\"currency\\\": \\\"CLP\\\",\\n    \\\"type\\\": \\\"bill\\\",\\n    \\\"visit\\\": 15081986\\n}'\\n\\n\\nInvoice creation cURL (full payload)\\n\\ncurl --location --request POST 'http://api.simpliroute.com/v1/accounting/invoices/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n    \\\"reference\\\" : \\\"external_id 1234\\\",\\n    \\\"currency\\\": \\\"USD\\\",\\n    \\\"visit\\\": 185202350,\\n    \\\"payment_method\\\": \\\"transfer\\\",\\n    \\\"type\\\": \\\"bill\\\",\\n    \\\"status\\\": \\\"payed\\\",\\n    \\\"label\\\": \\\"custom_title\\\",\\n    \\\"items\\\": [{\\n        \\\"title\\\": \\\"inline item\\\",\\n        \\\"type\\\": \\\"paquete\\\"\\n    }]\\n}'\\n\\n\\nInvoice update cURL\\n\\ncurl --location --request PATCH 'http://api.simpliroute.com/v1/accounting/invoices/<invoice_id>/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n    \\\"reference\\\" : \\\"external_id\\\",\\n    \\\"currency\\\": \\\"CLP\\\",\\n    \\\"visit\\\": 15081986\\n}'\\n\\n\\nInvoice delete cURL\\n\\ncurl --location --request DELETE 'http://api.simpliroute.com/v1/accounting/invoices/<invoice_id>/' \\\\\\n--header 'Authorization: Token <your_token>'\\n\\nAn Invoice exists decoupled fom Visit, although it relates to it. \\nIts minimum and mandatory properties are:\\n\\n\\nName\\nType\\nDescription\\n\\n\\n\\nreference\\nstring\\nexternal identifier for the invoice\\n\\n\\ncurrency\\nstring\\nmoney currency for items prices. Following the ALPHA-3 convention described in the ISO 3166 international standard. Ex: CLP\\n\\n\\nvisit\\nint\\nvisit id to which the invoice relates to\\n\\n\\ntype\\nstring\\nthe type of Invoice. Currently supported: ('bill', 'credit_note', 'delivery_note', 'debit_note')\\n\\n\\nAn Invoice is created using the service\\nhttps://api.simpliroute.com/v1/accounting/invoices/\\n(a cURL example is shown at the right panel 👉)\\nOther available fields for Invoice are:\\n\\n\\nName\\nType\\nDefault\\nDescription\\n\\n\\n\\npayment_method\\nstring\\n'cash'\\nthe payment method declared for the Invoice. One of ('cash', 'check', 'credit_card', 'debit_card', 'transfer', 'dated_check', 'credit')\\n\\n\\npayment_method_details\\nstring\\nnone\\navailable to store extra information about payment method\\n\\n\\nstatus\\nstring\\n'pending'\\nthe invoice status. One of ('pending', 'payed', 'overdue', 'canceled', 'partial', 'completed')\\n\\n\\nitems\\nlist of InvoiceItem\\n[]\\nlist of items in invoice. Can be initialized with a list of dictionaries like: [{ \\\"title\\\": \\\"item title\\\", \\\"type\\\": \\\"item type\\\"}]\\n\\n\\ndelivery_issue\\none of the available DeliveryIssue for the account\\nnull\\nindicates if Invoice had a delivery issue, and which one.\\n\\n\\nlabel\\nstring\\nnull\\ncustom field to store a name or title for the Invoice\\n\\n\\nThe services for retrieval, update, and deletion are as follows:\\nGET http://api.simrpliroute.com/v1/accounting/invoices/<invoice_id>/\\nPATCH http://api.simrpliroute.com/v1/accounting/invoices/<invoice_id>/\\nDELETE http://api.simrpliroute.com/v1/accounting/invoices/<invoice_id>/\\nRetrieval service support two query-params: route_id and planned_date\\nroute_id to query for the Invoices associated with visits from a given route. Ex.:\\nGET http://api.simrpliroute.com/v1/accounting/invoices/?route_id=abs-qq2-asas\\nplanned_date to query for invoices associated with visits from a certain planned date. Ex.:\\nGET http://api.simrpliroute.com/v1/accounting/invoices/?planned_date=2024-02-26\\nInvoiceItem\\n\\nInvoiceItem creation or update cURL\\n\\ncurl --location --request POST 'http://api.simpliroute.com/v1/accounting/invoices/<invoice_id>/items/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '[\\n    {\\n        \\\"title\\\": \\\"a good iteam\\\"\\n    },\\n    {\\n        \\\"reference\\\": \\\"new reference\\\",\\n        \\\"title\\\": \\\"a not so good item\\\"\\n    }\\n]'\\n\\n\\nInvoiceItem deletion cURL\\n\\ncurl --location --request DELETE 'http://api.simpliroute.com/v1/accounting/invoices/a947125d-da24-447f-8db4-01ab0b5c4bf9/items/1' \\\\\\n--header 'Authorization: Token <your_token>'\\n\\nInvoiceItem represents an item within an Invoice and can be declared at the time of creating the Invoice, or afterward. The properties of an InvoiceItem are:\\n\\n\\nName\\nType\\nMandatory\\nDescription\\n\\n\\n\\ntitle\\nstring\\nyes\\nname or title for the item\\n\\n\\nreference\\nstring\\nyes\\nexternal identifier for this item\\n\\n\\nsku\\nstring\\nno\\nitem’s SKU\\n\\n\\nunit_price\\nfloat\\nno\\nitem unitary price\\n\\n\\nplanned_units\\nfloat\\nno\\nnumber of units expected to be delivered\\n\\n\\ndelivered_units\\nfloat\\nno\\nnumber of units actually delivered\\n\\n\\ndelivery_issue\\none of the available DeliveryIssue for the account\\nno\\nindicates if item had a delivery issue, and which one.\\n\\n\\ntype\\nstring\\nno\\nitem type\\n\\n\\nproduct\\nstring\\nno\\noptional Product identifier\\n\\n\\nInvoiceItems only exist within an Invoice. An InvoiceItems is created using the service:\\nPOST http://api.simpliroute.com/v1/accounting/invoices/<invoice_id>/items/\\nexamples of creation, deletion and update of InvoiceItem can be found at the right panel 👉 \\nDeliveryIssue\\n\\nDeliveryIssue creation cURL\\n\\ncurl --location --request POST 'http://api.simpliroute.com/v1/accounting/invoices/delivery-issues/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n\\\"title\\\": \\\"issue title\\\",\\n\\\"description\\\": \\\"dog does not allow entrance\\\"\\n}'\\n\\n\\nDeliveryIssue update cURL\\n\\ncurl --location --request PATCH 'http://api.simpliroute.com/v1/accounting/invoices/delivery-issues/<delivery_issue_id>/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\\"title\\\":\\\"delivery issue - new title\\\"}'\\n\\n\\nDeliveryIssue delete cURL\\n\\ncurl --location --request DELETE 'http://api.simpliroute.com/v1/accounting/invoices/delivery-issues/<delivery_issue_id>/' \\\\\\n--header 'Authorization: Token <your_token>'\\n\\na DeliveryIssue represents a reason for non-delivery or an issue at the time of delivery. The available values are defined by each account. The properties of a DeliveryIssue are:\\n\\n\\nName\\nType\\nMandatory\\nDescription\\n\\n\\n\\ntitle\\nstring\\nyes\\nissue name or title\\n\\n\\ndescription\\nstring\\nno\\nissue description\\n\\n\\ntype\\nstring\\nno\\nis this issue available for items or invoices. Expects one of ('item', 'invoice')\\n\\n\\nreference\\nstring\\nno\\nexternal identifier for this DeliveryIssue\\n\\n\\nexamples of creation, deletion and update of DeliveryIssue can be found at the right panel 👉\\nProducts and ProductCategory\\n\\nProduct creation cURL\\n\\ncurl --location --request POST 'https://api.simpliroute.com/v1/accounting/products/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '[{\\n\\\"title\\\": \\\"title\\\",\\n\\\"sku\\\": \\\"13231323\\\",\\n\\\"category\\\": 1\\n}]'\\n\\n\\nProduct update cURL\\n\\ncurl --location --request PATCH 'https://api.simpliroute.com/v1/accounting/products/ae5e625c-a1ec-413b-9a3f-abe3c2825e4d/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n    \\\"title\\\": \\\"new title\\\"\\n}'\\n\\n\\nProduct delete cURL\\n\\ncurl --location --request DELETE 'https://api.simpliroute.com/v1/accounting/products/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '[{\\n\\\"title\\\": \\\"title\\\",\\n\\\"sku\\\": \\\"13231323\\\"\\n}]'\\n\\nGiven the need for an InvoiceItem to be described from a \\\"class\\\", a \\\"template\\\", or a pre-existing definition, the Product entity was modeled.\\nSo then an InvoiceItem can be associated with a Product optionally.\\nA Product has the following properties:\\n\\n\\nName\\nType\\nMandatory\\nDescription\\n\\n\\n\\ntitle\\nstring\\nyes\\nProduct name or title\\n\\n\\nsku\\nstring\\nyes\\nstock keeping unit (SKU) of the Product\\n\\n\\nprice\\nfloat\\nno\\nprice per 1 unit of this Product\\n\\n\\ncategories\\nlist\\nyes\\nID of corresponding ProductCategory’s ID\\n\\n\\nA ProductCategory allows relating several Products in the same group or category.\\nA Product may or may not define a category, category is an optional property for Product.\\nThe properties of a ProductCategory are:\\n\\n\\nName\\nType\\nMandatory\\nDescription\\n\\n\\n\\nname\\nstring\\nyes\\nProductCategory name\\n\\n\\nparent\\nint\\nno\\nwhen dealing with hierarchy, parent represents the ProductCategory where this ProductCategory belongs.\\n\\n\\nThere are creation (POST), retrieval (GET), update (PATCH), and deletion (DELETE) services for Product and ProductCategory at the following endpoints\\nProduct - http://api.simpliroute.com/v1/accounting/products/\\nProductCategory - http://api.simpliroute.com/v1/accounting/product-categories/\\nexamples of creation, deletion and update of Product can be found at the right panel 👉\\nThe Checkout Process\\nThe full checkout operation is a composition of multiples services:\\n1) start the route\\n2) checkout a visit\\n3) store extra-field-values\\n4) store pictures\\n5) trigger notifications\\n1. Start the route\\nPerforming this action allow the system to recognize the start time of the route and update visit's ETA accordingly.\\n\\nstart a route cURL\\n\\ncurl --location --request POST 'https://api.simpliroute.com/v1/events/register/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n    \\\"date_time\\\": \\\"2024-04-24T14:20:45.446Z\\\", \\n    \\\"latitude\\\": \\\"-0.346644\\\", \\n    \\\"longitude\\\": \\\"-78.455834\\\", \\n    \\\"route_id\\\": \\\"24b87d96-813e-4176-a85b-d72171160000\\\", \\n    \\\"type\\\": \\\"ROUTE_STARTED\\\" \\n  }'\\n\\n\\n\\nParameter\\ntype\\ndescription\\n\\n\\n\\ndate_time\\nstring\\ndate and hour of start following the ISO 8601 standard (required)\\n\\n\\nlatitude\\nstring\\nlatitude at the point of route start\\n\\n\\nlongitude\\nstring\\nlongitude at the point of route start\\n\\n\\nroute_id\\nstring\\nidentifier or the route to start (required)\\n\\n\\ntype\\nstring\\nindicates the event, for this case value must be ROUTE_STARTED (required)\\n\\n\\n2. Checkout a visit\\nChecking out a visit allows the system to register the action and display data accordingly in our frontend applications\\n\\nVisit checkout (minimal payload) cURL\\n\\ncurl --location --request POST 'https://api.simpliroute.com/v1/mobile/visit/<visit_id>/checkout/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n    \\\"status\\\": \\\"completed\\\", \\n    \\\"checkout_time\\\": \\\"2024-04-24 13:24:53\\\", \\n    \\\"checkout_latitude\\\": -12.105513, \\n    \\\"checkout_longitude\\\": -76.965618, \\n    \\\"checkout_comment\\\": \\\"everything was OK\\\" \\n  }'\\n\\nMandatory fields are the following:\\n\\n\\nParameter\\ntype\\ndescription\\n\\n\\n\\nstatus\\nstring\\none of the following statuses: pending, completed, failed\\n\\n\\ncheckout_time\\nstring\\ndate and hour of checkout following the  ISO 8601 standard\\n\\n\\ncheckout_latitude\\nfloat\\nlatitude at the point of delivery\\n\\n\\ncheckout_longitude\\nfloat\\nlongitude at the point of delivery\\n\\n\\ncheckout_comment\\nstring\\noptional comment\\n\\n\\nOther available parameters are:\\n\\n\\nParameter\\ntype\\ndescription\\n\\n\\n\\ncheckout_user_id\\nint\\nby default the system will register the user asociated with the token as the performer of the checkout action. In case the user is different, use this field to provide the user id\\n\\n\\nsignature\\nstring\\nbase64 representation of the signature image as proof of delivery\\n\\n\\n3. Store extra-field-values\\n\\nStore extrafields values cURL\\n\\ncurl --location --request POST 'https://api.simpliroute.com/v1/routes/visits/multiple/extra-field-values' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n    \\\"json\\\": '{\\\\\\\"operation_nice\\\\\\\":true, \\\\\\\"other_extrafield\\\\\\\":\\\\\\\"a value\\\\\\\" }', \\\\\\\"visits\\\\\\\": [123, 456, 789]}'\\n\\nin case extrafields are defined to the given Visit, then extrafield values can be declared using this service\\nhttps://api.simpliroute.com/v1/routes/visits/multiple/extra-field-values\\nexpected payload example:\\n{'json': '{\\\"georeferencia_incorrecta\\\":false}', 'visits': [01407818]}\\nplease note that an extrafield value can be assigned to multiples visits.\\nalso note that extrafield_name (georeferencia_incorrecta in the example) must correponds to one of the available extrafields for the account.\\nvalue for an extrafield can be bool, int or string, depending on the extrafield definition.\\nAn example is available at the right panel 👉\\n4. Store pictures\\n\\nstore picture cURL\\n\\ncurl --location --request POST 'https://api.simpliroute.com/v1/routes/visits/multiple/pictures/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--form 'visits=\\\"[12, 34, 56]\\\"' \\\\\\n--form 'image=@\\\"/path/to/image/picture.png\\\"'\\n\\nIn case you need to attach pictures to the checking out visit use this service:\\nhttps://api.simpliroute.com/v1/routes/visits/multiple/pictures/\\nExpected parameters are:\\n\\n\\nParameter\\ndescription\\n\\n\\n\\nimage\\npath to file using form request\\n\\n\\nvisits\\narray of visit_id to associate image to\\n\\n\\n5. Trigger notifications\\n\\nTrigger notifications cURL\\n\\ncurl --location --request POST 'https://api.simpliroute.com/v1/routes/visits/multiple/extra-field-values' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '\\n    {\\\"checkout_time\\\": \\\"2024-04-24T16:39:53.076Z\\\", \\\"visits\\\": [407726472]} '\\n\\nIn order to trigger sms, whatsapp, email and live-tracking notification, a final request must be executed using the service\\nhttps://api.simpliroute.com/v1/mobile/visit/multiple/checkout/notify\\nExpected parameters are:\\n\\n\\nParameter\\ndescription\\n\\n\\n\\ncheckout_time\\ndate and hour of checkout following the  ISO 8601 standard\\n\\n\\nvisits\\narray of visit_id to trigger notification of\\n\\n\\nTMS: Transportation provider\\nIMPORTANT: This Service is only available for the clients that has contracted it.\\nThe following actions are provided for managing the entity Transportation Provider.\\nAn Authorization Header containing a valid Token is required.\\nFor accessing this resource the following URL is required: https://api-gateway.simpliroute.com/tms/api/v1\\nCreation Request\\nCreate a Transportation Provider in the system.\\n\\nBasic Request\\n\\n{\\n    \\\"trade_name\\\": \\\"FEDEX\\\",\\n    \\\"status\\\": \\\"active\\\",\\n    \\\"contact_person\\\": \\\"Doe Dawson\\\"\\n}\\n\\nHTTP method: POST\\nResource's path: /transportation-providers\\nBody:\\n\\n\\nAttributes\\nMandatory\\nData Type\\nDefault\\nDescription\\n\\n\\n\\ntrade_name\\nYes\\nString\\n\\nCommercial name for the provider\\n\\n\\nlegal_name\\nNo\\nString\\n\\nRegistered name in administrative institutions\\n\\n\\naccount_id\\nYes\\nInteger\\n\\nAccount’s id corresponding to the Token\\n\\n\\nstatus\\nNo\\nString\\nactive\\nRegistered name in administrative institutions\\n\\n\\ncontact_person\\nYes\\nString\\n\\nRepresentative person for contact purposes\\n\\n\\ncontact_email\\nNo\\nString\\n\\n\\n\\n\\nphone_number\\nNo\\nString\\n\\n\\n\\n\\naddress\\nNo\\nString\\n\\n\\n\\n\\ntax_id_number\\nNo\\nString\\n\\nLegal identification number\\n\\n\\nreference\\nNo\\nString\\n\\nIdentification code used by our clients for this entity\\n\\n\\nResponses\\n\\n\\nCode\\nDescription\\n\\n\\n\\n201\\nSuccessful creation\\n\\n\\n422\\nPayload has formatting errors\\n\\n\\n500\\nServer error\\n\\n\\nList Request\\nList all Transportation Providers.\\nHTTP method: GET\\nResource's path: /transportation-providers\\nBody: empty\\nResponses\\n\\n\\nCode\\nDescription\\n\\n\\n\\n200\\nSuccessful creation\\n\\n\\n500\\nServer error\\n\\n\\nRetrieve resource Request\\nObtaining an specific Transportation Provider.\\nHTTP method: GET\\nResource's path: /transportation-providers/{id}\\nBody: empty\\nNOTE: The desired resource id is specified in the path.\\nResponses\\n\\n\\nCode\\nDescription\\n\\n\\n\\n200\\nSuccessful creation\\n\\n\\n404\\nResource doesn't exist\\n\\n\\n500\\nServer error\\n\\n\\nUpdate Request\\nChange an specific Transportation Provider.\\nHTTP method: GET\\nResource's path: /transportation-providers/{id}\\nBody: Same as presented in Creation Request.\\nNOTE: The desired resource id is specified in the path.\\nResponses\\n\\n\\nCode\\nDescription\\n\\n\\n\\n200\\nSuccessful update\\n\\n\\n400\\nWrong request\\n\\n\\n403\\nUser without authorization\\n\\n\\n404\\nResource doesn't exist\\n\\n\\n422\\nPayoad has formatting errors\\n\\n\\n500\\nServer error\\n\\n\\nDelete Request\\nDeletes an specific Transportation Provider.\\nHTTP method: GET\\nResource's path: /transportation-providers/{id}\\nBody: empty\\nNOTE: The desired resource id is specified in the path.\\nResponses\\n\\n\\nCode\\nDescription\\n\\n\\n\\n204\\nSuccessful deletion\\n\\n\\n400\\nWrong request\\n\\n\\n403\\nUser without authorization\\n\\n\\n404\\nResource doesn't exist\\n\\n\\n500\\nServer error\\n\\n\\nAssign Transportation Provider to Vehicle with Transportation Provider Request\\nAssign transportation provider to a vehicle, creating a relation between them.\\nThis endpoint allows to assign several transportation providers in one request.\\n\\nBasic Request\\n\\n[\\n  {\\n    \\\"vehicle_id\\\": 2,\\n    \\\"transportation_provider_id\\\": \\\"14383454-keur-64f7-232e-901434a8f5ga\\\"\\n  },\\n  {\\n    \\\"vehicle_id\\\": 3,\\n    \\\"transportation_provider_id\\\": \\\"42383454-ba4a-4ff7-b52e-90544e8f5e44\\\"\\n  }\\n]\\n\\nHTTP method: POST\\nResource's path: /vehicles/transportation-providers\\nBody: Array of objects\\n\\n\\nAttributes\\nMandatory\\nData Type\\nDescription\\n\\n\\n\\nvehicle_id\\nYes\\nInteger\\nCommercial name for the provider\\n\\n\\ntransportation_provider_id\\nYes\\nUUID\\nRegistered name in administrative institutions\\n\\n\\nResponses\\n\\n\\nCode\\nDescription\\n\\n\\n\\n200\\nSuccessful request\\n\\n\\n404\\nResource doesn't exist\\n\\n\\n500\\nServer error\\n\\n\\nGPS Integration\\nSimpliroute is able to integrate with your GPS in order to obtain important data \\n\\nPlease contact our Profesional services team to obtain technical details on how to set up this integracion at contact@simpliroute.com\\n\\nFrequency for sending data\\nIt is recommended to send a maximum of 1 data per vehicle every 20 seconds. for fleets\\nmore than 20 vehicles, 1 data per minute/vehicle, optimal frequency for a layout correct of the routes on the map.\\nLoss of signal and sending of stored local data\\nIn the event that one or more vehicles circulate in areas outside the satellite range or\\nbefore any factor that generates a loss of signal in the installed devices, recommends the use of “queues” (or “queues”) for data that could not be sent because of the above reason, and thus be able to send them later, when the signal is\\nreset. When the latter occurs, the system could send data\\naccumulated in the queue, and send them with a maximum time of 10 seconds between each one,\\nuntil sending all the saved objects.\\nImportant: It should be considered that the range of 10 seconds applies only to\\ndata stored locally as a result of signal loss. The range for\\nvehicles that are within satellite coverage maintain the recommended at the beginning of this\\ndocument.\\nAdditionally, the data must be sent independently, an arrangement with all\\nobjects can cause errors in the communication of the call.\\n\\nExample Input\\n\\n{\\n\\\"latitude\\\":-33.4311548,\\n\\\"longitude\\\":-70.5701852 ,\\n\\\"timestamp\\\":\\\"2019-02-20 10:35:00-00”,\\n\\\"vehicleId”: \\\"JKCT-81\\\",\\n\\\"providerName”: \\\"LOCALIZAGPS_AGROSUPER”,\\n}\\nIntegration of GPS and variable data with SimpliRoute\\nFor the integration of GPS data and additional variables with SimpliRoute (such as temperature or\\nhumidity), the following information must be sent, by POST method, to the endpoint\\n\\nPlease contact our Profesional services team to obtain technical details on how to set up this integracion at contact@simpliroute.com\\n\\nPayload details\\n\\n\\nAttributes\\nDescription\\n\\n\\n\\n\\n\\nlatitude\\nDecimal number up to 6 decimal digits.\\n\\n\\n\\n\\nlongitude\\nDecimal number up to 6 decimal digits.\\n\\n\\n\\n\\ntimestamp\\nDate and time in UTC with format YYYY-MM-DD HH:II:SS-00 Example: 2019-02-20 10:35:00-00\\n\\n\\n\\n\\nvehicleId\\nVehicle ID in SimpliRoute system.\\n\\n\\n\\n\\ntemperature\\nTemperature data, see “temperature” object. (backwards compatible but deprecated, it is recommended to send the temperature information in the alert object)\\n\\n\\n\\n\\nalert\\nAlert data, see “alert” object\\n\\n\\n\\n\\nproviderName\\nName of the vehicle GPS information provider.\\n\\n\\n\\n\\nTemperature object\\n\\n\\nAttributes\\nDescription\\n\\n\\n\\n\\n\\nvalue\\nDecimal number with the temperature in degrees Celsius.\\n\\n\\n\\n\\nalert_type\\nAlert type, “min” when the temperature is below the limit set or “max” when greater.\\n\\n\\n\\n\\nalert_message\\nMessage to be sent to the supervisor in charge of the trucks and the transport of refrigerated cargo.\\n\\n\\n\\n\\nAlert Object\\n\\n\\nAttributes\\nDescription\\n\\n\\n\\n\\n\\nname\\nAlert type identifier.\\n\\n\\n\\n\\ntype\\nalert type\\n\\n\\n\\n\\nvalue\\nAlert Value\\n\\n\\n\\n\\nmessage\\nMessage to be sent to the supervisor in charge of the trucks.\\n\\n\\n\\n\\nAlerts\\nIt is possible to send additional variables through an array of objects that maintain the\\nfollowing structure:\\n\\n\\nAttributes\\nDescription\\n\\n\\n\\n\\n\\nname\\nAlert type identifier.\\n\\n\\n\\n\\ntype\\nalert type\\n\\n\\n\\n\\nvalue\\nAlert Value\\n\\n\\n\\n\\nmessage\\nMessage to be sent to the supervisor in charge of the trucks.\\n\\n\\n\\n\\nAvailable alerts\\n\\n\\nNames\\n\\n\\n\\n\\n\\n\\ntemperature\\n\\n\\n\\n\\n\\ngeofence\\n\\n\\n\\n\\n\\nspeed\\n\\n\\n\\n\\n\\nhumidity\\n\\n\\n\\n\\n\\ndoor\\n\\n\\n\\n\\n\\nestado\\n\\n\\n\\n\\n\\nbrake\\n\\n\\n\\n\\n\\ntemperature_2\\n\\n\\n\\n\\n\\ntemperature_3\\n\\n\\n\\n\\n\\njamming\\n\\n\\n\\n\\n\\ntiredness\\n\\n\\n\\n\\n\\nfuel_cap\\n\\n\\n\\n\\n\\nfuel_variation\\n\\n\\n\\n\\n\\ndriver_door_open\\n\\n\\n\\n\\n\\nspeeding\\n\\n\\n\\n\\n\\nloss_of_load\\n\\n\\n\\n\\n\\nno_smoking o smoking\\n\\n\\n\\n\\n\\nDemurrage\\n\\n\\n\\n\\n\\n\\nInput example\\n\\n[\\n    {\\n\\\"latitude\\\": -33.4311548,\\n\\\"longitude\\\": -70.5701852,\\n\\\"timestamp\\\": \\\"2017-10-19 09:12:02-00\\\",\\n\\\"vehicleId\\\": \\\"<<vehicle_id>>\\\",\\n\\\"temperature\\\": {\\n\\\"value\\\": 2.4,\\n\\\"alert_type\\\": null,\\n\\\"alert_message\\\": null\\n},\\n\\\"alert\\\": {\\n\\\"name\\\": “door”,\\n\\\"type\\\": “open”,\\n\\\"value\\\": true,\\n“message”: “open door alert”\\n},\\n“alerts”: [\\n{\\n\\\"name\\\": “general”,\\n\\\"type\\\": “ºC”,\\n\\\"value\\\" 4,\\n“message”: “temperature is lower than 5 degress”\\n},\\n...\\n],\\n\\\"providerName\\\": \\\"<<provider>>\\\"\\n}\\n\\n\\nResponse example\\n\\n{\\n\\\"status\\\": \\\"Tracked\\\",\\n\\\"id\\\": \\\"2408269119724499\\\",\\n\\\"daily_status\\\": \\\"Updated\\\"\\n4\\n}\\n\\n\\nAPI response when exist one or more invalid alerts\\n``` json\\n\\n{\\n\\\"status\\\": \\\"Tracked\\\",\\n\\\"id\\\": \\\"2408269119724499\\\",\\n\\\"daily_status\\\": \\\"Updated\\\",\\n\\\"invalid_alerts\\\": []\\n\\\"invalid_alert\\\": []\\n}\\n```\\nFrequency for sending data\\nIt is recommended to send a maximum of 1 data per vehicle every 20 seconds. for fleets\\nmore than 20 vehicles, 1 data per minute/vehicle, optimal frequency for a layout\\ncorrect of the routes on the map.\\nLoss of signal and sending of stored local data\\nIn the event that one or more vehicles circulate in areas outside the satellite range or\\nbefore any factor that generates a loss of signal in the installed devices,\\nrecommends the use of “queues” (or “queues”) for data that could not be sent\\nbecause of the above reason, and thus be able to send them later, when the signal is\\nreset. When the latter occurs, the system could send data\\naccumulated in the queue, and send them with a maximum time of 10 seconds between each one,\\nuntil sending all the saved objects.\\nImportant: It should be considered that the range of 10 seconds applies only to\\ndata stored locally as a result of signal loss. The range for\\nvehicles that are within satellite coverage maintain the recommended at the beginning of this\\ndocument.\\nAdditionally, the data must be sent independently, an arrangement with all\\nobjects can cause errors in the communication of the call.\\nErrors\\nThe SimpliRoute API uses the following error codes:\\n\\n\\nError Code\\nMeaning\\n\\n\\n\\n400\\nBad Request -- Your request is invalid. Review the data type and information sent.\\n\\n\\n401\\nUnauthorized -- You are using the wrong API key to request the information.\\n\\n\\n404\\nNot Found -- The request didn't found results.\\n\\n\\n405\\nMethod Not Allowed -- You tried to access to the endpoint with an invalid method.\\n\\n\\n406\\nNot Acceptable -- You requested a format that isn't json.\\n\\n\\n500\\nInternal Server Error -- We had a problem with our server. Try again later.\\n\\n\\n503\\nService Unavailable -- We're temporarily offline for maintenance. Please try again later.\\n\\n\\nDatamart\\nDatarmat is a REST API for data querying. To use this API, you will need a token that you can obtain from Customer Support.\\nThis API is located at https://api-gateway.simpliroute.com/datamart\\ncurl --location 'https://api-gateway.simpliroute.com/datamart/v1/visits' \\\\\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiZG9jdW1lbnRhdGlvbl9leGFtcGxlIiwiZXhwIjoxOTA2Mzg0MjY1LjB9.f2jx7t95gcZPNhUh31XIVv_9nXN5fYa04Om76U29iu4'\\n\\nAn Authorization header is expected with a Bearer token.\\nAs an example, the cURL at the right panel requests Visits data 👉\\nHow does pagination work?\\nDatamart delivers a maximum of 500 results per page. To request the next page, use the query parameter offset. For example, to request the second page of Visits, you would use /datamart/v1/visits?offset=500\\nIt is also possible to request pages with fewer than 500 results using the limit query parameter. For example:\\n/datamart/v1/visits?limit=10&offset=20\\nThe response headers always include Content-Range, which indicates the page size and the total number of results. For cases when the number of results is higher the 100.000 the total won't be provided unless you requested with the header: Prefer: count=estimated\\nWhat data is available in Datamart?\\nHere's a list of currently available services:\\n\\n/v1/visits: provides access to Visits. For more information about a Visit properties check here\\n/v1/plans: provide access to Plans.For more information about a Plan properties check here\\n/v1/routes: provide access to Plans.For more information about a Plan properties check here\\n/v1/extrafielddefinitions: an extrafield allows checkout forms customization.\\n/v1/extrafieldoptions: if an extrafield uses prefined options, they can be found in this service.\\n/v1/vehicles: provides access to Vehicles. For more information about a Vehicle properties check here\\n/v1/vehicles_skills: list of Skills asociated to a Vehicle.\\n/v1/fleets: a fleet represents a groupt of Vehicles.\\n/v1/vehicles_fleets: relationship between Fleet and Vehicles.\\n/v1/fleets_users: designed User (usually of rol driver) asociated with a given fleet.\\n/v1/observations: during the checkout an Observation can be attached to the Visit. This service provices access to those observations.\\n/v1/skills: list the available skills. For more details check here\\n/v1/tags: one or more Tags can be attached to a Visit. Here is the list of available Tags.\\n/v1/zones: a Zone represents a geographical area. Here the list of Zones defined for your account(s).\\n/v1/vehicles_zones: relationship between Vehicle and Zones.\\n/v1/visits_skills_optional: list of optional Skills defined for a Visit.\\n/v1/visits_skills_required: list of requiered Skills defined for a Visit.\\n/v1/visits_tags: list of Tags attached to a Visit.\\n/v1/visits_extrafieldvalues: list the values given to Extrafields during the Checkout, for a Visit.\\n/v1/visititems: access Visit Items, representing products or services tied to a visit. For more information about a Visit Item's properties, check here.\\n/v1/accounts: provides access to Accounts related to the Datamart role. It includes information about the account and its associated organization.\\n/v1/users: list of Users in your account. Web users, admins, monitors and drivers can be found here.\\n/v1/invoices: access Invoices, which represent financial documents. For more information about an Invoice's properties, check here.\\n/v1/invoiceitems: access Invoice Items, representing products or services listed in an Invoice. For more information about an Invoice Item's properties, check here.\\n\\nWhat filtering and sorting options does Datamart offer?Basic filtering\\nThis filter allows to query especific properties, for example:\\n/v1/visits?select=id,address\\nWill result in responses with id and address properties only\\nConditional filtering\\nGive a condition to query for especific values. For example:\\n/v1/visits?visit_type_id=eq.5335\\nWill responde with Visit on which visit_type_id is equal to 5335.\\nAside from eq operator, gt or lt are available too.\\n\\n\\n\\nshell\\njava\\njavascript\",\"textTemplate\":\"\",\"metadataSeparator\":\"\\n\",\"type\":\"DOCUMENT\",\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"}","__type__":"DOCUMENT"},"50703085-0045-435b-ba16-43efb2828bcf":{"__data__":"{\"id_\":\"50703085-0045-435b-ba16-43efb2828bcf\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"NEXT\":{\"nodeId\":\"8d3a9a51-58e0-4edc-bbe5-180e3bcb7af5\",\"metadata\":{},\"hash\":\"U4YeViTGeXC02uWAxVzO1Q1urMFhCTmQzgDCSLb5Vi0=\"}},\"text\":\"Introduction – SimpliRoute API Reference\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nDevelopers\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nBack to SimpliRoute\\nHelp Center\\nLog InSign Up\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n          NAV\\n            \\n\\n\\n\\n\\n\\nshell\\njava\\njavascript\\n\\n\\n\\n\\n\\n\\n\\n\\nIntroduction\\n\\n\\nAuthentication\\n\\n\\nVisits\\n\\n\\nThe Visit Object\\n\\n\\nThe Property Object\\n\\n\\nThe Items Object\\n\\n\\nCreate a visit with items\\n\\n\\nRetrieve a visit\\n\\n\\nAdding items to a visit\\n\\n\\nDelete a visit\\n\\n\\nDelete visit masive\\n\\n\\nUpdate a visit\\n\\n\\nVisit detail\\n\\n\\nObtain details of the visit\\n\\n\\nAPI validation of time windows - visits\\n\\n\\nCheckout a visit\\n\\n\\n\\n\\nPlans management\\n\\n\\nCreate Plan\\n\\n\\nImportant considerations\\n\\n\\n\\n\\nRoutes\\n\\n\\nCreate routes\\n\\n\\nList of Vehicles with routes for a date\\n\\n\\nList of Visits by Route\\n\\n\\nUpdate reference field by Route\\n\\n\\n\\n\\nRoute Properties\\n\\n\\nGet Route Properties\\n\\n\\nCreate Route Properties\\n\\n\\nUpdate Route Properties\\n\\n\\nPartial Update Route Properties\\n\\n\\nDelete Route Properties\\n\\n\\nBulk Search Routes Properties\\n\\n\\n\\n\\nVehicles\\n\\n\\nCreate vehicles\\n\\n\\nList Vehicle\\n\\n\\nDelete vechicle\\n\\n\\n\\n\\nCustomers\\n\\n\\nCreate Customers\\n\\n\\nObtain Customers\\n\\n\\nDelete a Customer\\n\\n\\nDelete Customers\\n\\n\\nUpdate Customers\\n\\n\\nClient Custom Properties\\n\\n\\nCreate custom property\\n\\n\\nUsing Custom Properties\\n\\n\\nForceField\\n\\n\\n\\n\\nUsers\\n\\n\\nList users\\n\\n\\nGet a determine user\\n\\n\\nUpdate user\\n\\n\\nDelete user\\n\\n\\n\\n\\nSkills\\n\\n\\nWebhooks\\n\\n\\nHow to work with SimpliRoute's webhooks\\n\\n\\nWhich events can be notified\\n\\n\\nConfiguring your Webhooks settings\\n\\n\\nCreate Webhook\\n\\n\\nList Webhooks\\n\\n\\nUpdate Webhooks\\n\\n\\nDelete Webhooks\\n\\n\\nWebhook Plan creation\\n\\n\\nWebhook Plan edition\\n\\n\\nPlan Object\\n\\n\\nRoute Object\\n\\n\\nVisit Object\\n\\n\\nWebhook Route creation\\n\\n\\nWebhook Route edition\\n\\n\\nWebhook Route started\\n\\n\\nWebhook Route Finish\\n\\n\\nWebhook  On it`s way\\n\\n\\nWebhook Checkout\\n\\n\\nWebhook Checkout detailed\\n\\n\\n\\n\\nOptimization\\n\\n\\nOptimization Instance\\n\\n\\nVehicles\\n\\n\\nDeliveries\\n\\n\\nOptimization options\\n\\n\\nExample - Multiple depots\\n\\n\\nBackhaul Optimization (Routes with picks and drop offs)\\n\\n\\nStop Routing\\n\\n\\nPick-up and Delivery\\n\\n\\nRest Time (Routes with a break time)\\n\\n\\nIncremental Routing (Vehicles with previously created routes)\\n\\n\\nLong Routes\\n\\n\\nRadial Routing\\n\\n\\nEstimated Time Calculation\\n\\n\\n\\n\\nOptimization: Metadata\\n\\n\\nDistance\\n\\n\\n\\n\\nValidate Incompatibilities\\n\\n\\nExample\\n\\n\\nList of Codes\\n\\n\\n\\n\\nInvoices\\n\\n\\nInvoice\\n\\n\\nInvoiceItem\\n\\n\\nDeliveryIssue\\n\\n\\nProducts and ProductCategory\\n\\n\\n\\n\\nThe Checkout Process\\n\\n\\n1. Start the route\\n\\n\\n2. Checkout a visit\\n\\n\\n3. Store extra-field-values\\n\\n\\n4. Store pictures\\n\\n\\n5. Trigger notifications\\n\\n\\n\\n\\nTMS: Transportation provider\\n\\n\\nCreation Request\\n\\n\\nList Request\\n\\n\\nRetrieve resource Request\\n\\n\\nUpdate Request\\n\\n\\nDelete Request\\n\\n\\nAssign Transportation Provider to Vehicle with Transportation Provider Request\\n\\n\\n\\n\\nGPS Integration\\n\\n\\nFrequency for sending data\\n\\n\\nLoss of signal and sending of stored local data\\n\\n\\nIntegration of GPS and variable data with SimpliRoute\\n\\n\\nPayload details\\n\\n\\nTemperature object\\n\\n\\nAlert Object\\n\\n\\nAlerts\\n\\n\\nAvailable alerts\\n\\n\\nFrequency for sending data\\n\\n\\nLoss of signal and sending of stored local data\\n\\n\\n\\n\\nErrors\\n\\n\\nDatamart\\n\\n\\nHow does pagination work?\\n\\n\\nWhat data is available in Datamart?\\n\\n\\nWhat filtering and sorting options does Datamart offer?\\n\\n\\n\\n\\n\\nSign Up for a Developer Key\\n 2022 - SimpliRoute\",\"textTemplate\":\"\",\"endCharIdx\":3132,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"zqigCMYsyU8v+4TLKkN5l5v6gqez/WuA7t0Do+6svLU=\"}","__type__":"TEXT"},"8d3a9a51-58e0-4edc-bbe5-180e3bcb7af5":{"__data__":"{\"id_\":\"8d3a9a51-58e0-4edc-bbe5-180e3bcb7af5\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"50703085-0045-435b-ba16-43efb2828bcf\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"O44nO1ckY4yOTOUAzS2mvSDPt24H5ZPw8ytwxFYhN+8=\"},\"NEXT\":{\"nodeId\":\"059ada05-b1e8-4963-88b5-096cf239b50b\",\"metadata\":{},\"hash\":\"pO7G99KVjHO+ym2Au+gDe7Prq+vRTvBUgINrfwVdrJs=\"}},\"text\":\"Example\\n\\n\\nList of Codes\\n\\n\\n\\n\\nInvoices\\n\\n\\nInvoice\\n\\n\\nInvoiceItem\\n\\n\\nDeliveryIssue\\n\\n\\nProducts and ProductCategory\\n\\n\\n\\n\\nThe Checkout Process\\n\\n\\n1. Start the route\\n\\n\\n2. Checkout a visit\\n\\n\\n3. Store extra-field-values\\n\\n\\n4. Store pictures\\n\\n\\n5. Trigger notifications\\n\\n\\n\\n\\nTMS: Transportation provider\\n\\n\\nCreation Request\\n\\n\\nList Request\\n\\n\\nRetrieve resource Request\\n\\n\\nUpdate Request\\n\\n\\nDelete Request\\n\\n\\nAssign Transportation Provider to Vehicle with Transportation Provider Request\\n\\n\\n\\n\\nGPS Integration\\n\\n\\nFrequency for sending data\\n\\n\\nLoss of signal and sending of stored local data\\n\\n\\nIntegration of GPS and variable data with SimpliRoute\\n\\n\\nPayload details\\n\\n\\nTemperature object\\n\\n\\nAlert Object\\n\\n\\nAlerts\\n\\n\\nAvailable alerts\\n\\n\\nFrequency for sending data\\n\\n\\nLoss of signal and sending of stored local data\\n\\n\\n\\n\\nErrors\\n\\n\\nDatamart\\n\\n\\nHow does pagination work?\\n\\n\\nWhat data is available in Datamart?\\n\\n\\nWhat filtering and sorting options does Datamart offer?\\n\\n\\n\\n\\n\\nSign Up for a Developer Key\\n 2022 - SimpliRoute\\n\\n\\n\\n\\n\\n\\n\\n\\nIntroduction\\n\\nAPI Endpoint:\\n\\nURL: https://api.simpliroute.com/v1/\\nURL: https://api.simpliroute.com/v1/\\nURL: https://api.simpliroute.com/v1/\\n\\nThe SimpliRoute API is a set of REST endpoints. Our API has predictable, resource-oriented URLs, and uses HTTP response codes to indicate API errors. We use built-in HTTP features, like HTTP authentication and HTTP verbs, which are understood by off-the-shelf HTTP clients. We support cross-origin resource sharing, allowing you to interact securely with our API from a client-side web application (though you should never expose your secret API key in any public website's client-side code). JSON is returned by all API responses, included error logs.\\nThe main objective of this docs to allow any developer to start working with our API thanks to different examples and use-cases exposed in this documentation. There are 2 basic use-cases to be working with our API:\\n\\nYou (or your company) are a SimpliRoute web platform and want to send information from your system to SimpliRoute or vice-versa. If that is the case, you'll be mostly interested in our Visit endpoints\\nYou are developer and you are interested in improve our system adding route intelligence. If that is the case, our Route Optimization API is the right path to follow.\\n\\nIf you have feedback, error or out-dated info, feel free to contact us at contact@simpliroute.com.\\nAuthentication\\nBasic endpoint to show how to make a call with the Authorization Token\\n\\nBasic endpoint to show how to make a call with the Authorization Token\\n\\nvar settings = {\\n    async: true,\\n    crossDomain: true,\\n    url: \\\"https://api.simpliroute.com/v1/accounts/me/\\\",\\n    method: \\\"GET\\\",\\n    headers: {\\n        \\\"content-type\\\": \\\"application/json\\\",\\n        authorization: \\\"Token 12345678900987sr\\\",\\n    },\\n};\\n$.ajax(settings).done(function (response) {\\n    console.log(response);\\n});\\nOkHttpClient client = new OkHttpClient();\\n\\nRequest request = new Request.Builder()\\n  .url(\\\"https://api.simpliroute.com/v1/accounts/me/\\\")\\n  .get()\\n  .addHeader(\\\"content-type\\\", \\\"application/json\\\")\\n  .addHeader(\\\"authorization\\\", \\\"Token 12345678900987sr\\\")\\n  .build();\\n\\nResponse response = client.newCall(request).execute();\\ncurl curl -X GET \\\\\\n  https://api.simpliroute.com/v1/accounts/me/ \\\\\\n  -H 'authorization: Token 12345678900987sr' \\\\\\n  -H 'content-type: application/json' \\\\\",\"textTemplate\":\"\",\"startCharIdx\":2155,\"endCharIdx\":5475,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"Q9nUiisKEHSUdjV3srGsBQC4AHKpi2B9CJNrCswc91g=\"}","__type__":"TEXT"},"059ada05-b1e8-4963-88b5-096cf239b50b":{"__data__":"{\"id_\":\"059ada05-b1e8-4963-88b5-096cf239b50b\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"8d3a9a51-58e0-4edc-bbe5-180e3bcb7af5\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"U4YeViTGeXC02uWAxVzO1Q1urMFhCTmQzgDCSLb5Vi0=\"},\"NEXT\":{\"nodeId\":\"025b083e-7e17-4dac-897a-55e1f2f5886a\",\"metadata\":{},\"hash\":\"Zz6xg0l9e4Qz20VGJpl7RNqwxKQ8Jlc4XtAXDavUzRU=\"}},\"text\":\"Make sure to replace 12345678900987sr with your API key.\\n\\nTo use SimpliRoute API, you have to provide a valid Token through the header \\\"Authorization\\\". If you don't have a Token, you can get it from your account in the url: https://app2.simpliroute.com/#/uprofile/info.\\nIf you don't have an account, you can create a 14-days free trial in this URL: https://app2.simpliroute.com/#/signup.\\nAll the examples in the documentation will use a fake API token (12345678900987sr), be sure to replace it with the right value when you put your code in a production system.\\n\\nVisits\\nIf you want to integrate your system with SimpliRoute, the most relevant endpoint in our API is Visit. A visit object is anything that a driver has to do in the street: a service order, a delivery, a pickup. Then, if you want to optimize those orders and track then in SimpliRoute, you have to create a visit object. \\nIn this particular object, you have to specify a few simple things, these are the only mandatory fields to create a visit in Simpliroute.\\n\\nTitle\\nAddress\\nPlanned Date\\n\\nThat is the basic information that a visit must contain to be accepted in the API. As all the endpoints in SimpliRoute API, it implements GET, POST, PUT and DELETE http methods.\\nThe Visit Object\\n\\nVisit Object example\\n\\n{\\n    \\\"id\\\": 200189436,\\n    \\\"order\\\": null,\\n    \\\"tracking_id\\\": \\\"SR98278668985242\\\",\\n    \\\"status\\\": \\\"pending\\\",\\n    \\\"title\\\": \\\"SimpliRoute3\\\",\\n    \\\"address\\\": \\\"vespucio norte 22, las condes\\\",\\n    \\\"latitude\\\": \\\"-33.413433\\\",\\n    \\\"longitude\\\": \\\"-70.585503\\\",\\n    \\\"load\\\": 39.0,\\n    \\\"load_2\\\": 100.0,\\n    \\\"load_3\\\": 0.0,\\n    \\\"window_start\\\": null,\\n    \\\"window_end\\\": null,\\n    \\\"window_start_2\\\": null,\\n    \\\"window_end_2\\\": null,\\n    \\\"duration\\\": \\\"00:00:10\\\",\\n    \\\"contact_name\\\": \\\"\\\",\\n    \\\"contact_phone\\\": \\\"\\\",\\n    \\\"contact_email\\\": null,\\n    \\\"reference\\\": \\\"\\\",\\n    \\\"notes\\\": \\\"\\\",\\n    \\\"skills_required\\\": [],\\n    \\\"skills_optional\\\": [],\\n    \\\"tags\\\": [],\\n    \\\"planned_date\\\": \\\"2016-06-30\\\",\\n    \\\"programmed_date\\\": null,\\n    \\\"route\\\": null,\\n    \\\"estimated_time_arrival\\\": null,\\n    \\\"estimated_time_departure\\\": null,\\n    \\\"checkin_time\\\": null,\\n    \\\"checkout_time\\\": null,\\n    \\\"checkout_latitude\\\": null,\\n    \\\"checkout_longitude\\\": null,\\n    \\\"checkout_comment\\\": \\\"\\\",\\n    \\\"checkout_observation\\\": null,\\n    \\\"signature\\\": null,\\n    \\\"pictures\\\": [],\\n    \\\"created\\\": \\\"2022-09-03T01:19:42.786633Z\\\",\\n    \\\"modified\\\": \\\"2022-09-03T01:19:42.786633Z\\\",\\n    \\\"eta_predicted\\\": \\\"2016-06-30T00:00:00-04:00\\\",\\n    \\\"eta_current\\\": \\\"2016-06-30T00:00:00-04:00\\\",\\n    \\\"priority\\\": false,\\n    \\\"has_alert\\\": false,\\n    \\\"priority_level\\\": null,\\n    \\\"extra_field_values\\\": null,\\n    \\\"geocode_alert\\\": null,\\n    \\\"visit_type\\\": null,\\n    \\\"current_eta\\\": null,\\n    \\\"fleet\\\": null,\\n    \\\"properties\\\": {\\n      \\\"city\\\": \\\"Santiago\\\"\\n    },\\n    \\\"items\\\": [\\n        {\\n            \\\"id\\\": 221544,\\n            \\\"title\\\": \\\"bar\\\",\\n            \\\"status\\\": \\\"pending\\\",\\n            \\\"load\\\": 2.0,\\n            \\\"load_2\\\": 1.5,\\n            \\\"load_3\\\": 0.0,\\n            \\\"reference\\\": \\\"bar\\\",\\n            \\\"visit\\\": 200189436,\\n            \\\"notes\\\": \\\"\\\",\\n            \\\"quantity_planned\\\": 2.0,\\n            \\\"quantity_delivered\\\": 0.0\\n        },\\n        {\\n            \\\"id\\\": 221543,\\n            \\\"title\\\": \\\"foo\\\",\\n            \\\"status\\\": \\\"pending\\\",\\n            \\\"load\\\": 15.0,\\n            \\\"load_2\\\": 0.0,\\n            \\\"load_3\\\": 0.5,\\n            \\\"reference\\\": \\\"foo\\\",\\n            \\\"visit\\\": 200189436,\\n            \\\"notes\\\": \\\"\\\",\\n            \\\"quantity_planned\\\": 1.0,\\n            \\\"quantity_delivered\\\": 0.0\\n        }\\n    ],\\n    \\\"on_its_way\\\": null\\n}\\n\\n\\n\\nAttributes\\nData Type\\nDescription\\n\\n\\n\\nid\\nuuid\\nUnique identifier for the object.\",\"textTemplate\":\"\",\"startCharIdx\":5478,\"endCharIdx\":9020,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"0PbzQ1tCzWn8V46gFhuttN4pGagEnf4+dO1HRWHMVa4=\"}","__type__":"TEXT"},"025b083e-7e17-4dac-897a-55e1f2f5886a":{"__data__":"{\"id_\":\"025b083e-7e17-4dac-897a-55e1f2f5886a\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"059ada05-b1e8-4963-88b5-096cf239b50b\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"pO7G99KVjHO+ym2Au+gDe7Prq+vRTvBUgINrfwVdrJs=\"},\"NEXT\":{\"nodeId\":\"9a349394-68ef-42dd-be00-bac3c8ff9572\",\"metadata\":{},\"hash\":\"24rlEb+6qLZqKFjV9kyiXTshwVXh/CZ9UsuyJkkHPJk=\"}},\"text\":\"Attributes\\nData Type\\nDescription\\n\\n\\n\\nid\\nuuid\\nUnique identifier for the object.\\n\\n\\norder\\nInteger\\nVisit order when the visit already belongs to a delivery route\\n\\n\\ntracking_id\\nString\\nAutogenerated tracking code to follow the delivery\\n\\n\\nstatus\\nString\\nVisit's status (pending, completed, failed)\\n\\n\\ntitle\\nString\\nString to identify the delivery. Usually company or person's name\\n\\n\\naddress\\nString\\nAddress text. Best practice is to use Googlemaps format.\\n\\n\\nplanned_date\\nDate\\nDate when the visit will be delivered\\n\\n\\nlatitude\\nFloat\\nVisit's latitude location\\n\\n\\nlongitude\\nFloat\\nVisit's longitude location\\n\\n\\nload\\nDouble\\nSpace of the truck that visit uses.\\n\\n\\nload_2\\nDouble\\nSpace of the truck that visit uses.\\n\\n\\nload_3\\nDouble\\nSpace of the truck that visit uses.\\n\\n\\nwindow_start\\nTime\\nInitial Hour when the visit can be visit\\n\\n\\nwindow_end\\nTime\\nFinal Hour when the visit can be visit\\n\\n\\nwindow_start_2\\nTime\\nInitial Hour when the visit can be visit\\n\\n\\nwindow_end_2\\nTime\\nFinal Hour when the visit can be visit\\n\\n\\nduration\\nTimestamp\\nTime spent in the delivery (HH:mm:ss)\\n\\n\\ncontact_name\\nString\\nName of who will receive the delivery\\n\\n\\ncontact_phone\\nString\\nPhone of who will receive the delivery\\n\\n\\ncontact_email\\nString\\nE-mail of who will receive the delivery\\n\\n\\nreference\\nString\\nReference or internal identifier of the company. Example: Invoice or order number.\\n\\n\\nnotes\\nString\\nInformation to help the driver\\n\\n\\nskills_required\\nInteger array\\nArray of required skills id that this visit needs\\n\\n\\nskills_optional\\nInteger array\\nArray of optional skills id that this visit needs\\n\\n\\nTags\\nInteger array\\nArray of tag IDs that characterize the visit.\\n\\n\\nroute*\\nUUID\\nUnique identifier of the route.YYYY-MM-DD\\n\\n\\nroute_estimated_time_start*\\nTime\\nEstimated time that the vehicle will start the route in \\\"HH:mm:ss\\\"\\n\\n\\nestimated_time_arrival\\nTime\\nSimpliRoute estimation of arrival to the visit.\\n\\n\\nestimated_time_departure\\nTime\\nSimpliRoute estimation of departure from visit.\\n\\n\\ncheckin_time\\nTimestamp\\nTimestamp when the driver started the delivery.\\n\\n\\ncheckout_time\\nTimestamp\\nTimestamp when the driver completed the delivery.\\n\\n\\ncheckout_latitude\\nFloat\\nLatitude of the driver when he completed the delivery\\n\\n\\ncheckout_longitude\\nFloat\\nLongitude of the driver when he completed the delivery\\n\\n\\ncheckout_comment*\\nString\\nInformation provided by the driver when she was completing the delivery\\n\\n\\ncheckout_observation*\\nUUID\\nUnique identifier of the observation.\\n\\n\\nsignature*\\nString\\nContains the URL with the image of the client's signature..\\n\\n\\npictures\\nURL array\\nArray with URLs of pictures added with the delivery.\\n\\n\\ncreated*\\nTimestamp\\nTimestamp of the creation of the visit.\\n\\n\\nmodified*\\nTimestamp\\nTimestamp of the last edition of the visit.\\n\\n\\ndriver*\\nInteger\\nDriver ID\\n\\n\\nvehicle*\\nInteger\\nVehicle ID.\\n\\n\\nhas alert*\\nBoolean\\nContains a boolean value to identify an alert...\\n\\n\\npriority_level\\nInteger\\nIf the visit is more important than others. It goes from 1 to 5. 1: First of the day, 2: Last of the day. 3: High priority, 4: Medium priority, 5: Low priority.\\n\\n\\nextra_field_values\\nString\\njson object containing attributes and values ​​pre-configured by SimpliRoute.\\n\\n\\ngeocode_alert*\\nString\\nGeocoding alert.\\n\\n\\nvisit_type*\\nString\\nContains the URL with the image of the client's signature..\\n\\n\\nfleet\\nInteger\\nFleet ID.\\n\\n\\nitems\\nArray Object\\nArrangement containing the elements to deliver on the visit.\\n\\n\\non its way\\nBoolean\\n\\n\\n\\nproperties\\nObject\\nExtra properties of a visit\\n\\n\\nThe Property Object\\n\\n\\nAttributes\\nData Type\\nDescription\\n\\n\\n\\ncity\\nString\\nThe city of the visit address\\n\\n\\ndelivery_type\\nString\\nSpecifies the delivery type: DELIVERY or PICK\\n\\n\\nsource\\nString\\nThe source of the data to be saved: CLIENT\\n\\n\\nsource_ident\\nString\\nAn identifier used to reference the source, e.g., client ID\\n\\n\\nmerchant\\nString\\nThe merchant associated with the data\\n\\n\\nThe Items Object\\nThe items object is presented, where you can manage quantities of items for each visit, as well as their partial delivery. To do this, they will be able to create visits with item arrangements by establishing up to 3 loads of the item, reference, notes, quantity planned and delivered.\\n\\nItems Object example\\n\\n{\\n        {\\n        \\\"id\\\": 64,\\n        \\\"title\\\": \\\"prueba2\\\",\\n        \\\"status\\\": \\\"pending\\\",\\n        \\\"load\\\": null,\\n        \\\"load_2\\\": null,\\n        \\\"load_3\\\": 5.0,\\n        \\\"reference\\\": \\\"\\\",\\n        \\\"notes\\\": \\\"\\\",\\n        \\\"quantity_planned\\\": 4.0,\\n        \\\"quantity_delivered\\\": 1.0\\n    }\\n}\\n\\n\\n\\nAttributes\\nData Type\\nDescription\",\"textTemplate\":\"\",\"startCharIdx\":8943,\"endCharIdx\":13353,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"a2JSUQEAR5v+p4utcb7WmT8JqUyBl2BsV4Oya8RFaiA=\"}","__type__":"TEXT"},"9a349394-68ef-42dd-be00-bac3c8ff9572":{"__data__":"{\"id_\":\"9a349394-68ef-42dd-be00-bac3c8ff9572\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"025b083e-7e17-4dac-897a-55e1f2f5886a\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"Zz6xg0l9e4Qz20VGJpl7RNqwxKQ8Jlc4XtAXDavUzRU=\"},\"NEXT\":{\"nodeId\":\"ef8c2087-edf4-4a48-af0f-6e7d3c970e42\",\"metadata\":{},\"hash\":\"HSUefYUztaZEeGpqt3CXA7dIs4s8Ke8jPHqjxvfR/N0=\"}},\"text\":\"source_ident\\nString\\nAn identifier used to reference the source, e.g., client ID\\n\\n\\nmerchant\\nString\\nThe merchant associated with the data\\n\\n\\nThe Items Object\\nThe items object is presented, where you can manage quantities of items for each visit, as well as their partial delivery. To do this, they will be able to create visits with item arrangements by establishing up to 3 loads of the item, reference, notes, quantity planned and delivered.\\n\\nItems Object example\\n\\n{\\n        {\\n        \\\"id\\\": 64,\\n        \\\"title\\\": \\\"prueba2\\\",\\n        \\\"status\\\": \\\"pending\\\",\\n        \\\"load\\\": null,\\n        \\\"load_2\\\": null,\\n        \\\"load_3\\\": 5.0,\\n        \\\"reference\\\": \\\"\\\",\\n        \\\"notes\\\": \\\"\\\",\\n        \\\"quantity_planned\\\": 4.0,\\n        \\\"quantity_delivered\\\": 1.0\\n    }\\n}\\n\\n\\n\\nAttributes\\nData Type\\nDescription\\n\\n\\n\\nid\\nuuid\\nUnique identifier for the object.\\n\\n\\ntitle\\nString\\nTitle of the item to deliver.route\\n\\n\\nstatus\\nString\\nElement status: pending, failed, or completed\\n\\n\\nload\\nDouble\\nSpace or load that the element occupies in the vehicle\\n\\n\\nload_2\\nDouble\\nSecond load unit complementary to the first\\n\\n\\nload_3\\nDouble\\nThird load unit complementary to the first and the second\\n\\n\\nreference\\nDate\\nInternal element identifier\\n\\n\\nnotes\\nString\\nAdditional item notes\\n\\n\\nquantity_planned\\nFloat\\nPlanned quantity of the item\\n\\n\\nquantity_delivered\\nFloat\\nDelivered quantity of the item\\n\\n\\nCreate a visit with items\\nYou can create visit adding quantities of items for each visit, these fields are optional.\\n\\nURL Definition\\n\\n\\nPOST https://api.simpliroute.com/v1/routes/visits/\\n\\n\\n\\nExample Request\\n\\ncurl --location --request POST 'https://api.simpliroute.com/v1/routes/visits' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n    \\\"title\\\": \\\"SimpliRoute3\\\",\\n    \\\"address\\\": \\\"vespucio norte 22, las condes\\\",\\n    \\\"load\\\": 39,\\n    \\\"load_2\\\": 100,\\n    \\\"window_start\\\": null,\\n    \\\"window_end\\\": null,\\n    \\\"duration\\\": \\\"00:00:10\\\",\\n    \\\"contact_name\\\": \\\"\\\",\\n    \\\"contact_phone\\\": \\\"\\\",\\n    \\\"reference\\\": \\\"\\\",\\n    \\\"notes\\\": \\\"\\\",\\n    \\\"planned_date\\\": \\\"2016-06-30\\\",\\n    \\\"items\\\": [\\n      {\\n          \\\"title\\\": \\\"foo\\\",\\n          \\\"load\\\": 15,\\n          \\\"load_3\\\": 0.5     ,\\n          \\\"reference\\\": \\\"foo\\\",\\n          \\\"quantity_planned\\\": 1\\n      },\\n      {\\n          \\\"title\\\": \\\"bar\\\",\\n          \\\"load\\\": 2,\\n          \\\"load_2\\\": 1.5,\\n          \\\"reference\\\": \\\"bar\\\",\\n          \\\"quantity_planned\\\": 2\\n      }\\n  ]\\n}'\",\"textTemplate\":\"\",\"startCharIdx\":12577,\"endCharIdx\":14893,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"rquknsUaQurCvG3g6VpaVITcExvZDBuVXrStCsbkClY=\"}","__type__":"TEXT"},"ef8c2087-edf4-4a48-af0f-6e7d3c970e42":{"__data__":"{\"id_\":\"ef8c2087-edf4-4a48-af0f-6e7d3c970e42\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"9a349394-68ef-42dd-be00-bac3c8ff9572\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"24rlEb+6qLZqKFjV9kyiXTshwVXh/CZ9UsuyJkkHPJk=\"},\"NEXT\":{\"nodeId\":\"9eb5b284-4965-4636-a196-891351a37834\",\"metadata\":{},\"hash\":\"tuf0qPlV+p+JWbYgypQWJYTGYXRI0v4WjvrADtyllHo=\"}},\"text\":\"OkHttpClient client = new OkHttpClient();\\n\\nMediaType mediaType = MediaType.parse(\\\"application/json\\\");\\nRequestBody body = RequestBody.create(mediaType, \\\"{\\\\n  \\\\\\\"title\\\\\\\": \\\\\\\"Kwik e mart\\\\\\\",\\\\n  \\\\\\\"address\\\\\\\": \\\\\\\"742 Evergreen Terrace, Springfield, USA\\\\\\\",\\\\n  \\\\\\\"latitude\\\\\\\": 44.052698,\\\\n  \\\\\\\"longitude\\\\\\\": -123.020718,\\\\n  \\\\\\\"contact_name\\\\\\\": \\\\\\\"Apu Nahasapeemapetilon\\\\\\\",\\\\n  \\\\\\\"contact_phone\\\\\\\": \\\\\\\"+123413123212\\\\\\\",\\\\n  \\\\\\\"contact_email\\\\\\\": \\\\\\\"apu@example.com\\\\\\\",\\\\n  \\\\\\\"reference\\\\\\\": \\\\\\\"invoice_id\\\\\\\",\\\\n  \\\\\\\"notes\\\\\\\": \\\\\\\"Leave at front door\\\\\\\",\\\\n  \\\\\\\"planned_date\\\\\\\": \\\\\\\"2020-01-01\\\\\\\"\\\\n}\\\");\\nRequest request = new Request.Builder()\\n  .url(\\\"https://api.simpliroute.com/v1/routes/visits/\\\")\\n  .post(body)\\n  .addHeader(\\\"content-type\\\", \\\"application/json\\\")\\n  .addHeader(\\\"authorization\\\", \\\"Token 12345678900987sr\\\")\\n  .build();\\n\\nResponse response = client.newCall(request).execute();\\nvar settings = {\\n    async: true,\\n    crossDomain: true,\\n    url: \\\"https://api.simpliroute.com/v1/routes/visits/\\\",\\n    method: \\\"POST\\\",\\n    headers: {\\n        \\\"content-type\\\": \\\"application/json\\\",\\n        authorization: \\\"Token 12345678900987sr\\\",\\n    },\\n    processData: false,\\n    data: '{\\\\n  \\\"title\\\": \\\"Kwik e mart\\\",\\\\n  \\\"address\\\": \\\"742 Evergreen Terrace, Springfield, USA\\\",\\\\n  \\\"latitude\\\": 44.052698,\\\\n  \\\"longitude\\\": -123.020718,\\\\n  \\\"contact_name\\\": \\\"Apu Nahasapeemapetilon\\\",\\\\n  \\\"contact_phone\\\": \\\"+123413123212\\\",\\\\n  \\\"contact_email\\\": \\\"apu@example.com\\\",\\\\n  \\\"reference\\\": \\\"invoice_id\\\",\\\\n  \\\"notes\\\": \\\"Leave at front door\\\",\\\\n  \\\"planned_date\\\": \\\"2020-01-01\\\"\\\\n}',\\n};\\n\\n$.ajax(settings).done(function (response) {\\n    console.log(response);\\n});\\n\\nTo create a visit, the bare minimum information is a title, address and a planned_date. The other parameters in the visit object are optional and you'll need them depending of your implementation.\\nYou can create visits one by one or as an array. The examples in the right side only shows one visit creation per request but if you need to create a batch of visit, the input will be something like this:\\n\\nExample Request\\n\\n\\n[ \\n    {\\n    \\\"title\\\": \\\"SimpliRoute3\\\",\\n    \\\"address\\\": \\\"vespucio norte 22, las condes\\\",\\n    \\\"load\\\": 39,\\n    \\\"load_2\\\": 100,\\n    \\\"window_start\\\": null,\\n    \\\"window_end\\\": null,\\n    \\\"duration\\\": \\\"00:00:10\\\",\\n    \\\"contact_name\\\": \\\"\\\",\\n    \\\"contact_phone\\\": \\\"\\\",\\n    \\\"reference\\\": \\\"\\\",\\n    \\\"notes\\\": \\\"\\\",\\n    \\\"planned_date\\\": \\\"2016-06-30\\\",\\n    \\\"items\\\":\\n    [\\n        {\\n            \\\"title\\\": \\\"foo\\\",\\n            \\\"load\\\": 15,\\n            \\\"load_3\\\": 0.5     ,\\n            \\\"reference\\\": \\\"foo\\\",\\n            \\\"quantity_planned\\\": 1\\n        },\\n        {\\n            \\\"title\\\": \\\"bar\\\",\\n            \\\"load\\\": 2,\\n            \\\"load_2\\\": 1.5,\\n            \\\"reference\\\": \\\"bar\\\",\\n            \\\"quantity_planned\\\": 2\\n            }\\n        ]\\n    }\\n    ]\\n\\nReturns\\nReturns the visit object if the creation succeeded. This call will return an error if some of parameters are invalid.\\nRetrieve a visit\\n\\nURL Definition\\n\\n\\nGET https://api.simpliroute.com/v1/routes/visits/{{visit_id}}\",\"textTemplate\":\"\",\"startCharIdx\":14896,\"endCharIdx\":17805,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"xfycK0plKFfnnG+q8G2z3gHq3h9YPPi3mnyElWRttOI=\"}","__type__":"TEXT"},"9eb5b284-4965-4636-a196-891351a37834":{"__data__":"{\"id_\":\"9eb5b284-4965-4636-a196-891351a37834\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"ef8c2087-edf4-4a48-af0f-6e7d3c970e42\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"HSUefYUztaZEeGpqt3CXA7dIs4s8Ke8jPHqjxvfR/N0=\"},\"NEXT\":{\"nodeId\":\"17e733ec-d45c-4c08-b029-d7d9b13f6d2c\",\"metadata\":{},\"hash\":\"sqFf7sIZtLRfTaTtWftfWpdQQclW7R8A0GJVqQBhAJ0=\"}},\"text\":\"GET https://api.simpliroute.com/v1/routes/visits/{{visit_id}}\\n\\n\\n\\nExample Request\\nUsing as '12345' as example for visit_id\\n\\ncurl -X GET \\\\\\n  https://api.simpliroute.com/v1/routes/visits/{{visit_id}}\\\\\\n  -H 'authorization: Token 12345678900987sr' \\\\\\n  -H 'content-type: application/json' \\\\\\nOkHttpClient client = new OkHttpClient();\\n\\nRequest request = new Request.Builder()\\n  .url(\\\"https://api.simpliroute.com/v1/routes/visits/12345\\\")\\n  .get()\\n  .addHeader(\\\"content-type\\\", \\\"application/json\\\")\\n  .addHeader(\\\"authorization\\\", \\\"Token 12345678900987sr\\\")\\n  .build();\\n\\nResponse response = client.newCall(request).execute();\\nvar settings = {\\n    async: true,\\n    crossDomain: true,\\n    url: \\\"https://api.simpliroute.com/v1/routes/visits/12345\\\",\\n    method: \\\"GET\\\",\\n    headers: {\\n        \\\"content-type\\\": \\\"application/json\\\",\\n        authorization: \\\"Token 12345678900987sr\\\",\\n    },\\n};\\n\\n$.ajax(settings).done(function (response) {\\n    console.log(response);\\n});\\n\\n\\nExample Response\\n\\n[\\n    {\\n        \\\"id\\\": 199285905,\\n        \\\"order\\\": null,\\n        \\\"tracking_id\\\": \\\"SR17562640764438\\\",\\n        \\\"status\\\": \\\"pending\\\",\\n        \\\"title\\\": \\\"SimpliRoute3\\\",\\n        \\\"address\\\": \\\"vespucio norte 22, las condes\\\",\\n        \\\"latitude\\\": \\\"-33.413433\\\",\\n        \\\"longitude\\\": \\\"-70.585503\\\",\\n        \\\"load\\\": 39.0,\\n        \\\"load_2\\\": 100.0,\\n        \\\"load_3\\\": 0.0,\\n        \\\"window_start\\\": null,\\n        \\\"window_end\\\": null,\\n        \\\"window_start_2\\\": null,\\n        \\\"window_end_2\\\": null,\\n        \\\"duration\\\": \\\"00:00:10\\\",\\n        \\\"contact_name\\\": \\\"\\\",\\n        \\\"contact_phone\\\": \\\"\\\",\\n        \\\"contact_email\\\": null,\\n        \\\"reference\\\": \\\"\\\",\\n        \\\"notes\\\": \\\"\\\",\\n        \\\"skills_required\\\": [],\\n        \\\"skills_optional\\\": [],\\n        \\\"tags\\\": [],\\n        \\\"planned_date\\\": \\\"2016-06-30\\\",\\n        \\\"programmed_date\\\": null,\\n        \\\"route\\\": null,\\n        \\\"estimated_time_arrival\\\": null,\\n        \\\"estimated_time_departure\\\": null,\\n        \\\"checkin_time\\\": null,\\n        \\\"checkout_time\\\": null,\\n        \\\"checkout_latitude\\\": null,\\n        \\\"checkout_longitude\\\": null,\\n        \\\"checkout_comment\\\": \\\"\\\",\\n        \\\"checkout_observation\\\": null,\\n        \\\"signature\\\": null,\\n        \\\"pictures\\\": [],\\n        \\\"created\\\": \\\"2022-08-31T17:32:55.626342Z\\\",\\n        \\\"modified\\\": \\\"2022-08-31T17:32:55.626342Z\\\",\\n        \\\"eta_predicted\\\": \\\"2016-06-30T00:00:00-04:00\\\",\\n        \\\"eta_current\\\": \\\"2016-06-30T00:00:00-04:00\\\",\\n        \\\"priority\\\": false,\\n        \\\"has_alert\\\": false,\\n        \\\"priority_level\\\": null,\\n        \\\"extra_field_values\\\": null,\\n        \\\"geocode_alert\\\": null,\\n        \\\"visit_type\\\": null,\\n        \\\"current_eta\\\": null,\\n        \\\"fleet\\\": null,\\n        \\\"items\\\": [\\n            {\\n                \\\"id\\\": 211775,\\n                \\\"title\\\": \\\"bar\\\",\\n                \\\"status\\\": \\\"pending\\\",\\n                \\\"load\\\": 2.0,\\n                \\\"load_2\\\": 1.5,\\n                \\\"load_3\\\": 0.0,\\n                \\\"reference\\\": \\\"bar\\\",\\n                \\\"visit\\\": 199285905,\\n                \\\"notes\\\": \\\"\\\",\\n                \\\"quantity_planned\\\": 2.0,\\n                \\\"quantity_delivered\\\": 0.0\\n            },\\n            {\\n                \\\"id\\\": 211774,\\n                \\\"title\\\": \\\"foo\\\",\\n                \\\"status\\\": \\\"pending\\\",\\n                \\\"load\\\": 15.0,\\n                \\\"load_2\\\": 0.0,\\n                \\\"load_3\\\": 0.5,\\n                \\\"reference\\\": \\\"foo\\\",\\n                \\\"visit\\\": 199285905,\\n                \\\"notes\\\": \\\"\\\",\\n                \\\"quantity_planned\\\": 1.0,\\n                \\\"quantity_delivered\\\": 0.0\\n            }\\n        ],\\n        \\\"on_its_way\\\": null\\n    }\\n]\\n\\nRetrieves the details of an existing visit. Send the unique visit id and SimpliRoute API will return the corresponding visiti information.\\nAdding items to a visit\\nBy means of the following endpoint, one or more items can be added to a certain visit, for this we must have the visit id, which must be entered as part of the structure in the url.\\n\\nDefinition\",\"textTemplate\":\"\",\"startCharIdx\":17744,\"endCharIdx\":21526,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"oGgUcJoHLXtUg2oQBxHR8MsxpWfx1FzFFtziVOzSKQY=\"}","__type__":"TEXT"},"17e733ec-d45c-4c08-b029-d7d9b13f6d2c":{"__data__":"{\"id_\":\"17e733ec-d45c-4c08-b029-d7d9b13f6d2c\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"9eb5b284-4965-4636-a196-891351a37834\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"tuf0qPlV+p+JWbYgypQWJYTGYXRI0v4WjvrADtyllHo=\"},\"NEXT\":{\"nodeId\":\"f85ebe9b-b4d8-4eac-aa88-f8959c5ba152\",\"metadata\":{},\"hash\":\"ZnFRrXQ8ySHFfDwKd44vuucXiSpRkYoqxbrFE/h5VoU=\"}},\"text\":\"POST https://api.simpliroute.com/v1/routes/visits/{{VISIT_ID}}/items\\n\\n\\nExample JSON\\n\\n[\\n    {\\n        \\\"id\\\": 63,\\n        \\\"title\\\": \\\"prueba1\\\",\\n        \\\"status\\\": \\\"pending\\\",\\n        \\\"load\\\": null,\\n        \\\"load_2\\\": null,\\n        \\\"load_3\\\": 5.0,\\n        \\\"reference\\\": \\\"\\\",\\n        \\\"notes\\\": \\\"\\\",\\n        \\\"quantity_planned\\\": 4.0,\\n        \\\"quantity_delivered\\\": 1.0\\n    },\\n    {\\n        \\\"id\\\": 64,\\n        \\\"title\\\": \\\"prueba2\\\",\\n        \\\"status\\\": \\\"pending\\\",\\n        \\\"load\\\": null,\\n        \\\"load_2\\\": null,\\n        \\\"load_3\\\": 5.0,\\n        \\\"reference\\\": \\\"\\\",\\n        \\\"notes\\\": \\\"\\\",\\n        \\\"quantity_planned\\\": 4.0,\\n        \\\"quantity_delivered\\\": 1.0\\n    }\\n]\\nDelete a visit\\nTo delete a visit, a DELETE call must be made to the SimpliRoute visits service. This is done in the following way:\\n\\nDefinition\\n\\n\\nDELETE  https://api.simpliroute.com/v1/routes/visits/{{VISIT_ID}}/\\n\\n\\nSomething important is that the elimination of a visit in an already built route does NOT trigger a recalculation of the arrival times of the following points of the route. The only way to do this currently is via the SimpliRoute web interface or manually update the ETAs for each visit with an external calculation.\\nDelete visit masive\\nTo eliminate multiple visits, a POST type call must be made to the SimpliRoute bulk service. This is done in the following way:\\n\\nDefinition\\n\\n\\nPOST https://api.simpliroute.com/v1/bulk/delete/visits/\\n\\n\\n\\nExample Request body\\n``` json\\n{\\nvisits: [000000, 000001...]\\n}\\n\\nThe visits array must have the id of the visits that you want to delete.\\n\\n## Retrieve visits by date\\n\\n> Definition\\n\\n```url\\n\\nGET https://api.simpliroute.com/v1/routes/visits/?planned_date={{planned_date}}\\n\\n\\n\\nExample Request\\n\\ncurl -X GET \\\\\\n  'https://api.simpliroute.com/v1/routes/visits/?planned_date=2020-01-01' \\\\\\n  -H 'authorization: Token 12345678900987sr' \\\\\\n  -H 'content-type: application/json'\\n\\nOkHttpClient client = new OkHttpClient();\\n\\nRequest request = new Request.Builder()\\n  .url(\\\"https://api.simpliroute.com/v1/routes/visits/?planned_date=2020-01-01\\\")\\n  .get()\\n  .addHeader(\\\"content-type\\\", \\\"application/json\\\")\\n  .addHeader(\\\"authorization\\\", \\\"Token 12345678900987sr\\\")\\n  .build();\\n\\nResponse response = client.newCall(request).execute();\\nvar settings = {\\n    async: true,\\n    crossDomain: true,\\n    url: \\\"https://api.simpliroute.com/v1/routes/visits/?planned_date=2020-01-01\\\",\\n    method: \\\"GET\\\",\\n    headers: {\\n        \\\"content-type\\\": \\\"application/json\\\",\\n        authorization: \\\"Token 12345678900987sr\\\",\\n    },\\n};\\n\\n$.ajax(settings).done(function (response) {\\n    console.log(response);\\n});\\n\\nGET call to request all the visits for a given date. The expected planned date format is \\\"YYYY-mm-dd\\\" (Year-month-day, 2020-10-22). This is a useful call if you want to track your deliveries in real-time because it returns the whole list of visits and the complete activity of each of them (including checkouts and information provided from the drivers in the street.)\\nUpdate a visit\\n\\nURL Definition\\n\\n\\nPUT https://api.simpliroute.com/v1/routes/visits/{{visit_id}}\",\"textTemplate\":\"\",\"startCharIdx\":21529,\"endCharIdx\":24533,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"sy0nuKYuNDzMiI5Z87JLxkslaRIlcEozrREZjl9pYjo=\"}","__type__":"TEXT"},"f85ebe9b-b4d8-4eac-aa88-f8959c5ba152":{"__data__":"{\"id_\":\"f85ebe9b-b4d8-4eac-aa88-f8959c5ba152\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"17e733ec-d45c-4c08-b029-d7d9b13f6d2c\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"sqFf7sIZtLRfTaTtWftfWpdQQclW7R8A0GJVqQBhAJ0=\"},\"NEXT\":{\"nodeId\":\"9413b118-b97d-43c3-90ae-128e2e8265c8\",\"metadata\":{},\"hash\":\"BgHT+jF9h4LHtFdb8dsLA4wLuNkvicce3KlbWQWEHXE=\"}},\"text\":\"PUT https://api.simpliroute.com/v1/routes/visits/{{visit_id}}\\n\\n\\n\\nExample Request\\n\\ncurl -X PUT \\\\\\n  https://api.simpliroute.com/v1/routes/visits/1111/ \\\\\\n  -H 'authorization: Token 12345678900987sr' \\\\\\n  -H 'content-type: application/json' \\\\\\n  -d '{\\n  \\\"title\\\": \\\"Updated visit\\\",\\n  \\\"address\\\": \\\"new address\\\",\\n  \\\"load\\\": 39,\\n  \\\"duration\\\": \\\"00:00:10\\\",\\n  \\\"contact_name\\\": \\\"New visit contact\\\",\\n  \\\"contact_phone\\\": \\\"+12341345\\\",\\n  \\\"notes\\\": \\\"New information\\\",\\n  \\\"planned_date\\\": \\\"2020-06-30\\\"\\n}'\\nOkHttpClient client = new OkHttpClient();\\n\\nMediaType mediaType = MediaType.parse(\\\"application/json\\\");\\nRequestBody body = RequestBody.create(mediaType, \\\"{\\\\n  \\\\\\\"title\\\\\\\": \\\\\\\"Updated visit\\\\\\\",\\\\n \\\\\\\"address\\\\\\\": \\\\\\\"New address\\\\\\\",\\\\n \\\\\\\"load\\\\\\\": 39,\\\\n  \\\\\\\"duration\\\\\\\": \\\\\\\"00:00:10\\\\\\\",\\\\n  \\\\\\\"contact_name\\\\\\\": \\\\\\\"New visit contact\\\\\\\",\\\\n  \\\\\\\"contact_phone\\\\\\\": \\\\\\\"+12341345\\\\\\\",\\\\n  \\\\\\\"notes\\\\\\\": \\\\\\\"New information\\\\\\\",\\\\n  \\\\\\\"planned_date\\\\\\\": \\\\\\\"2020-06-30\\\\\\\"\\\\n}\\\");\\nRequest request = new Request.Builder()\\n  .url(\\\"https://api.simpliroute.com/v1/routes/visits/1111/\\\")\\n  .put(body)\\n  .addHeader(\\\"content-type\\\", \\\"application/json\\\")\\n  .addHeader(\\\"authorization\\\", \\\"Token 12345678900987sr\\\")\\n  .build();\\n\\nResponse response = client.newCall(request).execute();\\nvar settings = {\\n    async: true,\\n    crossDomain: true,\\n    url: \\\"https://api.simpliroute.com/v1/routes/visits/1111/\\\",\\n    method: \\\"PUT\\\",\\n    headers: {\\n        \\\"content-type\\\": \\\"application/json\\\",\\n        authorization: \\\"Token 12345678900987sr\\\",\\n    },\\n    processData: false,\\n    data: '{\\\\n  \\\"title\\\": \\\"Updated visit\\\",\\\\n  \\\"address\\\": \\\"New address\\\",\\\\n \\\"load\\\": 39,\\\\n  \\\"duration\\\": \\\"00:00:10\\\",\\\\n  \\\"contact_name\\\": \\\"New visit contact\\\",\\\\n  \\\"contact_phone\\\": \\\"+12341345\\\",\\\\n  \\\"notes\\\": \\\"New information\\\",\\\\n  \\\"planned_date\\\": \\\"2020-06-30\\\"\\\\n}',\\n};\\n\\n$.ajax(settings).done(function (response) {\\n    console.log(response);\\n});\\n\\nUpdates the specified argument by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\\nVisit detail\\nBy using the following endpoint you can obtain the detail information of a visit\\nGET https://api.simpliroute.com/plans/v1/visits/{{VISIT_ID}}/detail/\",\"textTemplate\":\"\",\"startCharIdx\":24472,\"endCharIdx\":26564,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"M7IlFtmpfidkWplfuYCKDegiwGLdyxWxIjgnG2Oc73k=\"}","__type__":"TEXT"},"9413b118-b97d-43c3-90ae-128e2e8265c8":{"__data__":"{\"id_\":\"9413b118-b97d-43c3-90ae-128e2e8265c8\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"f85ebe9b-b4d8-4eac-aa88-f8959c5ba152\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"ZnFRrXQ8ySHFfDwKd44vuucXiSpRkYoqxbrFE/h5VoU=\"},\"NEXT\":{\"nodeId\":\"46b7329b-c235-4720-8847-e9a6029a6d7f\",\"metadata\":{},\"hash\":\"hmhZ1zCWGWUnatyqgrCUzayIPqf0ZsZ06AHEYdlN+U0=\"}},\"text\":\"Example response\\n\\n{\\n\\\"window_start\\\":\\\"09:00:00\\\",\\n\\\"reference\\\":\\\"\\\",\\n\\\"planned_date\\\":\\\"2017-03-13\\\",\\n\\\"time_service\\\":\\\"00:00:03\\\",\\n\\\"window_end\\\":\\\"19:00:00\\\",\\n\\\"checkout_comment\\\":\\\"\\\",\\n\\\"duration\\\":\\\"00:20:00\\\",\\n\\\"estimated_time_arrival\\\":\\\"09:05:00\\\",\\n\\\"id\\\":89273,\\n\\\"checkin_time\\\":\\\"2017-03-13T20:17:08Z\\\",\\n\\\"pictures\\\":[],\\n\\\"window_start_2\\\":\\\"23:59:00\\\",\\n\\\"checkout_observation\\\":\\\"Testing\\\",\\n\\\"latitude\\\":\\\"-33.442880\\\",\\n\\\"status\\\":\\\"completed\\\",\\n\\\"checkout_time\\\":\\\"2017-03-13T20:17:11Z\\\",\\n\\\"window_end_2\\\":\\\"23:59:00\\\",\\n\\\"vehicle_name\\\":\\\"KILASK31\\\",\\n\\\"address\\\":\\\"FANOR VELASCO 85, SANTIAGO, Santiago\\\",\\n\\\"title\\\":\\\"PELUQUERIA DI GIANCARLO\\\",\\n\\\"longitude\\\":\\\"-70.659729\\\",\\n\\\"driver_name\\\":\\\"Paperito\\\",\\n\\\"order\\\":1\\n}\\n\\nThis endpoint provides more information, including Checkout Comment and Images\\nObtain details of the visit\\nBy using the following endpoint you can obtain the detail information of a bulk of visit\\n\\nURL Definition\\n\\nGET https://api.simpliroute.com/v1/routes/visits/{{VISIT_ID}}\\n\\nAPI validation of time windows - visitsCurrent situation\\nWhen creating/editing a visit, the API does not validate the time windows that are reported in it. This causes that there are eventualities in the optimization.\\nThe two problems found are:\\n- It is not validated that the start time is less than the end\\n- Overlapping time windows is not validated when loading both possible time windows for a visit.\\nThis problem appears only through the API integration, since there are validations in both the manual upload and the Excel upload.\\nExpected situation\\nWhen creating a visit that it has a time windows, the same validation that is used today for manual loading must be replicated, which consists of:\\n-  The start time cannot be greater than the end time (Ex: start time 19:00 - end time: 16:00)\\n\\nThe time window does not extend to the next day (Ex: start time 23:00 - end time: 04:00). Although it complies with the aforementioned validation, it is important to clarify that there is no \\\"Night\\\" time window.\\n\\nThe error message that the API will return is: \\n\\nExample \\n\\nTime error: the time window order is inverted. \\n\\nBoth manual and Excel handle the same messages as before.\\n\\nFor the second mentioned problem you need to validate:\\n\\nThat time window 1 is NOT later than time window 2 (Ex: window 1 from 12:00 to 14:00 and window 2 from 08:00 to 10:00).\\nThat there is NO intersection between the two windows (Ex: Window 1 from 12:00 to 14:00 and window 2 from 13:00 to 18:00).\\n\\nThe error message that the API will return is: Time error: the time window order is inverted. Both manual and Excel handle the same messages as before.\\nFor more information, contact your account executive, the support chat or write us an email to support@simpliroute.com.\\nCheckout a visit\\n\\nVisit checkout (minimal payload)\\n\\ncurl --location --request POST 'https://api.simpliroute.com/v1/mobile/visit/<visit_id>/checkout/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n    \\\"status\\\": \\\"completed\\\", \\n    \\\"checkout_time\\\": \\\"2024-04-24 13:24:53\\\", \\n    \\\"checkout_latitude\\\": -12.105513, \\n    \\\"checkout_longitude\\\": -76.965618, \\n    \\\"checkout_comment\\\": \\\"everything was OK\\\" \\n  }'\\n\\nTo check out a visit the following service is available:\\nhttps://api.simpliroute.com/v1/mobile/visit/<visit_id>/checkout/\\nA minimal payload cURL is shown at the right panel 👉\\nIf you plan to implement the same features as our mobile application please check The Checkout process\\n\\n\\nParameter\\ntype\\ndescription\\n\\n\\n\\nstatus\\nstring\\none of the following statuses: pending, completed, failed\\n\\n\\ncheckout_time\\nstring\\ndate and hour of checkout following the  ISO 8601 standard\\n\\n\\ncheckout_latitude\\nfloat\\nlatitude at the point of delivery\\n\\n\\ncheckout_longitude\\nfloat\\nlongitude at the point of delivery\\n\\n\\ncheckout_comment\\nstring\\noptional comment\",\"textTemplate\":\"\",\"startCharIdx\":26569,\"endCharIdx\":30330,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"iUZmdbqEvDn9QTFoGKhc9SaRydy7AxgjQeDAQICWPCE=\"}","__type__":"TEXT"},"46b7329b-c235-4720-8847-e9a6029a6d7f":{"__data__":"{\"id_\":\"46b7329b-c235-4720-8847-e9a6029a6d7f\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"9413b118-b97d-43c3-90ae-128e2e8265c8\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"BgHT+jF9h4LHtFdb8dsLA4wLuNkvicce3KlbWQWEHXE=\"},\"NEXT\":{\"nodeId\":\"c7bdf3cb-9f14-4352-a864-b1fd93726d3e\",\"metadata\":{},\"hash\":\"diAYzJDNhYF8kgAmwkZ5AGSW0OXslSOvvUD6Ak83Hcw=\"}},\"text\":\"Parameter\\ntype\\ndescription\\n\\n\\n\\nstatus\\nstring\\none of the following statuses: pending, completed, failed\\n\\n\\ncheckout_time\\nstring\\ndate and hour of checkout following the  ISO 8601 standard\\n\\n\\ncheckout_latitude\\nfloat\\nlatitude at the point of delivery\\n\\n\\ncheckout_longitude\\nfloat\\nlongitude at the point of delivery\\n\\n\\ncheckout_comment\\nstring\\noptional comment\\n\\n\\nPlans management\\nA plan is a series of Vehicle and Driver pairings for a specific day.\\nPlan is the entity that encompasses a system execution. To avoid problems, it is suggested that plan creation be done with the plan name as a timestamp. The start-end date of the plan, for general cases, is the day of execution of the plan. \\nCreate Plan\\nFirst of all, there are two main objects to consider in a plan:\\n\\nRoutes → The system entity that encompasses a set of visits\\nVisits → Anything that a driver has to do in the street: a service order, a delivery, a pickup\\nAlso, we need to know the id of the driver and vehicle that we are going to route, this can be done with the following endpoints:\\n>URL Definition\\n```url\\n\\nGET Vehicles: https://api.simpliroute.com/v1/routes/vehicles/\\n```\\n\\nURL Definition\\nurl\\nGET Driver: https://api.simpliroute.com/v1/accounts/drivers/\\n\\n\\nWhere we should save the ‘id’ field of each endpoint to use it later on. Once we get those\\nfields, we should be able to create a complete plan using all from above\\n\\nURL Definition\\n\\n\\nPOST https://api.simpliroute.com/v1/plans/create-plan/\",\"textTemplate\":\"\",\"startCharIdx\":29982,\"endCharIdx\":31433,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"aQjYHdYt6bXlP0Gl3Y8kFOhJ3lkbo1LpTVDKwT3t/ZU=\"}","__type__":"TEXT"},"c7bdf3cb-9f14-4352-a864-b1fd93726d3e":{"__data__":"{\"id_\":\"c7bdf3cb-9f14-4352-a864-b1fd93726d3e\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"46b7329b-c235-4720-8847-e9a6029a6d7f\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"hmhZ1zCWGWUnatyqgrCUzayIPqf0ZsZ06AHEYdlN+U0=\"},\"NEXT\":{\"nodeId\":\"8d7ce7f2-3fac-4aed-bde0-7615a488b708\",\"metadata\":{},\"hash\":\"4ZVcW+SUWUujcD0jYFEs7OktjkeSY3qMK6SpaoW64eU=\"}},\"text\":\"Where we should save the ‘id’ field of each endpoint to use it later on. Once we get those\\nfields, we should be able to create a complete plan using all from above\\n\\nURL Definition\\n\\n\\nPOST https://api.simpliroute.com/v1/plans/create-plan/\\n\\n\\n\\nExample request\\n\\n{\\n  \\\"name\\\": \\\"Plan created through API 2022-09-02 12:55:18\\\",\\n  \\\"start_date\\\": \\\"2022-09-02\\\",\\n  \\\"end_date\\\": \\\"2022-09-02\\\",\\n  \\\"routes\\\": [\\n    {\\n      \\\"driver\\\": \\\"183371\\\",\\n      \\\"vehicle\\\": \\\"288202\\\",\\n      \\\"planned_date\\\": \\\"2022-09-02\\\",\\n      \\\"total_distance\\\": \\\"0\\\",\\n      \\\"total_duration\\\": \\\"00:38:00\\\",\\n      \\\"total_load\\\": 0,\\n      \\\"total_load_percentage\\\": 0,\\n      \\\"total_load_2\\\": 0,\\n      \\\"total_load_2_percentage\\\": 0,\\n      \\\"total_load_3\\\": 0,\\n      \\\"total_load_3_percentage\\\": 0,\\n      \\\"estimated_time_start\\\": \\\"08:00:00\\\",\\n      \\\"estimated_time_end\\\": \\\"08:38:00\\\",\\n      \\\"request_status\\\": \\\"created\\\",\\n      \\\"comment\\\": null,\\n      \\\"location_start_address\\\": \\\"Av. San Borja Sur 486, Cercado de Lima 15036\\\",\\n      \\\"location_start_latitude\\\": -12.101389,\\n      \\\"location_start_longitude\\\": -77.004534,\\n      \\\"location_end_address\\\": \\\"Av. San Borja Sur 486, Cercado de Lima 15036\\\",\\n      \\\"location_end_latitude\\\": -12.101389,\\n      \\\"location_end_longitude\\\": -77.004534,\\n      \\\"visits\\\": [\\n        {\\n          \\\"title\\\": \\\"Order 1234\\\",\\n          \\\"address\\\": \\\"Jirón Vesalio 252, San Borja\\\",\\n          \\\"latitude\\\": -12.105329,\\n          \\\"longitude\\\": -77.005524,\\n          \\\"order\\\": 1,\\n          \\\"load\\\": 1,\\n          \\\"window_start\\\": \\\"09:00:00\\\",\\n          \\\"window_end\\\": \\\"17:00:00\\\",\\n          \\\"duration\\\": \\\"00:10:00\\\",\\n          \\\"contact_name\\\": \\\"David Rosales\\\",\\n          \\\"contact_email\\\": \\\"davidrosales@ejemplo.com, otrocorreo@gmail.com\\\",\\n          \\\"reference\\\": \\\"\\\",\\n          \\\"notes\\\": \\\"Watch out with the dog!\\\",\\n          \\\"planned_date\\\": \\\"2022-09-02\\\",\\n          \\\"estimated_time_arrival\\\": \\\"08:02\\\",\\n          \\\"estimated_time_departure\\\": \\\"08:12\\\",\\n          \\\"request_status\\\": \\\"created\\\"\\n        },\\n        {\\n          \\\"title\\\": \\\"Order 4567\\\",\\n          \\\"address\\\": \\\"Jirón Tasso 423, San Borja\\\",\\n          \\\"latitude\\\": -12.105779,\\n          \\\"longitude\\\": -77.019189,\\n          \\\"order\\\": 2,\\n          \\\"load\\\": 1,\\\"window_start\\\": \\\"09:00:00\\\",\\n          \\\"window_end\\\": \\\"17:00:00\\\",\\n          \\\"duration\\\": \\\"00:10:00\\\",\\n          \\\"contact_name\\\": \\\"David Rosales\\\",\\n          \\\"contact_email\\\": \\\"correo@gmail.com\\\",\\n          \\\"reference\\\": \\\"\\\",\\n          \\\"notes\\\": \\\"Ask for David\\\",\\n          \\\"planned_date\\\": \\\"2022-09-02\\\",\\n          \\\"estimated_time_arrival\\\": \\\"08:20\\\",\\n          \\\"estimated_time_departure\\\": \\\"08:30\\\",\\n          \\\"request_status\\\": \\\"created\\\"\\n        }\\n      ]\\n    }\\n  ]\\n}\\n\\n\\nExample response\\n\\n{\\n\\\"id\\\": \\\"4363095e-8d7c-46d0-9a14-8c895c37fa88\\\",\\n\\\"name\\\": \\\"Plan created through API 2022-09-02 12:55:18\\\",\\n\\\"start_date\\\": \\\"2022-09-02\\\",\\n\\\"end_date\\\": \\\"2022-09-02\\\",\\n\\\"reset_day\\\": 1,\\n\\\"created\\\": \\\"2022-09-02T06:51:24.937690Z\\\",\\n\\\"modified\\\": \\\"2022-09-02T06:51:24.937690Z\\\",\\n\\\"is_cluster\\\": false,\\n\\\"routes\\\": [\\n\\\"349cd8a2-5149-4732-b46f-1073fb90ea07\\\"\\n],\\n\\\"plan_metadata\\\": null,\\n\\\"start_time\\\": null,\\n\\\"end_time\\\": null\\n}\\n> Example request\\n\\n```json\\n{\\n        \\\"name\\\": \\\"Agosto\\\",\\n        \\\"start_date\\\": \\\"2016-08-01\\\",\\n        \\\"end_date\\\": \\\"2016-08-01\\\"\\n    }\",\"textTemplate\":\"\",\"startCharIdx\":31197,\"endCharIdx\":34310,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"2zhk9xFQt/tTC+TOXRKkpqiCFHvYttCmiSqRmncDvcc=\"}","__type__":"TEXT"},"8d7ce7f2-3fac-4aed-bde0-7615a488b708":{"__data__":"{\"id_\":\"8d7ce7f2-3fac-4aed-bde0-7615a488b708\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"c7bdf3cb-9f14-4352-a864-b1fd93726d3e\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"diAYzJDNhYF8kgAmwkZ5AGSW0OXslSOvvUD6Ak83Hcw=\"},\"NEXT\":{\"nodeId\":\"f1c54ec4-d3ea-4bd7-b961-a130ab92d47a\",\"metadata\":{},\"hash\":\"k15hPJFyCZ6PPt31Ee5kAYiOQ5lhmuXhIVeTqzOrpoQ=\"}},\"text\":\"Example response\\n\\n[{\\n        \\\"id\\\": \\\"fc65b49f-1f5c-4ca5-9b03-98565e1589f3\\\",\\n        \\\"name\\\": \\\"Agosto\\\",\\n        \\\"start_date\\\": \\\"2016-08-01\\\",\\n        \\\"end_date\\\": \\\"2016-08-01\\\",\\n        \\\"created\\\": \\\"2016-08-25T15:28:32.400027Z\\\",\\n        \\\"modified\\\": \\\"2016-08-25T15:28:32.400365Z\\\",\\n        \\\"is_cluster\\\": false\\n}]\\n\\nImportant considerations\\nAll parameters in bold are considered important to create plans\\nPlan\\n\\nname must be unique\\nstart_date and end_date must be the same\\n\\nRoutes\\n\\ndriver → driver id\\nvehicle → vehicle id\\nplanned_date must be equal to plan’s start_date and end_date\\nestimated_time_start → when the vehicle starts to work\\nestimated_time_end → when vehicle will end working\\nrequest_status → create a new route\\n\\nVisits\\nAn array with all the visits of a route.\\n- title → Identifier of the shop or person to deliver (will be displayed on mobile app)\\n- address → Address of the delivery (will be displayed on mobile app)\\n- order → The order in which will be delivered\\n- planned_date → Delivery date\\n- estimated_time_arrival → Arrival\\n- estimated_time_departure → Departure\\n- request_status → create a new visit\\nThe rest of the parameters are not mandatory and should be setted with dummy data if the i nformation is not available.\\nRoutes\\nRoute is the system entity that encompasses a set of visits. On this you can do the typical CRUD operations:\\nCreate routes\\n\\nURL Definition\\n\\nPOST https://api.simpliroute.com/v1/routes/routes/\\n\\n\\nExample request\\n\\n[\\n  {\\n    \\\"vehicle\\\": 2032,\\n    \\\"driver\\\": null,\\n    \\\"plan\\\": \\\"ab20be8f-e98e-4402-8519-98d6752e0f1a\\\",\\n    \\\"planned_date\\\": \\\"2016-05-20\\\",\\n    \\\"estimated_time_start\\\": \\\"03:00:00\\\",\\n    \\\"estimated_time_end\\\": \\\"19:33:00\\\",\\n    \\\"status\\\": \\\"pending\\\",\\n    \\\"total_duration\\\": \\\"16:33:00\\\",\\n    \\\"total_distance\\\": 0,\\n    \\\"total_load\\\": 2086,\\n    \\\"total_load_percentage\\\": 0,\\n    \\\"location_start_address\\\": \\\"Enrique Mac Iver 524, Santiago, Chile\\\",\\n    \\\"location_start_latitude\\\": \\\"-33.436571\\\",\\n    \\\"location_start_longitude\\\": \\\"-70.647308\\\",\\n    \\\"location_end_address\\\": \\\"Suecia 151, Providencia, Chile\\\",\\n    \\\"location_end_latitude\\\": \\\"-33.421958\\\",\\n    \\\"location_end_longitude\\\": \\\"-70.607270\\\",\\n    \\\"reference\\\": \\\"my reference\\\"\\n  }\\n]\",\"textTemplate\":\"\",\"startCharIdx\":34314,\"endCharIdx\":36459,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"xsy37qqS9LNLBfuJksC8auH/DO/I4elg9LTTnt/U89U=\"}","__type__":"TEXT"},"f1c54ec4-d3ea-4bd7-b961-a130ab92d47a":{"__data__":"{\"id_\":\"f1c54ec4-d3ea-4bd7-b961-a130ab92d47a\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"8d7ce7f2-3fac-4aed-bde0-7615a488b708\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"4ZVcW+SUWUujcD0jYFEs7OktjkeSY3qMK6SpaoW64eU=\"},\"NEXT\":{\"nodeId\":\"9e6deb85-62b5-42ac-bf53-804998bbf036\",\"metadata\":{},\"hash\":\"eDLlYDcxGNIk1XT/7ImfOWIzRI7zMQShwfn7A1KWrBU=\"}},\"text\":\"Example response\\n\\n[\\n  {\\n    \\\"id\\\": \\\"33ddc43b-5ca8-4455-b3af-16a2f1971c1e\\\",\\n    \\\"vehicle\\\": 2032,\\n    \\\"driver\\\": null,\\n    \\\"plan\\\": \\\"ab20be8f-e98e-4402-8519-98d6752e0f1a\\\",\\n    \\\"status\\\": \\\"pending\\\",\\n    \\\"planned_date\\\": \\\"2016-05-20\\\",\\n    \\\"estimated_time_start\\\": \\\"03:00:00\\\",\\n    \\\"estimated_time_end\\\": \\\"19:33:00\\\",\\n    \\\"total_duration\\\": \\\"16:33:00\\\",\\n    \\\"total_distance\\\": 0,\\n    \\\"total_load\\\": 2086,\\n    \\\"total_load_percentage\\\": 0,\\n     \\\"total_load_2\\\": 0.0,\\n    \\\"total_load_2_percentage\\\": 0,\\n    \\\"total_load_3\\\": 0.0,\\n    \\\"total_load_3_percentage\\\": 0,\\n    \\\"location_start_address\\\": \\\"Enrique Mac Iver 524, Santiago, Chile\\\",\\n    \\\"location_start_latitude\\\": \\\"-33.436571\\\",\\n    \\\"location_start_longitude\\\": \\\"-70.647308\\\",\\n    \\\"location_end_address\\\": \\\"Suecia 151, Providencia, Chile\\\",\\n    \\\"location_end_latitude\\\": \\\"-33.421958\\\",\\n    \\\"location_end_longitude\\\": \\\"-70.607270\\\",\\n    \\\"comment\\\": \\\"Route 1\\\",\\n    \\\"start_time\\\": null,\\n    \\\"end_time\\\": null,\\n    \\\"created\\\": \\\"2016-08-01T20:45:25.672207Z\\\",\\n    \\\"modified\\\": \\\"2016-08-01T20:45:25.674460Z\\\",\\n    \\\"kilometers\\\": null,\\n    \\\"total_visits\\\": 0,\\n    \\\"latitude_init\\\": null,\\n    \\\"longitude_init\\\": null,\\n    \\\"latitude_finish\\\": null,\\n    \\\"longitude_finish\\\": null,\\n    \\\"is_revised\\\": false,\\n    \\\"reference\\\": \\\"my reference\\\"\\n  }\\n]\\nList of Vehicles with routes for a date\\n\\nURL Definition\\n\\nGET https://api.simpliroute.com/v1/plans/{{planned_date}}/vehicles/\\n\\n\\nExample response\\n\\n[\\n  {\\n    \\\"color\\\": \\\"#FFCC33\\\",\\n    \\\"routes\\\": [\\n      {\\n        \\\"plan_id\\\": \\\"f61cd65a-075e-454f-a080-d2c573d2be3e\\\",\\n        \\\"id\\\": \\\"e708c5ba-6d49-4418-b87e-9061e1194b1b\\\"\\n      }\\n    ],\\n    \\\"driver\\\":{\\n      \\\"id\\\": 742,\\n      \\\"name\\\": \\\"Conductor Demo\\\"\\n    },\\n    \\\"name\\\": \\\"Mi auto\\\",\\n    \\\"id\\\": 287\\n  }\\n]\\n\\nA Vehicle can have multiple routes for a day. A route is identified by a uuid.\\nList of Visits by RouteGET https://api.simpliroute.com/v1/plans/routes/{{PLAN_ID}}/visits/\",\"textTemplate\":\"\",\"startCharIdx\":36462,\"endCharIdx\":38309,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"fWjiDcmGxeXb0atPGOePTkmuqx2Z9hkIudXieVSZ6EU=\"}","__type__":"TEXT"},"9e6deb85-62b5-42ac-bf53-804998bbf036":{"__data__":"{\"id_\":\"9e6deb85-62b5-42ac-bf53-804998bbf036\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"f1c54ec4-d3ea-4bd7-b961-a130ab92d47a\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"k15hPJFyCZ6PPt31Ee5kAYiOQ5lhmuXhIVeTqzOrpoQ=\"},\"NEXT\":{\"nodeId\":\"bd1ccc8d-3e79-4bca-b5a8-556d1201da9d\",\"metadata\":{},\"hash\":\"oIgUuuWw9IPUPJMokcK4A9ra7nNnogo6o06NSuttYtg=\"}},\"text\":\"Example response\\n\\n[\\n  {\\n    \\\"color\\\": \\\"#FFCC33\\\",\\n    \\\"routes\\\": [\\n      {\\n        \\\"plan_id\\\": \\\"f61cd65a-075e-454f-a080-d2c573d2be3e\\\",\\n        \\\"id\\\": \\\"e708c5ba-6d49-4418-b87e-9061e1194b1b\\\"\\n      }\\n    ],\\n    \\\"driver\\\":{\\n      \\\"id\\\": 742,\\n      \\\"name\\\": \\\"Conductor Demo\\\"\\n    },\\n    \\\"name\\\": \\\"Mi auto\\\",\\n    \\\"id\\\": 287\\n  }\\n]\\n\\nA Vehicle can have multiple routes for a day. A route is identified by a uuid.\\nList of Visits by RouteGET https://api.simpliroute.com/v1/plans/routes/{{PLAN_ID}}/visits/\\n\\n\\nExample response\\n\\n[\\n  {\\n    \\\"status\\\": \\\"failed\\\",\\n    \\\"plan_id\\\": \\\"f61cd65a-075e-454f-a080-d2c573d2be3e\\\",\\n    \\\"reference\\\": \\\"\\\",\\n    \\\"title\\\": \\\"STARK INDUSTRIES\\\",\\n    \\\"checkout_time\\\": \\\"2017-03-13T20:17:20Z\\\",\\n    \\\"longitude\\\": \\\"-70.651066\\\",\\n    \\\"id\\\": 89274,\\n    \\\"route_id\\\": \\\"e708c5ba-6d49-4418-b87e-9061e1194b1b\\\",\\n    \\\"address\\\": \\\"HUERFANOS 1011, SANTIAGO, Santiago\\\",\\n    \\\"latitude\\\": \\\"-33.439626\\\",\\n    \\\"estimated_time_arrival\\\": \\\"09:28:00\\\",\\n    \\\"order\\\": 2\\n  },\\n  {\\n    \\\"status\\\": \\\"completed\\\",\\n    \\\"plan_id\\\": \\\"f61cd65a-075e-454f-a080-d2c573d2be3e\\\",\\n    \\\"reference\\\": \\\"\\\",\\n    \\\"title\\\": \\\"PELUQUERIA DI GIANCARLO\\\",\\n    \\\"checkout_time\\\": \\\"2017-03-13T20:17:11Z\\\",\\n    \\\"longitude\\\": \\\"-70.659729\\\",\\n    \\\"id\\\": 89273,\\n    \\\"route_id\\\": \\\"2d3ced6c-70e4-414e-8313-d5abe9166a15\\\",\\n    \\\"address\\\": \\\"FANOR VELASCO 85, SANTIAGO, Santiago\\\",\\n    \\\"latitude\\\": \\\"-33.442880\\\",\\n    \\\"estimated_time_arrival\\\": \\\"09:05:00\\\",\\n    \\\"order\\\": 1\\n  }\\n]\\n\\nA Vehicle can have multiple routes for a day. A route is identified by a uuid.\\nUpdate reference field by RoutePATCH https://api.simpliroute.com/v1/routes/routes/{{route_id}}/\\n\\n\\nExample request\\n\\n{\\n  \\\"reference\\\": \\\"my own reference\\\"\\n}\",\"textTemplate\":\"\",\"startCharIdx\":37827,\"endCharIdx\":39439,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"IyFeYy8m+CgiL1fDQxpiLe+uBQS/o+25PDF4SoZ7ypE=\"}","__type__":"TEXT"},"bd1ccc8d-3e79-4bca-b5a8-556d1201da9d":{"__data__":"{\"id_\":\"bd1ccc8d-3e79-4bca-b5a8-556d1201da9d\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"9e6deb85-62b5-42ac-bf53-804998bbf036\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"eDLlYDcxGNIk1XT/7ImfOWIzRI7zMQShwfn7A1KWrBU=\"},\"NEXT\":{\"nodeId\":\"27dd6a24-29a7-4175-906d-9fb3a4029f54\",\"metadata\":{},\"hash\":\"8pzLOSt/yu+271vy9R3gKDsiDRnVNSsjGjdAvkKqu8Y=\"}},\"text\":\"Example request\\n\\n{\\n  \\\"reference\\\": \\\"my own reference\\\"\\n}\\n\\n\\nExample response\\n\\n{\\n  \\\"id\\\": \\\"32024005-7b45-455d-b901-f3f9afa2679e\\\",\\n  \\\"vehicle\\\": 278533,\\n  \\\"driver\\\": 129373,\\n  \\\"plan\\\": \\\"ab20be8f-e98e-4402-8519-98d6752e0f1a\\\",\\n  \\\"status\\\": \\\"pending\\\",\\n  \\\"planned_date\\\": \\\"2024-02-28\\\",\\n  \\\"estimated_time_start\\\": \\\"09:00:00\\\",\\n  \\\"estimated_time_end\\\": \\\"10:54:00\\\",\\n  \\\"total_duration\\\": \\\"01:54:00\\\",\\n  \\\"total_distance\\\": 60992,\\n  \\\"total_load\\\": 0.0,\\n  \\\"total_load_percentage\\\": 0,\\n  \\\"total_load_2\\\": 0.0,\\n  \\\"total_load_2_percentage\\\": 0,\\n  \\\"total_load_3\\\": 0.0,\\n  \\\"total_load_3_percentage\\\": 0,\\n  \\\"location_start_address\\\": \\\"Lord Cochrane 298, Santiago, Chile\\\",\\n  \\\"location_start_latitude\\\": \\\"-33.449977\\\",\\n  \\\"location_start_longitude\\\": \\\"-70.654465\\\",\\n  \\\"location_end_address\\\": \\\"Av. Vicuña Mackenna 2365, Ñuñoa, San Joaquín, Región Metropolitana, Chile\\\",\\n  \\\"location_end_latitude\\\": \\\"-33.473420\\\",\\n  \\\"location_end_longitude\\\": \\\"-70.624235\\\",\\n  \\\"comment\\\": \\\"Route 1\\\",\\n  \\\"start_time\\\": null,\\n  \\\"end_time\\\": null,\\n  \\\"created\\\": \\\"2024-02-28T17:20:37.919471Z\\\",\\n  \\\"modified\\\": \\\"2024-04-02T20:14:46.945819Z\\\",\\n  \\\"kilometers\\\": null,\\n  \\\"total_visits\\\": 2,\\n  \\\"latitude_init\\\": null,\\n  \\\"longitude_init\\\": null,\\n  \\\"latitude_finish\\\": null,\\n  \\\"longitude_finish\\\": null,\\n  \\\"is_revised\\\": false,\\n  \\\"reference\\\": \\\"my own reference\\\"\\n}\\nRoute Properties\\n\\n\\nAttributes\\nData Type\\nDescription\\n\\n\\n\\ncolor\\nString\\nStores the color assigned to the route when creating a plan. To use this property, the account configuration enable_colors_for_contiguous_routes must be enabled.\\n\\n\\nis_start_blocked\\nBoolean\\nThis property is used to block the start of a route.\\n\\n\\nGet Route Properties\\n\\nURL Definition\\n\\n\\nGET https://api.simpliroute.com/v1/routes/routes-properties/{{ROUTE_ID}}\\n\\n\\n\\nExample Response\\n\\n{\\n  \\\"route\\\": \\\"3d20088b-02b8-456b-80f9-ecfa8dbf27d6\\\",\\n  \\\"color\\\": \\\"#0000FF\\\",\\n  \\\"is_start_blocked\\\": false\\n}\\n\\nThis endpoint retrieves all the properties of a specified route.\\nCreate Route Properties\\n\\nURL Definition\\n\\n\\nPOST https://api.simpliroute.com/v1/routes/routes-properties/\\n\\n\\n\\nExample Request\\n\\n{\\n  \\\"route\\\": \\\"3d20088b-02b8-456b-80f9-ecfa8dbf27d6\\\",\\n  \\\"color\\\": null,\\n  \\\"is_start_blocked\\\": false\\n}\\n\\nThis endpoint is used to create properties for a specified route. If properties for the route already exist, an error response will be returned\\nUpdate Route Properties\\n\\nURL Definition\\n\\n\\nPUT https://api.simpliroute.com/v1/routes/routes-properties/{{ROUTE_ID}}\\n\\n\\n\\nExample Request\\n\\n{\\n  \\\"color\\\": \\\"#D50000\\\",\\n  \\\"is_start_blocked\\\": true\\n}\\n\\nThis endpoint is used to update all the properties for a specified route.\\nPartial Update Route Properties\\nPATCH https://api.simpliroute.com/v1/routes/routes-properties/{{ROUTE_ID}}\\n\\n\\n\\nExample Request\\n\\n{\\n  \\\"is_start_blocked\\\": false\\n}\\n\\nThis endpoint allows for the partial update of route properties. Only the properties included in the request body will be updated.\\nDelete Route Properties\\nDELETE https://api.simpliroute.com/v1/routes/routes-properties/{{ROUTE_ID}}\\n\\n\\nThis endpoint is used to delete all the properties for a specified route.\\nBulk Search Routes Properties\\nPOST https://api.simpliroute.com/v1/routes/routes-properties/bulk-search/\\n\\n\\n\\nExample Request\\n\\n{\\n  \\\"route_ids\\\": [\\n    \\\"da6c3bac-898d-4343-8b05-5b80f2d7c26a\\\",\\n    \\\"3d20088b-02b8-456b-80f9-ecfa8dbf27d6\\\"\\n  ]\\n}\",\"textTemplate\":\"\",\"startCharIdx\":39385,\"endCharIdx\":42602,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"hodbaLuoFFKySt0sOIopeh2YnF5K173RjTL3rgKgfrk=\"}","__type__":"TEXT"},"27dd6a24-29a7-4175-906d-9fb3a4029f54":{"__data__":"{\"id_\":\"27dd6a24-29a7-4175-906d-9fb3a4029f54\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"bd1ccc8d-3e79-4bca-b5a8-556d1201da9d\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"oIgUuuWw9IPUPJMokcK4A9ra7nNnogo6o06NSuttYtg=\"},\"NEXT\":{\"nodeId\":\"b6936783-985a-4f9b-ac52-d933edd029d1\",\"metadata\":{},\"hash\":\"6Q2qyJ7EmvShDzU6aaU5/LfQSqIuIhPSwK+c4xJN65M=\"}},\"text\":\"Example Request\\n\\n{\\n  \\\"is_start_blocked\\\": false\\n}\\n\\nThis endpoint allows for the partial update of route properties. Only the properties included in the request body will be updated.\\nDelete Route Properties\\nDELETE https://api.simpliroute.com/v1/routes/routes-properties/{{ROUTE_ID}}\\n\\n\\nThis endpoint is used to delete all the properties for a specified route.\\nBulk Search Routes Properties\\nPOST https://api.simpliroute.com/v1/routes/routes-properties/bulk-search/\\n\\n\\n\\nExample Request\\n\\n{\\n  \\\"route_ids\\\": [\\n    \\\"da6c3bac-898d-4343-8b05-5b80f2d7c26a\\\",\\n    \\\"3d20088b-02b8-456b-80f9-ecfa8dbf27d6\\\"\\n  ]\\n}\\n\\n\\nExample Response\\n\\n[\\n    {\\n        \\\"route\\\": \\\"3d20088b-02b8-456b-80f9-ecfa8dbf27d6\\\",\\n        \\\"color\\\": \\\"#658900\\\",\\n        \\\"is_start_blocked\\\": false\\n    },\\n    {\\n        \\\"route\\\": \\\"da6c3bac-898d-4343-8b05-5b80f2d7c26a\\\",\\n        \\\"color\\\": null,\\n        \\\"is_start_blocked\\\": true\\n    }\\n]\\n\\nThis endpoint is used to retrieve the properties of multiple routes in a single request. By providing a list of route IDs, you can get the properties for each specified route.\\nVehicles\\nTo facilitate the integration flow, the loading of the vehicles of each client can be done via API using the following endpoints.\\nThe delivery entity is separate from the vehicle entity in SimpliRoute. This in order to better track vehicle performance or other internal user metrics.\\nCreate vehicles\\n\\nURL Definition\\n\\n\\nPOST https://api.simpliroute.com/v1/routes/vehicles/\\n\\n\\n\\nExample Request with mandatory fields\\n\\n\\n{\\n    \\\"name\\\": \\\"ASDFQWER\\\",\\n    \\\"capacity\\\": 2000,\\n    \\\"default_driver\\\": null,\\n    \\\"location_start_address\\\": \\\"Direccion A\\\",\\n    \\\"location_start_latitude\\\": -33.3456,\\n    \\\"location_start_longitude\\\": -70.2345,\\n    \\\"location_end_address\\\": \\\"Direccion B\\\",\\n    \\\"location_end_latitude\\\": -33.34234,\\n    \\\"location_end_longitude\\\": -70.23456,\\n    \\\"skills\\\": []\\n}\\n\\nExample Request with all available fields\\n\\n{\\n    \\\"name\\\": \\\"Camión-1\\\",\\n    \\\"capacity\\\": 1000,\\n    \\\"default_driver\\\": null,\\n    \\\"location_start_address\\\": \\\"1 Calle A, Guatemala City, Guatemala\\\",\\n    \\\"location_end_address\\\": \\\"1 Calle A, Guatemala City, Guatemala\\\",\\n    \\\"location_end_latitude\\\": \\\"14.582131\\\",\\n    \\\"location_end_longitude\\\": \\\"-90.487034\\\",\\n    \\\"location_start_latitude\\\": \\\"14.582131\\\",\\n    \\\"location_start_longitude\\\": \\\"-90.487034\\\",\\n    \\\"skills\\\": [],\\n    \\\"capacity2\\\": \\\"1\\\",\\n    \\\"capacity3\\\": \\\"1\\\",\\n    \\\"cost\\\": null,\\n    \\\"shift_start\\\": null,\\n    \\\"shift_end\\\": null,\\n    \\\"reference_id\\\": \\\"12AB\\\",\\n    \\\"license_plate\\\": \\\"ABCD\\\",\\n    \\\"min_load\\\": 0,\\n    \\\"min_load_2\\\": 0,\\n    \\\"min_load_3\\\": 0,\\n    \\\"max_visit\\\": null,\\n    \\\"max_time\\\": null,\\n    \\\"rest_time_start\\\": null,\\n    \\\"rest_time_end\\\": null,\\n    \\\"rest_time_duration\\\": null,\\n    \\\"codrivers\\\": []\\n}\",\"textTemplate\":\"\",\"startCharIdx\":42010,\"endCharIdx\":44665,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"Eek2kFAhUy2PeLrWwWRbjJgqkNmolbS6ZzuJOuqXC1I=\"}","__type__":"TEXT"},"b6936783-985a-4f9b-ac52-d933edd029d1":{"__data__":"{\"id_\":\"b6936783-985a-4f9b-ac52-d933edd029d1\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"27dd6a24-29a7-4175-906d-9fb3a4029f54\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"8pzLOSt/yu+271vy9R3gKDsiDRnVNSsjGjdAvkKqu8Y=\"},\"NEXT\":{\"nodeId\":\"1bab20c5-8b68-4c5c-b73e-4ab935c16b48\",\"metadata\":{},\"hash\":\"R4t9LmrJr+ZNXET0X5bJOT1+3INHPNYP847UFZEG44E=\"}},\"text\":\"Example Response\\n\\n{\\n    \\\"id\\\": 487294,\\n    \\\"name\\\": \\\"Camión-1\\\",\\n    \\\"shift_start\\\": null,\\n    \\\"shift_end\\\": null,\\n    \\\"capacity\\\": 1000.0,\\n    \\\"capacity_2\\\": 1.0,\\n    \\\"capacity_3\\\": 1.0,\\n    \\\"default_driver\\\": null,\\n    \\\"location_start_address\\\": \\\"1 Calle A, Guatemala City, Guatemala\\\",  //(warehouse starting point of the vehicle)\\n    \\\"location_start_latitude\\\": \\\"14.582131\\\",\\n    \\\"location_start_longitude\\\": \\\"-90.487034\\\",\\n    \\\"location_end_address\\\": \\\"1 Calle A, Guatemala City, Guatemala\\\",  //(warehouse or last point of the vehicle)\\n    \\\"location_end_latitude\\\": \\\"14.582131\\\",\\n    \\\"location_end_longitude\\\": \\\"-90.487034\\\",\\n    \\\"skills\\\": [],\\n    \\\"created\\\": \\\"2024-06-26T16:28:39.193486Z\\\",\\n    \\\"modified\\\": \\\"2024-06-26T16:28:39.193486Z\\\",\\n    \\\"color\\\": \\\"#FF8C00\\\",\\n    \\\"reference_id\\\": \\\"12AB\\\",\\n    \\\"license_plate\\\": \\\"ABCD\\\",\\n    \\\"cost\\\": null,\\n    \\\"min_load\\\": 0,\\n    \\\"min_load_2\\\": 0,\\n    \\\"min_load_3\\\": 0,\\n    \\\"max_visit\\\": null,\\n    \\\"rest_time_start\\\": null,\\n    \\\"rest_time_end\\\": null,\\n    \\\"rest_time_duration\\\": null,\\n    \\\"deleted\\\": false,\\n    \\\"max_time\\\": null,\\n    \\\"codrivers\\\": [],\\n    \\\"status\\\": \\\"active\\\"\\n}\\nList Vehicle\\n\\nURL Definition\\n\\n\\nGET https://api.simpliroute.com/v1/routes/vehicles/\\n\\n\\nExample Response\\n\\n[{\\n    \\\"id\\\": 487294,\\n    \\\"name\\\": \\\"Camión-1\\\",\\n    \\\"shift_start\\\": null,\\n    \\\"shift_end\\\": null,\\n    \\\"capacity\\\": 1000.0,\\n    \\\"capacity_2\\\": 1.0,\\n    \\\"capacity_3\\\": 1.0,\\n    \\\"default_driver\\\": null,\\n    \\\"location_start_address\\\": \\\"1 Calle A, Guatemala City, Guatemala\\\",\\n    \\\"location_start_latitude\\\": \\\"14.582131\\\",\\n    \\\"location_start_longitude\\\": \\\"-90.487034\\\",\\n    \\\"location_end_address\\\": \\\"1 Calle A, Guatemala City, Guatemala\\\",\\n    \\\"location_end_latitude\\\": \\\"14.582131\\\",\\n    \\\"location_end_longitude\\\": \\\"-90.487034\\\",\\n    \\\"skills\\\": [],\\n    \\\"created\\\": \\\"2024-06-26T16:28:39.193486Z\\\",\\n    \\\"modified\\\": \\\"2024-06-26T16:28:39.193486Z\\\",\\n    \\\"color\\\": \\\"#FF8C00\\\",\\n    \\\"reference_id\\\": \\\"12AB\\\",\\n    \\\"license_plate\\\": \\\"ABCD\\\",\\n    \\\"cost\\\": null,\\n    \\\"min_load\\\": 0,\\n    \\\"min_load_2\\\": 0,\\n    \\\"min_load_3\\\": 0,\\n    \\\"max_visit\\\": null,\\n    \\\"rest_time_start\\\": null,\\n    \\\"rest_time_end\\\": null,\\n    \\\"rest_time_duration\\\": null,\\n    \\\"deleted\\\": false,\\n    \\\"max_time\\\": null,\\n    \\\"codrivers\\\": [],\\n    \\\"status\\\": \\\"active\\\"\\n}]\\n\\nDelete vechicle\\n\\nURL Definition\\n\\n\\nDELETE https://api.simpliroute.com/v1/routes/vehicles/{VECHICLE_ID}\\nCustomers\\nA customer is an individual or company. Customers are the end users. \\nCreate Customers\\n\\nURL Definition\\n\\n\\nPOST https://api.simpliroute.com/v1/accounts/clients/\\n\\n\\n\\nExample Request\",\"textTemplate\":\"\",\"startCharIdx\":44668,\"endCharIdx\":47122,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"Hc86ryOrXsXsgNTExBMdga9E+Rk72y4jnaHq0B1OkBQ=\"}","__type__":"TEXT"},"1bab20c5-8b68-4c5c-b73e-4ab935c16b48":{"__data__":"{\"id_\":\"1bab20c5-8b68-4c5c-b73e-4ab935c16b48\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"b6936783-985a-4f9b-ac52-d933edd029d1\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"6Q2qyJ7EmvShDzU6aaU5/LfQSqIuIhPSwK+c4xJN65M=\"},\"NEXT\":{\"nodeId\":\"aac21bef-e5a5-4fec-b153-1b9d876226f3\",\"metadata\":{},\"hash\":\"Ok6Owb2Thxj9ifvK30fxsU+NsbN+EnNdlylVmyD8Smw=\"}},\"text\":\"DELETE https://api.simpliroute.com/v1/routes/vehicles/{VECHICLE_ID}\\nCustomers\\nA customer is an individual or company. Customers are the end users. \\nCreate Customers\\n\\nURL Definition\\n\\n\\nPOST https://api.simpliroute.com/v1/accounts/clients/\\n\\n\\n\\nExample Request \\n\\n\\n[{\\n    \\\"key\\\": \\\"123456\\\",\\n    \\\"title\\\": \\\"Coop Enargas\\\",\\n    \\\"address\\\": \\\"\\\",\\n    \\\"latitude\\\": null,\\n    \\\"longitude\\\": null,\\n    \\\"load\\\": null,\\n    \\\"load_2\\\": 0.0,\\n    \\\"load_3\\\": 0.0,\\n    \\\"window_start\\\": null,\\n    \\\"window_end\\\": null,\\n    \\\"window_start_2\\\": null,\\n    \\\"window_end_2\\\": null,\\n    \\\"duration\\\": \\\"00:00:00\\\",\\n    \\\"contact_name\\\": null,\\n    \\\"contact_phone\\\": null,\\n    \\\"contact_email\\\": null,\\n    \\\"notes\\\": null,\\n    \\\"priority_level\\\": null,\\n    \\\"skills_required\\\": [\\n            30744,\\n            47593\\n        ],\\n        \\\"skills_optional\\\": [\\n            30567\\n        ],\\n    \\\"tags\\\": [],\\n}]\\n\\nBy using the following POST method, the clients/customers can be uploaded to the Simpliroute application, this generates the client master for each one of the accounts that will be registered and that will connect with the Web services of each ERP. Each main Client must have its own token to make the connection and inject the data to the platform\\nWhen you create clients, it can be viewed from the client master extension on the Simpliroute platform.\\nObtain Customers\\n\\nURL Definition\\n\\n\\nGET https://api.simpliroute.com/v1/accounts/clients/?key={{CLIENT_ID}}\\n\\n\\n\\nExample Request\\n\\n[{\\n    \\\"id\\\": 68156,\\n    \\\"key\\\": \\\"123456\\\",\\n    \\\"title\\\": \\\"Cliente Ejemplo\\\",\\n    \\\"address\\\": \\\"Pedro Montt 2245, Valparaíso, V Región\\\",\\n    \\\"latitude\\\": \\\"-33.464115\\\",\\n    \\\"longitude\\\": \\\"-70.652859\\\",\\n    \\\"load\\\": 4.0,\\n    \\\"load_2\\\": 2.0,\\n    \\\"load_3\\\": 1.0,\\n    \\\"window_start\\\": \\\"09:00:00\\\",\\n    \\\"window_end\\\": \\\"17:00:00\\\",\\n    \\\"window_start_2\\\": null,\\n    \\\"window_end_2\\\": null,\\n    \\\"duration\\\": \\\"00:00:00\\\",\\n    \\\"contact_name\\\": \\\"\\\",\\n    \\\"contact_phone\\\": \\\"\\\",\\n    \\\"contact_email\\\": \\\"cliente2@email.com\\\",\\n    \\\"notes\\\": \\\"Notas de Texto\\\",\\n    \\\"priority_level\\\": null\\n    }\\n]\\n\\nThrough the GET client method, you can obtain the id and the information related to the client via API, with this information we can generate the visits.\\nDelete a Customer\\n\\nURL Definition\\n\\nDELETE https://api.simpliroute.com/v1/accounts/clients/{{CLIENT_ID}}/\\nDelete Customers\\n\\nURL Definition\\n\\nDELETE https://api.simpliroute.com/v1/accounts/clients/\\n\\n\\nExample Request body\\n\\n{\\n [000000, 000001...]\\n}\\n\\n\\nThe array must have the id of the clients that you want to delete.\\nUpdate Customers\\n\\nURL Definition\\n\\nPUT https://api.simpliroute.com/v1/accounts/clients/\\n\\n\\nExample Request\\n\\n\\n[{\\n    \\\"id\\\": 68156,\\n    \\\"key\\\": \\\"123456\\\",\\n    \\\"title\\\": \\\"Coop Enargas\\\",\\n    \\\"address\\\": \\\"\\\",\\n    \\\"latitude\\\": null,\\n    \\\"longitude\\\": null,\\n    \\\"load\\\": null,\\n    \\\"load_2\\\": 0.0,\\n    \\\"load_3\\\": 0.0,\\n    \\\"window_start\\\": null,\\n    \\\"window_end\\\": null,\\n    \\\"window_start_2\\\": null,\\n    \\\"window_end_2\\\": null,\\n    \\\"duration\\\": \\\"00:00:00\\\",\\n    \\\"contact_name\\\": null,\\n    \\\"contact_phone\\\": null,\\n    \\\"contact_email\\\": null,\\n    \\\"notes\\\": null,\\n    \\\"priority_level\\\": null,\\n    \\\"skills_required\\\": [\\n            30744,\\n            47593\\n        ],\\n        \\\"skills_optional\\\": [\\n            30567\\n        ],\\n    \\\"tags\\\": [],\\n}]\\n\\nThis endpoint allows for the updating of multiple clients' information\\nClient Custom Properties\\nClient custom properties are additional attributes that can be added to clients to store any type of necessary information. To add custom properties to your clients, you must first create the attribute in your account. Once created, these attributes can be used when creating and modifying client records.\\nCreate custom property\\n\\nURL Definition\\n\\nPOST https://api.simpliroute.com/v1/planner/client-properties/\",\"textTemplate\":\"\",\"startCharIdx\":46867,\"endCharIdx\":50515,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"pyDM9cKeQHn/Wmx07TQwwbGXPh4ubcPk/cIK4VuegM8=\"}","__type__":"TEXT"},"aac21bef-e5a5-4fec-b153-1b9d876226f3":{"__data__":"{\"id_\":\"aac21bef-e5a5-4fec-b153-1b9d876226f3\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"1bab20c5-8b68-4c5c-b73e-4ab935c16b48\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"R4t9LmrJr+ZNXET0X5bJOT1+3INHPNYP847UFZEG44E=\"},\"NEXT\":{\"nodeId\":\"ec030761-b893-4286-8695-eb965e074cc7\",\"metadata\":{},\"hash\":\"sXNXQQVjMPMmxVmjau3HAFSoYSyM0oCAOyH067GMatU=\"}},\"text\":\"Example Request\\n\\n{\\n  \\\"label\\\": \\\"price\\\",\\n  \\\"type\\\": \\\"int\\\"\\n}\\n\\nThis endpoint is used to create a custom property for clients in the system/account. Custom properties allow you to add specific attributes tailored to your needs, which can be used when creating or modifying client records.\\n\\n\\nAttributes\\nData Type\\nDescription\\n\\n\\n\\nlabel\\nString\\nThe name of the custom property.\\n\\n\\ntype\\nString\\nThe data type of the custom property. Possible values include 'str', 'int', 'float', 'bool'\",\"textTemplate\":\"\",\"startCharIdx\":50518,\"endCharIdx\":50990,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"sJdxZKbxS2S4fDFVjrWBZee0I9GtAp5+zMMuKf6R3jM=\"}","__type__":"TEXT"},"ec030761-b893-4286-8695-eb965e074cc7":{"__data__":"{\"id_\":\"ec030761-b893-4286-8695-eb965e074cc7\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"aac21bef-e5a5-4fec-b153-1b9d876226f3\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"Ok6Owb2Thxj9ifvK30fxsU+NsbN+EnNdlylVmyD8Smw=\"},\"NEXT\":{\"nodeId\":\"a9102445-618e-4f9e-a8d0-425ad49406a4\",\"metadata\":{},\"hash\":\"ie5naAw5QsdTp+FkjtwxoGyzr01uyENzcjpq1QK9FHk=\"}},\"text\":\"Example Request\\n\\n{\\n  \\\"label\\\": \\\"price\\\",\\n  \\\"type\\\": \\\"int\\\"\\n}\\n\\nThis endpoint is used to create a custom property for clients in the system/account. Custom properties allow you to add specific attributes tailored to your needs, which can be used when creating or modifying client records.\\n\\n\\nAttributes\\nData Type\\nDescription\\n\\n\\n\\nlabel\\nString\\nThe name of the custom property.\\n\\n\\ntype\\nString\\nThe data type of the custom property. Possible values include 'str', 'int', 'float', 'bool'\\n\\n\\nUsing Custom Properties\\n\\nExample Request\\n\\n[\\n    {\\n        \\\"key\\\": \\\"SFKK8976678\\\",\\n        \\\"title\\\": \\\"Cliente Ejemplo\\\",\\n        \\\"address\\\": \\\"Pedro Montt 2246, Valparaíso, V Región, Chile\\\",\\n        \\\"latitude\\\": \\\"-33.047400\\\",\\n        \\\"longitude\\\": \\\"-71.612920\\\",\\n        \\\"skills_required\\\": [],\\n        \\\"skills_optional\\\": [],\\n        \\\"load\\\": \\\"4\\\",\\n        \\\"load_2\\\": \\\"2\\\",\\n        \\\"load_3\\\": \\\"1\\\",\\n        \\\"window_start\\\": \\\"09:00:00\\\",\\n        \\\"window_end\\\": \\\"17:00:00\\\",\\n        \\\"window_start_2\\\": null,\\n        \\\"window_end_2\\\": null,\\n        \\\"duration\\\": \\\"00:00:00\\\",\\n        \\\"contact_name\\\": \\\"Cliente\\\",\\n        \\\"contact_email\\\": \\\"cliente@email.com\\\",\\n        \\\"contact_phone\\\": \\\"56995466337\\\",\\n        \\\"tags\\\": [],\\n        \\\"visit_type\\\": null,\\n        \\\"notes\\\": \\\"The doorbell is faulty\\\",\\n        \\\"priority_level\\\": null,\\n        \\\"custom_properties\\\": {\\n            \\\"price\\\": 100\\n        }\\n    }\\n]\\n\\nOnce you have created your custom property, you can use it in the creation and modification of client records.\\nForceField\\n\\nExample Request\\n\\n[\\n    {\\n        \\\"key\\\": \\\"SFKK8976678\\\",\\n        \\\"title\\\": \\\"Cliente Ejemplo\\\",\\n        \\\"address\\\": \\\"Pedro Montt 2246, Valparaíso, V Región, Chile\\\",\\n        \\\"latitude\\\": \\\"-33.047400\\\",\\n        \\\"longitude\\\": \\\"-71.612920\\\",\\n        \\\"skills_required\\\": [],\\n        \\\"skills_optional\\\": [],\\n        \\\"load\\\": \\\"4\\\",\\n        \\\"load_2\\\": \\\"2\\\",\\n        \\\"load_3\\\": \\\"1\\\",\\n        \\\"window_start\\\": \\\"09:00:00\\\",\\n        \\\"window_end\\\": \\\"17:00:00\\\",\\n        \\\"window_start_2\\\": null,\\n        \\\"window_end_2\\\": null,\\n        \\\"duration\\\": \\\"00:00:00\\\",\\n        \\\"contact_name\\\": \\\"Cliente\\\",\\n        \\\"contact_email\\\": \\\"cliente@email.com\\\",\\n        \\\"contact_phone\\\": \\\"56995466337\\\",\\n        \\\"tags\\\": [],\\n        \\\"visit_type\\\": null,\\n        \\\"notes\\\": \\\"The doorbell is faulty\\\",\\n        \\\"priority_level\\\": null,\\n        \\\"sales_visit_scheduled\\\": {\\n            \\\"period\\\": 7,\\n            \\\"interval\\\": 4,\\n            \\\"frequency\\\": 2\\n        },\\n        \\\"scheduled_visit_days\\\": {\\n            \\\"any_week\\\": [\\n                \\\"Monday\\\",\\n                \\\"Tuesday\\\"\\n            ]\\n        },\\n        \\\"custom_properties\\\": {\\n            \\\"price\\\": 100,\\n            \\\"currency\\\": \\\"USD\\\"\\n        }\\n    },\\n        {\\n        \\\"key\\\": \\\"SFKK89766100\\\",\\n        \\\"title\\\": \\\"Cliente 2 Ejemplo\\\",\\n        \\\"address\\\": \\\"Pedro Montt 2250, Valparaíso, V Región, Chile\\\",\\n        \\\"latitude\\\": \\\"-33.047400\\\",\\n        \\\"longitude\\\": \\\"-71.612920\\\",\\n        \\\"skills_required\\\": [],\\n        \\\"skills_optional\\\": [],\\n        \\\"load\\\": \\\"4\\\",\\n        \\\"load_2\\\": \\\"2\\\",\\n        \\\"load_3\\\": \\\"1\\\",\\n        \\\"window_start\\\": \\\"09:00:00\\\",\\n        \\\"window_end\\\": \\\"17:00:00\\\",\\n        \\\"window_start_2\\\": null,\\n        \\\"window_end_2\\\": null,\\n        \\\"duration\\\": \\\"00:00:00\\\",\\n        \\\"contact_name\\\": \\\"Cliente 2\\\",\\n        \\\"contact_email\\\": \\\"cliente2@email.com\\\",\\n        \\\"contact_phone\\\": \\\"56995466337\\\",\\n        \\\"tags\\\": [],\\n        \\\"visit_type\\\": null,\\n        \\\"notes\\\": \\\"The doorbell is faulty\\\",\\n        \\\"priority_level\\\": null,\\n        \\\"sales_visit_scheduled\\\": {\\n            \\\"period\\\": 28,\\n            \\\"interval\\\": 1,\\n            \\\"frequency\\\": 3\\n        },\\n        \\\"scheduled_visit_days\\\": {\\n            \\\"week_3\\\": [\\n              \\\"Monday\\\",\\n              \\\"Tuesday\\\",\\n              \\\"Sunday\\\"\\n            ]\\n        },\\n        \\\"custom_properties\\\": {\\n            \\\"price\\\": 200,\\n            \\\"currency\\\": \\\"USD\\\"\\n        }\\n    }\\n]\\n\\nTo use the ForceField attributes, it is necessary to activate the territory_planner addon. The new attributes are sales_visit_scheduled and scheduled_visit_days. These can be used in the endpoints for creating, modifying, and retrieving customers.\\nSales Visit Schedule Object\",\"textTemplate\":\"\",\"startCharIdx\":50518,\"endCharIdx\":54530,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"XfLA6hBh4h2j4DGBDG72pj711OxucCELml/ZYqkJ4uo=\"}","__type__":"TEXT"},"a9102445-618e-4f9e-a8d0-425ad49406a4":{"__data__":"{\"id_\":\"a9102445-618e-4f9e-a8d0-425ad49406a4\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"ec030761-b893-4286-8695-eb965e074cc7\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"sXNXQQVjMPMmxVmjau3HAFSoYSyM0oCAOyH067GMatU=\"},\"NEXT\":{\"nodeId\":\"cf191b37-b4d9-4ed0-8050-8f05a0aceb42\",\"metadata\":{},\"hash\":\"g2xchvMfqXZwTCuTdZ2Q9iRFThOSLYTWfpp4GrU+d4Y=\"}},\"text\":\"Attributes\\nData Type\\nDescription\\n\\n\\n\\nfrequency\\nInteger\\nRepresents the number of times a client should be visited within a given period.\\n\\n\\nperiod\\nInteger\\nRepresents the duration of a visit cycle for a particular client. Possible values are weekly (7), biweekly (14), or monthly (28).\\n\\n\\ninterval\\nInteger\\nRepresents the time gap between visits.\\n\\n\\nseller\\nInteger\\nSpecifies who conducts the visit to the client, which can be either a seller or a vehicle.\\n\\n\\nClient Scheduled Visit Day Object\\nThis object defines the days of the week on which a client is scheduled for visits. The attributes are organized by weeks, including a general option for any week where no specific week is predefined. Each attribute lists the possible days of the week that can be selected for scheduling.\\n\\n\\nAttributes\\nData Type\\nDescription\\n\\n\\n\\nany_week\\nArray\\nThis attribute is used when there is no predefined week. Possible values are 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'.\\n\\n\\nweek_1\\nArray\\nThis attribute corresponds to the first week of the month. Possible values are 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'.\\n\\n\\nweek_2\\nArray\\nThis attribute corresponds to the second week of the month. Possible values are 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'.\\n\\n\\nweek_3\\nArray\\nThis attribute corresponds to the third week of the month. Possible values are 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'.\\n\\n\\nweek_4\\nArray\\nThis attribute corresponds to the fourth week of the month. Possible values are 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'.\\n\\n\\nUsers\\nA user for SimpliRoute is a courier who will make deliveries through our mobile app\\nList users\\n\\nURL Definition\\n\\n\\n GET https://api.simpliroute.com/v1/accounts/drivers/\\n\\n\\n\\nExample Response\\n```json\\n[{\\n    \\\"id\\\": 114,\\n    \\\"username\\\": \\\"user2\\\",\\n    \\\"name\\\": \\\"\\\",\\n    \\\"phone\\\": \\\"\\\",\\n    \\\"email\\\": \\\"\\\",\\n    \\\"is_owner\\\": false,\\n    \\\"is_admin\\\": false,\\n    \\\"is_driver\\\": true,\\n    \\\"old_id\\\": 1477,\\n    \\\"created\\\": \\\"2016-06-24T20:47:06.859895Z\\\",\\n    \\\"modified\\\": \\\"2016-06-30T20:04:51.043122Z\\\",\\n    \\\"last_login\\\": null\\n  },\\n  {\\n    \\\"id\\\": 24,\\n    \\\"old_id\\\": 930,\\n    \\\"username\\\": \\\"test\\\",\\n    \\\"name\\\": \\\"Test\\\",\\n    \\\"phone\\\": \\\"\\\",\\n    \\\"email\\\": \\\"\\\",\\n    \\\"is_owner\\\": false,\\n    \\\"is_admin\\\": false,\\n    \\\"is_driver\\\": true,\\n    \\\"old_id\\\": 1477,\\n    \\\"created\\\": \\\"2016-06-24T20:47:06.859895Z\\\",\\n    \\\"modified\\\": \\\"2016-06-30T20:04:51.043122Z\\\",\\n    \\\"last_login\\\": null\\n  }]\\n\\n## Create user\\n\\nWith the following endpoint you can create via API a user\\n\\n> URL Definition\\n\\n```url\\n\\nPOST https://api.simpliroute.com/v1/accounts/drivers/\\n\\n\\n\\nExample Body\\n```json\\n[{\\n    \\\"username\\\": \\\"testtest2\\\",\\n    \\\"name\\\": \\\"Conductor 1\\\",\\n    \\\"phone\\\": \\\"\\\",\\n    \\\"email\\\": \\\"\\\",\\n    \\\"is_admin\\\": false,\\n    \\\"password\\\": \\\"driver\\\",\\n    \\\"is_driver\\\": true\\n}]\\n\\n> Example Response\\n```json\\n[{\\n    \\\"id\\\": 40779,\\n    \\\"username\\\": \\\"testtest2\\\",\\n    \\\"name\\\": \\\"Conductor 1\\\",\\n    \\\"phone\\\": \\\"\\\",\\n    \\\"email\\\": \\\"\\\",\\n    \\\"is_owner\\\": false,\\n    \\\"is_admin\\\": false,\\n    \\\"is_driver\\\": true,\\n    \\\"is_router_jr\\\": false,\\n    \\\"is_monitor\\\": false,\\n    \\\"is_coordinator\\\": false,\\n    \\\"is_router\\\": false,\\n    \\\"is_staff\\\": false,\\n    \\\"old_id\\\": null,\\n    \\\"created\\\": \\\"2020-03-19T19:13:45.178268Z\\\",\\n    \\\"modified\\\": \\\"2020-03-19T19:13:45.223900Z\\\",\\n    \\\"last_login\\\": null\\n}]\\nGet a determine user\\n\\nURL Definition\\n\\n\\nGET https://api.simpliroute.com/v1/accounts/drivers/{{user_id}}/\",\"textTemplate\":\"\",\"startCharIdx\":54533,\"endCharIdx\":57960,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"g8dWP/xehMKf5gQey/Qx2OkJFBw02G/AhnZt3JMFBS4=\"}","__type__":"TEXT"},"cf191b37-b4d9-4ed0-8050-8f05a0aceb42":{"__data__":"{\"id_\":\"cf191b37-b4d9-4ed0-8050-8f05a0aceb42\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"a9102445-618e-4f9e-a8d0-425ad49406a4\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"ie5naAw5QsdTp+FkjtwxoGyzr01uyENzcjpq1QK9FHk=\"},\"NEXT\":{\"nodeId\":\"4e066f8e-d8dc-4936-812a-f2c6c0719fec\",\"metadata\":{},\"hash\":\"yE0FTWwK+dOg4s9XF4/7OJv9puIJTmVx9wSjHVIOYfA=\"}},\"text\":\"GET https://api.simpliroute.com/v1/accounts/drivers/{{user_id}}/\\n\\n\\n\\nExample Response\\njson \\n[\\n{\\\"id\\\": 203,\\n  \\\"username\\\": \\\"driver33\\\",\\n  \\\"name\\\": \\\"Driver 3\\\",\\n  \\\"phone\\\": \\\"\\\",\\n  \\\"email\\\": \\\"\\\",\\n  \\\"is_owner\\\": false,\\n  \\\"is_admin\\\": false,\\n  \\\"is_driver\\\": true,\\n  \\\"old_id\\\": 1979,\\n  \\\"created\\\": \\\"2016-08-01T20:23:31.966307Z\\\",\\n  \\\"modified\\\": \\\"2016-08-01T20:23:32.158526Z\\\",\\n  \\\"last_login\\\": null\\n}\\n]\\n\\nUpdate user\\nURL Definition\\n\\n\\nPUT https://api.simpliroute.com/v1/accounts/drivers/{{USER_ID}}/\\n\\n\\n\\n\\nExample Body\\n```json\\n[{\\n    \\\"username\\\": \\\"driver3\\\",\\n    \\\"name\\\": \\\"Driver 3\\\",\\n    \\\"email\\\": \\\"\\\",\\n    \\\"is_admin\\\": false,\\n    \\\"password\\\": \\\"driver\\\"\\n    }]\\n\\n> Example Response\\n``` json\\n[{\\n    \\\"id\\\": 24,\\n  \\\"old_id\\\": 930,\\n  \\\"username\\\": \\\"test\\\",\\n  \\\"name\\\": \\\"Test\\\",\\n  \\\"created\\\": \\\"2016-03-08T15:54:03.095458Z\\\",\\n  \\\"modified\\\": \\\"2016-03-08T15:54:03.268615Z\\\",\\n  \\\"last_login\\\": null}]\\n\\nDelete user\\n\\nURL Definition\\n\\n\\nDELETE https://api.simpliroute.com/v1/accounts/drivers/{{user_id}}/\\n\\n\\nSkills\\nSkills are ways to tag our visitors and vehicles so that the algorithm uses those tags as constraints. If a visitor has the required skill \\\"COLD\\\" the vehicles that can transport that dispatch must also have the skill \\\"COLD\\\".\\nTo get the list of skills\\n\\nURL Definition\\n\\n\\nGET https://api.simpliroute.com/v1/routes/skills/\\n\\n\\n\\nExample response\\n\\n\\n[\\n  {\\n    \\\"id\\\": 295,\\n    \\\"skill\\\": \\\"armijo\\\",\\n    \\\"created\\\": \\\"2017-01-24T21:06:42.545448Z\\\",\\n    \\\"modified\\\": \\\"2017-01-24T21:06:42.545683Z\\\"\\n  },\\n  {\\n    \\\"id\\\": 296,\\n    \\\"skill\\\": \\\"calderon\\\",\\n    \\\"created\\\": \\\"2017-01-24T21:06:46.328027Z\\\",\\n    \\\"modified\\\": \\\"2017-01-24T21:06:46.328273Z\\\"\\n  }\\n ]\\nWebhooks\\nUse webhooks to be notified about events that happen in a SimpliRoute account.\\nHow to work with SimpliRoute's webhooks\\nSimpliRoute can send webhook events that notify your application any time an event happens on your account. This is especially useful for events—like completed or failed deliverURLs that we will notify any time an event happens in your account. When the event occurs, SimpliRoute will send a POST evento to your URL.\\nThis Event object contains all the relevant information about what just happened, including the type of event and the data associated with that event. SimpliRoute then sends the Event object, via an HTTP POST request, to any endpoint URLs that you have defined in your account’s Webhooks settings.ies that are not triggered by a direct API request. This mechanism is also useful for services that are not directly responsible for making an API request, but still need to know the response from that request.\\nWhich events can be notified\\nCurrently, SimpliRoute can notify this events:\\n\\nPlan created\\nPlan edition\\nRoute creation\\nRoute edition\\nRoute deletion\\nRoute started\\nRoute Finish\\nVisit created\\nVisit updated\\nOn it`s way\\nCheckout\\n\\n\\nCompleted delivery\\nFailed delivery\\nPartial Delivery\\n\\nCheckout detailed\\n\\nIf you need some other events, let us know to add them to our roadmap. Feel free to reach us over email to contact@simpliroute.com\\nConfiguring your Webhooks settings\\nWe describe the steps to follow to read, create, update and delete webhooks via API\\nAvailable webhooks\\n\\nplan_created\\nplan_edited \\nroute_created\\nroute_edited\\nroute_started\\nroute_finished\\non_its_way\\nvisit_checkout\\nvisit_checkout_detailed\\n\\nImportant: Each webhook is related to a url and headers. \\nFor example: route_created is related to:\\n- route_created_webhook_url\\n- route_created_webhook_headers\\nAdditionally, requests must include the header:\\n\\nExample Headers\\n\\n[{\\n    Content-Type: application/json\\n    authorization: token {{TOKEN}}\\n}]\\n\\n// Where {{TOKEN}} equals the SR account token.\\n\\n\\n\\n\\nAttributes\\n\\n\\nDescription\\n\\n\\n\\nwebhook\\n\\n\\nName of the available webhook object.\\n\\n\\nurl\\n\\n\\nURL provided by the customer\\n\\n\\nheaders\\n\\n\\nNecessary parameters for communication towards the final server\",\"textTemplate\":\"\",\"startCharIdx\":57896,\"endCharIdx\":61664,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"4W2O0qy8Js3kpmd+nZKll9hKlyPxUSsEhu+XkcP24So=\"}","__type__":"TEXT"},"4e066f8e-d8dc-4936-812a-f2c6c0719fec":{"__data__":"{\"id_\":\"4e066f8e-d8dc-4936-812a-f2c6c0719fec\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"cf191b37-b4d9-4ed0-8050-8f05a0aceb42\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"g2xchvMfqXZwTCuTdZ2Q9iRFThOSLYTWfpp4GrU+d4Y=\"},\"NEXT\":{\"nodeId\":\"213300e1-d1f8-470a-9626-80acf0324812\",\"metadata\":{},\"hash\":\"9/dvr7G7AUcvgD9mWUoPCoy3669Avg8rxsV1lSIvhvw=\"}},\"text\":\"Attributes\\n\\n\\nDescription\\n\\n\\n\\nwebhook\\n\\n\\nName of the available webhook object.\\n\\n\\nurl\\n\\n\\nURL provided by the customer\\n\\n\\nheaders\\n\\n\\nNecessary parameters for communication towards the final server\\n\\n\\nIf you have doubts or problems to configure Webhooks\\n- Send an emails to our team customersuccess@simpliroute.com\\n- In this email, send the URL that you want to receive the webhook.\\n- We'll let you know when the configuration is ready.\\nCreate Webhook\\n\\nURL Definition\\n\\n\\nPOST https://api.simpliroute.com/v1/addons/webhooks\\n\\n\\n\\nExample body\\n\\n{\\n  \\\"webhook\\\": \\\"plan_created\\\",\\n  \\\"url\\\": \\\"https://estoesunwebhookdeprueba.com\\\",\\n  \\\"headers\\\": {\\n    \\\"Content-Type\\\": \\\"application/json\\\",\\n    \\\"Authorization\\\": \\\"Token 16a57ec5ad76c627959c75323274d33d8cc0451e\\\"\\n  }\\n}\\n\\n\\nExample response\\n\\n[\\n  {\\n    \\\"title\\\": \\\"plan_created_webhook_url webhook url\\\",\\n    \\\"key\\\": \\\"plan_created_webhook_url\\\",\\n    \\\"value\\\": \\\"https://estoesunwebhookdeprueba.com\\\",\\n    \\\"description\\\": \\\"plan_created_webhook_url webhook url Luis Bermudez SR Team\\\",\\n    \\\"add_on_id\\\": 29950\\n  },\\n  {\\n    \\\"title\\\": \\\"plan_created_webhook_headers webhook headers\\\",\\n    \\\"key\\\": \\\"plan_created_webhook_headers\\\",\\n    \\\"value\\\": \\\"{\\\\\\\"Content-Type\\\\\\\": \\\\\\\"application/json\\\\\\\", \\\\\\\"Authorization\\\\\\\": \\\\\\\"Token 16a57ec5ad76c627959c75323274d33d8cc0451e\\\\\\\"}\\\",\\n    \\\"description\\\": \\\"plan_created_webhook_headers webhook url Luis Bermudez SR Team\\\",\\n    \\\"add_on_id\\\": 29950\\n  }\\n]\\nList Webhooks\\n\\nURL Definition\\n\\n\\nGET https://api.simpliroute.com/v1/addons/webhooks\\n\\n\\n\\nExample response\\n\\n[\\n  {\\n    \\\"title\\\": \\\"plan_created_webhook_url webhook url\\\",\\n    \\\"key\\\": \\\"plan_created_webhook_url\\\",\\n    \\\"value\\\": \\\"https://estoesunwebhookdeprueba.com\\\",\\n    \\\"description\\\": \\\"plan_created_webhook_url webhook url Luis Bermudez SR Team\\\",\\n    \\\"add_on_id\\\": 29950\\n  },\\n  {\\n    \\\"title\\\": \\\"plan_created_webhook_headers webhook headers\\\",\\n    \\\"key\\\": \\\"plan_created_webhook_headers\\\",\\n    \\\"value\\\": \\\"{\\\\\\\"Content-Type\\\\\\\": \\\\\\\"application/json\\\\\\\", \\\\\\\"Authorization\\\\\\\": \\\\\\\"Token 16a57ec5ad76c627959c75323274d33d8cc0451e\\\\\\\"}\\\",\\n    \\\"description\\\": \\\"plan_created_webhook_headers webhook url Luis Bermudez SR Team\\\",\\n    \\\"add_on_id\\\": 29950\\n  }\\n]\\nUpdate Webhooks\\n\\nURL Definition\\n\\n\\nPUT https://api.simpliroute.com/v1/addons/webhooks\\n\\n\\n\\nExample body\\n\\n{\\n  \\\"webhook\\\": \\\"plan_created\\\",\\n  \\\"url\\\": \\\"https://estoesunwebhookdeprueba.com/nueva-url\\\",\\n  \\\"headers\\\": {\\n    \\\"Content-Type\\\": \\\"application/json\\\"\\n  }\\n}\\n\\n\\n\\nExample response\\n\\n[\\n  {\\n    \\\"title\\\": \\\"plan_created_webhook_url webhook url\\\",\\n    \\\"key\\\": \\\"plan_created_webhook_url\\\",\\n    \\\"value\\\": \\\"https://estoesunwebhookdeprueba.com/nueva-url\\\",\\n    \\\"description\\\": \\\"plan_created_webhook_url webhook url Luis Bermudez SR Team\\\"\\n  },\\n  {\\n    \\\"title\\\": \\\"plan_created_webhook_headers webhook headers\\\",\\n    \\\"key\\\": \\\"plan_created_webhook_headers\\\",\\n    \\\"value\\\": \\\"{\\\\\\\"Content-Type\\\\\\\":\\\\\\\"application/json\\\\\\\"}\\\",\\n    \\\"description\\\": \\\"plan_created_webhook_headers webhook url Luis Bermudez SR Team\\\"\\n  }\\n]\\nDelete Webhooks\\n\\nURL Definition\\n\\n\\nDELETE https://api.simpliroute.com/v1/addons/webhooks\\n\\n\\n\\n\\nExample body\\n\\n{\\n    \\\"webhook\\\": \\\"plan_created\\\"\\n}\\n\\n\\n\\nExample response\\n\\n[{\\n  \\\"message\\\": \\\"The webhook was deleted\\\"\\n}]\\nWebhook Plan creation\\nSimpliRoute is able to send Webhook for Plan creation, the information available is detailed in the table above at the moment the Plan is created using POST method with headers that can be specified by the customer.\\nThe webhook is expecting a response with status code 200, otherwise it will retry after 30 seconds a maximum of 3 times total.\\n\\nURL Definition\\n\\n\\nPOST https://api.simpliroute.com/v2/plans/create-plan/\",\"textTemplate\":\"\",\"startCharIdx\":61476,\"endCharIdx\":64971,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"G/7FpIX7haMEFDk/xQhkyWNmoPOpZ0RZYLk6iGm6K7A=\"}","__type__":"TEXT"},"213300e1-d1f8-470a-9626-80acf0324812":{"__data__":"{\"id_\":\"213300e1-d1f8-470a-9626-80acf0324812\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"4e066f8e-d8dc-4936-812a-f2c6c0719fec\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"yE0FTWwK+dOg4s9XF4/7OJv9puIJTmVx9wSjHVIOYfA=\"},\"NEXT\":{\"nodeId\":\"6523073d-159c-4ec9-9b91-8901c7e92984\",\"metadata\":{},\"hash\":\"emoaACq3sNLqe1hNTUd8HSH9HUUmh3mdTbnUiCGAYLI=\"}},\"text\":\"DELETE https://api.simpliroute.com/v1/addons/webhooks\\n\\n\\n\\n\\nExample body\\n\\n{\\n    \\\"webhook\\\": \\\"plan_created\\\"\\n}\\n\\n\\n\\nExample response\\n\\n[{\\n  \\\"message\\\": \\\"The webhook was deleted\\\"\\n}]\\nWebhook Plan creation\\nSimpliRoute is able to send Webhook for Plan creation, the information available is detailed in the table above at the moment the Plan is created using POST method with headers that can be specified by the customer.\\nThe webhook is expecting a response with status code 200, otherwise it will retry after 30 seconds a maximum of 3 times total.\\n\\nURL Definition\\n\\n\\nPOST https://api.simpliroute.com/v2/plans/create-plan/ \\n\\n\\n\\nExample\\n\\n[{\\n  \\\"account_id\\\": 295,\\n  \\\"id\\\": \\\"9503f703-ba7c-41a0-b91f-3bcebeca7b17\\\",\\n  \\\"start_date\\\": \\\"2020-03-19\\\",\\n  \\\"end_date\\\": \\\"2020-03-19\\\",\\n  \\\"reset_day\\\": 1,\\n  \\\"route_ids\\\": [\\n    \\\"9894ddcd-e844-4c77-90e8-9d9a2a226f05\\\"\\n  ],\\n  \\\"fleet_id\\\": 647\\n}]\\n\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nid\\nUUID\\n\\nPlan ID\\n\\n\\naccount_id\\nint\\n\\nAccount id.\\n\\n\\nstart_date\\nDate format YYYY-MM-DD\\n\\nThe date when the plan starts.\\n\\n\\nend_date\\nDate format YYYY-MM-DD\\n\\nThe date when the plan ends.\\n\\n\\nreset_day\\nInt, 1=Monday, 2=Tuesday…, 100=no reset\\n\\nThe day when the plan resets.\\n\\n\\nroute_ids\\nArray of uuid\\n\\nList of the routes in the plan.\\n\\n\\nfleet_id\\nint\\n\\nId of the fleet assigned to the plan\\n\\n\\nWebhook Plan edition\\nSimpliRoute is able to send Webhook when a plan is edited.\\nTo use this webhook, the customer should provide a webservice prepared to process POST requests with the information detailed in the tables above.\\nThe webhook is expecting a response with status code 200, otherwise it will retry after 30 seconds a maximum of 3 times total.\\n\\nURL Definition\\n\\n\\nPOST https://api.simpliroute.com/v2/plans/edit-plan/\",\"textTemplate\":\"\",\"startCharIdx\":64362,\"endCharIdx\":66054,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"AylI44I71G6Y7nMuQoHUBVyF2bwcodVqV8ogFuXhdII=\"}","__type__":"TEXT"},"6523073d-159c-4ec9-9b91-8901c7e92984":{"__data__":"{\"id_\":\"6523073d-159c-4ec9-9b91-8901c7e92984\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"213300e1-d1f8-470a-9626-80acf0324812\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"9/dvr7G7AUcvgD9mWUoPCoy3669Avg8rxsV1lSIvhvw=\"},\"NEXT\":{\"nodeId\":\"3f4f10f1-fd26-49c5-9f33-d5e516a6124f\",\"metadata\":{},\"hash\":\"Kt+B9NMjxO3Da4l2PzfojexhP/upKus3GhvOShI0Cas=\"}},\"text\":\"account_id\\nint\\n\\nAccount id.\\n\\n\\nstart_date\\nDate format YYYY-MM-DD\\n\\nThe date when the plan starts.\\n\\n\\nend_date\\nDate format YYYY-MM-DD\\n\\nThe date when the plan ends.\\n\\n\\nreset_day\\nInt, 1=Monday, 2=Tuesday…, 100=no reset\\n\\nThe day when the plan resets.\\n\\n\\nroute_ids\\nArray of uuid\\n\\nList of the routes in the plan.\\n\\n\\nfleet_id\\nint\\n\\nId of the fleet assigned to the plan\\n\\n\\nWebhook Plan edition\\nSimpliRoute is able to send Webhook when a plan is edited.\\nTo use this webhook, the customer should provide a webservice prepared to process POST requests with the information detailed in the tables above.\\nThe webhook is expecting a response with status code 200, otherwise it will retry after 30 seconds a maximum of 3 times total.\\n\\nURL Definition\\n\\n\\nPOST https://api.simpliroute.com/v2/plans/edit-plan/ \\n\\n\\n\\nExample \\n\\n{\\n \\\"id\\\": \\\"9b420e42-m492-29m1-a214-f2ad927707b4\\\",\\n \\\"account\\\": {\\n   \\\"id\\\": 1,\\n   \\\"name\\\": \\\"demo@simpliroute.com\\\"\\n },\\n \\\"end_date\\\": \\\"2019-12-24\\\",\\n \\\"reset_day\\\": 1,\\n \\\"start_date\\\": \\\"2019-12-24\\\",\\n \\\"fleet_id\\\": 647,\\n \\\"routes\\\": [\\n   {\\n     \\\"id\\\": \\\"900787e1-k582-0185-9eeb-d93b68c98b85\\\",\\n     \\\"planned_date\\\": \\\"2019-12-24\\\",\\n     \\\"total_load\\\": 50,\\n     \\\"total_load_2\\\": 0,\\n     \\\"total_load_3\\\": 0,\\n     \\\"estimated_time_end\\\": \\\"11:37:00\\\",\\n     \\\"estimated_time_start\\\": \\\"09:00:00\\\",\\n     \\\"comment\\\": null,\\n     \\\"driver\\\": {\\n       \\\"id\\\": 1,\\n       \\\"name\\\": \\\"Driver Demo\\\"\\n     },\\n     \\\"vehicle\\\": {\\n       \\\"id\\\": 1,\\n       \\\"reference\\\": \\\"XXXX11\\\",\\n       \\\"name\\\": \\\"Vehicle Demo\\\"\\n     },\\n     \\\"visits\\\": [\\n       {\\n         \\\"id\\\": 20661418,\\n         \\\"title\\\": \\\"foo\\\",\\n         \\\"planned_date\\\": \\\"2019-12-24\\\",\\n         \\\"latitude\\\": \\\"-33.370405\\\",\\n         \\\"longitude\\\": \\\"-70.684798\\\",\\n         \\\"load\\\": 0,\\n         \\\"load_2\\\": 0,\\n         \\\"load_3\\\": 0,\\n         \\\"duration\\\": \\\"0:10:00\\\",\\n         \\\"estimated_time_departure\\\": \\\"09:30:00\\\",\\n         \\\"estimated_time_arrival\\\": \\\"09:20:00\\\",\\n         \\\"notes\\\": \\\"\\\",\\n         \\\"order\\\": 1\\n       },\\n       {\\n         \\\"load\\\": 25,\\n         \\\"estimated_time_departure\\\": \\\"10:00:00\\\",\\n         \\\"planned_date\\\": \\\"2019-12-24\\\",\\n         \\\"load_3\\\": 0,\\n         \\\"load_2\\\": 0,\\n         \\\"duration\\\": \\\"0:15:00\\\",\\n         \\\"estimated_time_arrival\\\": \\\"09:45:00\\\",\\n         \\\"id\\\": 20661406,\\n         \\\"title\\\": \\\"bar\\\",\\n         \\\"notes\\\": \\\"\\\",\\n         \\\"longitude\\\": \\\"-70.758134\\\",\\n         \\\"latitude\\\": \\\"-33.384390\\\",\\n         \\\"order\\\": 2\\n       },\\n       {\\n         \\\"load\\\": 0,\\n         \\\"estimated_time_departure\\\": \\\"10:24:00\\\",\\n         \\\"planned_date\\\": \\\"2019-12-24\\\",\\n         \\\"load_3\\\": 0,\\n         \\\"load_2\\\": 0,\\n         \\\"duration\\\": \\\"0:10:00\\\",\\n         \\\"estimated_time_arrival\\\": \\\"10:14:00\\\",\\n         \\\"id\\\": 20661420,\\n         \\\"title\\\": \\\"foo-bar\\\",\\n         \\\"notes\\\": \\\"\\\",\\n         \\\"longitude\\\": \\\"-70.703681\\\",\\n         \\\"latitude\\\": \\\"-33.427045\\\",\\n         \\\"order\\\": 3\\n       }       \\n     ]     \\n   }\\n ]\\n}\\nPlan Object\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nid\\nUUID\\n\\nPlan ID\\n\\n\\naccount {id, name}\\nid: int - name: string.\\n\\nAccount information.\\n\\n\\nstart_date\\nDate format YYYY-MM-DD\\n\\nThe date when the plan starts.\\n\\n\\nend_date\\nDate format YYYY-MM-DD\\n\\nThe date when the plan ends.\\n\\n\\nreset_day\\nInt, 1=Monday, 2=Tuesday…, 100=no reset\\n\\nThe day when the plan resets.\\n\\n\\nfleet_id\\nint\\n\\nId of the fleet assigned to the plan\\n\\n\\nroutes\\nlist(Route)\\n\\nList of the routes in the plan. See Route Object for details.\\n\\n\\nRoute Object\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nid\\nUUID\\n\\nId of the route in SimpliRoute.\",\"textTemplate\":\"\",\"startCharIdx\":65273,\"endCharIdx\":68582,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"GkDT6dKgBAKKLmT7oerwiwK1la5zq1x+rhXValc0l1U=\"}","__type__":"TEXT"},"3f4f10f1-fd26-49c5-9f33-d5e516a6124f":{"__data__":"{\"id_\":\"3f4f10f1-fd26-49c5-9f33-d5e516a6124f\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"6523073d-159c-4ec9-9b91-8901c7e92984\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"emoaACq3sNLqe1hNTUd8HSH9HUUmh3mdTbnUiCGAYLI=\"},\"NEXT\":{\"nodeId\":\"22945d11-69ba-44a4-8e12-51923bea646a\",\"metadata\":{},\"hash\":\"2Utcjj1do5aJrKxDAdiuZhT1f+ujlfJ1osjhMZNNKqE=\"}},\"text\":\"Attributes\\nType\\n\\nDescription\\n\\n\\n\\nid\\nUUID\\n\\nPlan ID\\n\\n\\naccount {id, name}\\nid: int - name: string.\\n\\nAccount information.\\n\\n\\nstart_date\\nDate format YYYY-MM-DD\\n\\nThe date when the plan starts.\\n\\n\\nend_date\\nDate format YYYY-MM-DD\\n\\nThe date when the plan ends.\\n\\n\\nreset_day\\nInt, 1=Monday, 2=Tuesday…, 100=no reset\\n\\nThe day when the plan resets.\\n\\n\\nfleet_id\\nint\\n\\nId of the fleet assigned to the plan\\n\\n\\nroutes\\nlist(Route)\\n\\nList of the routes in the plan. See Route Object for details.\\n\\n\\nRoute Object\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nid\\nUUID\\n\\nId of the route in SimpliRoute.\\n\\n\\nplanned_date\\ndate (YYYY-MM-DD)\\n\\nDate of the route\\n\\n\\ntotal_load\\ndouble\\n\\nThe total load 1 of the route.\\n\\n\\ntotal_load2\\ndouble\\n\\nThe total load 2 of the route.\\n\\n\\ntotal_load_3\\ndouble\\n\\nThe total load 3 of the route.\\n\\n\\nestimated_time_start\\ntime (hh:mm:ss)\\n\\nEstimated time of the route to start in local timezone of the account.\\n\\n\\nestimated_time_end\\ntime (hh:mm:ss)\\n\\nEstimated time of the route to end in local timezone of the account.\\n\\n\\ncomment\\nstring\\n\\nComment of the route.\\n\\n\\ndriver {id, name}\\nid: id of the driver in SimpliRoute- name: name of the driver\\n\\nDriver information.\\n\\n\\nvehicle  {id, reference, name}\\nid: id of the vehicle in SimpliRoute.reference: reference id, it could be the licence plate for example.name: name of the vehicle in SimpliRoute\\n\\nVehicle information\\n\\n\\nvisits\\nlist(Visit)\\n\\nList of the visits in the route. See Visit Object for details.\\n\\n\\nVisit Object\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nid\\nint\\n\\nId of the visit in SimpliRoute.\\n\\n\\ntitle\\nstring\\n\\nTitle of the visit.\\n\\n\\nplanned_date\\nDate format YYYY-MM-DD\\n\\nDate of the delivery.\\n\\n\\nlatitude\\ndouble\\n\\nThe date when the plan ends.\\n\\n\\nlongitude\\ndouble\\n\\nThe day when the plan resets.\\n\\n\\nload\\ndouble\\n\\nLoad 1.\\n\\n\\nload2\\ndouble\\n\\nLoad 2.\\n\\n\\nload3\\ndouble\\n\\nLoad 3.\\n\\n\\nduration\\ndouble\\n\\nService time of the visit.\\n\\n\\nestimated_time_arrival\\ndouble\\n\\nEstimated time to arrive to the visit.\\n\\n\\nestimated_time_departure\\ndouble\\n\\nEstimated time of departure from the visit. It should be estimated_time_arrival + duration.\\n\\n\\nnotes\\nstring\\n\\nNotes of the visit.\\n\\n\\norder\\nint\\n\\nOrder of the visit in the route\",\"textTemplate\":\"\",\"startCharIdx\":68025,\"endCharIdx\":70119,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"w6yZuXRpG7+vFz0OzuWlDauexjbdd/KPdKkmPmuA6dM=\"}","__type__":"TEXT"},"22945d11-69ba-44a4-8e12-51923bea646a":{"__data__":"{\"id_\":\"22945d11-69ba-44a4-8e12-51923bea646a\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"3f4f10f1-fd26-49c5-9f33-d5e516a6124f\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"Kt+B9NMjxO3Da4l2PzfojexhP/upKus3GhvOShI0Cas=\"},\"NEXT\":{\"nodeId\":\"63999dc7-7f62-4d32-b48b-7c8407f2cd08\",\"metadata\":{},\"hash\":\"pYD+y4Adnhi9X64QQ57Y1I6MWd+ZPgg9eK/GvZGPFqY=\"}},\"text\":\"visits\\nlist(Visit)\\n\\nList of the visits in the route. See Visit Object for details.\\n\\n\\nVisit Object\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nid\\nint\\n\\nId of the visit in SimpliRoute.\\n\\n\\ntitle\\nstring\\n\\nTitle of the visit.\\n\\n\\nplanned_date\\nDate format YYYY-MM-DD\\n\\nDate of the delivery.\\n\\n\\nlatitude\\ndouble\\n\\nThe date when the plan ends.\\n\\n\\nlongitude\\ndouble\\n\\nThe day when the plan resets.\\n\\n\\nload\\ndouble\\n\\nLoad 1.\\n\\n\\nload2\\ndouble\\n\\nLoad 2.\\n\\n\\nload3\\ndouble\\n\\nLoad 3.\\n\\n\\nduration\\ndouble\\n\\nService time of the visit.\\n\\n\\nestimated_time_arrival\\ndouble\\n\\nEstimated time to arrive to the visit.\\n\\n\\nestimated_time_departure\\ndouble\\n\\nEstimated time of departure from the visit. It should be estimated_time_arrival + duration.\\n\\n\\nnotes\\nstring\\n\\nNotes of the visit.\\n\\n\\norder\\nint\\n\\nOrder of the visit in the route\\n\\n\\nWebhook Route creation\\nSimpliRoute can send Webhooks for route creation, the available information is detailed in the table below. At the time the route is created using the POST method with headers that the client can specify.\\nThe webhook expects a response with status code 200; otherwise, it will try again after 30 seconds, a maximum of 3 times in total.\\n\\nExample body\\n\\n{\\n  \\\"id\\\": \\\"e5bb5b51-d494-483f-8180-ace00c89c06d\\\",\\n  \\\"comment\\\": null,\\n  \\\"planned_date\\\": \\\"2024-01-12\\\",\\n  \\\"plan\\\": {\\n    \\\"id\\\": \\\"1ef9f5c4-2197-41da-8f23-adfcabd272b5\\\",\\n    \\\"name\\\": \\\"12-01-2024 14:53:03\\\"\\n  },\\n  \\\"driver\\\": {\\n    \\\"id\\\": 118553,\\n    \\\"name\\\": \\\"rapidoqa1\\\"\\n  },\\n  \\\"route_start\\\": {\\n    \\\"lat\\\": \\\"-33.449977\\\",\\n    \\\"lon\\\": \\\"-70.654465\\\",\\n    \\\"address\\\": \\\"Lord Cochrane 298, Santiago, Chile\\\",\\n    \\\"start_time\\\": null,\\n    \\\"estimated_time_start\\\": \\\"09:42:00\\\"\\n  },\\n  \\\"route_end\\\": {\\n    \\\"lat\\\": \\\"-33.449977\\\",\\n    \\\"lon\\\": \\\"-70.654465\\\",\\n    \\\"address\\\": \\\"Lord Cochrane 298, Santiago, Chile\\\",\\n    \\\"estimated_time_end\\\": \\\"10:08:00\\\",\\n    \\\"end_time\\\": null\\n  },\\n  \\\"visit_ids\\\": [\\n    370679703\\n  ],\\n  \\\"info_visits\\\": [\\n    {\\n      \\\"id\\\": 370679703,\\n      \\\"reference\\\": \\\"\\\",\\n      \\\"tracking_id\\\": \\\"SR68561793642931\\\",\\n      \\\"order\\\": 1,\\n      \\\"estimated_time_arrival\\\":\\\"09:42:00\\\",\\n      \\\"notes\\\":\\\"notes\\\"\\n    }\\n  ],\\n  \\\"vehicle\\\": {\\n    \\\"id\\\": 266603,\\n    \\\"name\\\": \\\"VEH1F\\\",\\n    \\\"reference\\\": \\\"XXX333\\\"\\n  },\\n  \\\"timestamp\\\": \\\"2024-01-30 15:14:45.708968\\\",\\n  \\\"order\\\": 3,\\n  \\\"status\\\": \\\"created\\\"\\n}\\n\\n\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nvehicle {id, name}\\nid: int - name: string\\n\\nVehicle information.\\n\\n\\nplan {id, name}\\nid: int - name: string\\n\\nPlan information\\n\\n\\ntimestamp\\ntimestamp\\n\\nUTC timestamp of the creation of the route.\\n\\n\\nroute_start {lat, lon, start_time, estimated_time_start, address}\\nlat: float - lon: float - start_time: time - estimated_time_start: time - address: string\\n\\nRoute start information. start_time is the time that the driver started the route, so it will be null always at this point, but if we extend this webhook in the future for edition it will have the “real” start_time.\\n\\n\\nroute_end {lat, lon, end_time, estimated_time_end, address}\\nlat: float - lon: float - end_time: time - estimated_time_end: time- address: string.\\n\\nRoute end information\\n\\n\\nplanned_date\\nDate in format YYYY-MM-DD.\\n\\nDate for the route.\\n\\n\\nvisit_ids\\nid\\n\\nList of the visit ids in the route.\\n\\n\\ndriver {id, name}\\nid: int - name: string.\\n\\nDriver information.\\n\\n\\norder\\nint\\n\\nshow the order of the vehicle route.\\n\\n\\nstatus\\nstring\\n\\nDisplay the operation's status event, 'created'\",\"textTemplate\":\"\",\"startCharIdx\":69356,\"endCharIdx\":72609,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"cFTWyI2FvLK7x571mByFzBoyheNSb4Nn5O0ntX7INkw=\"}","__type__":"TEXT"},"63999dc7-7f62-4d32-b48b-7c8407f2cd08":{"__data__":"{\"id_\":\"63999dc7-7f62-4d32-b48b-7c8407f2cd08\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"22945d11-69ba-44a4-8e12-51923bea646a\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"2Utcjj1do5aJrKxDAdiuZhT1f+ujlfJ1osjhMZNNKqE=\"},\"NEXT\":{\"nodeId\":\"623d600c-3e0a-42f1-a8f7-71a4553651a0\",\"metadata\":{},\"hash\":\"iOoaUP8EgDi7ZabCYs1ieLxJRZzhhpQjRUlU6vRtp4U=\"}},\"text\":\"route_end {lat, lon, end_time, estimated_time_end, address}\\nlat: float - lon: float - end_time: time - estimated_time_end: time- address: string.\\n\\nRoute end information\\n\\n\\nplanned_date\\nDate in format YYYY-MM-DD.\\n\\nDate for the route.\\n\\n\\nvisit_ids\\nid\\n\\nList of the visit ids in the route.\\n\\n\\ndriver {id, name}\\nid: int - name: string.\\n\\nDriver information.\\n\\n\\norder\\nint\\n\\nshow the order of the vehicle route.\\n\\n\\nstatus\\nstring\\n\\nDisplay the operation's status event, 'created'\\n\\n\\nWebhook Route edition\\nSimpliRoute can send Webhooks for route edition, the available information is detailed in the table below. At the time the route is updated using the POST method with headers that the client can specify.\\nThe webhook expects a response with status code 200; otherwise, it will try again after 30 seconds, a maximum of 3 times in total.\\n\\nExample body\\n\\n[\\n  {  \\n   \\\"vehicle\\\":{  \\n      \\\"id\\\":1,\\n      \\\"name\\\":\\\"Test\\\",\\n      \\\"reference\\\": \\\"1234FF\\\"\\n   },\\n   \\\"plan\\\":{  \\n      \\\"id\\\":\\\"528e6fa8-129d-4049-9a3c-8ad5ea12502e\\\",\\n      \\\"name\\\":\\\"Plan name\\\"\\n   },\\n   \\\"timestamp\\\":\\\"2019-07-17 14:32:14.799962\\\",\\n   \\\"route_start\\\":{  \\n      \\\"lat\\\":\\\"-33.448890\\\",\\n      \\\"start_time\\\":null,\\n      \\\"estimated_time_start\\\":\\\"09:00:00\\\",\\n      \\\"lon\\\":\\\"-70.669265\\\",\\n      \\\"address\\\":\\\"Santiago, Chile\\\"\\n   },\\n   \\\"route_end\\\":{  \\n      \\\"lat\\\":\\\"-33.448890\\\",\\n      \\\"lon\\\":\\\"-70.669265\\\",\\n      \\\"end_time\\\":null,\\n      \\\"estimated_time_end\\\":\\\"16:23:00\\\",\\n      \\\"address\\\":\\\"Santiago, Chile\\\"\\n   },\\n   \\\"planned_date\\\":\\\"2019-07-17\\\",\\n   \\\"visit_ids\\\":[15901924, 15901923, 15901922, 15901921, 15901920, 15901919, 15901918, 15901917, 15901916, 15901915, 15901914, 15901913, 15901912, 15901911, 15901910, 15901909],\\n   \\\"info_visits\\\": [\\n        {\\n          \\\"id\\\": 15901924, \\\"reference\\\": \\\"\\\", \\\"tracking_id\\\": \\\"SR88515397622033\\\", \\\"order\\\": 1,   \\\"estimated_time_arrival\\\":\\\"09:42:00\\\", \\\"notes\\\":\\\"notes\\\",\\n          \\\"id\\\": 15901923, \\\"reference\\\": \\\"\\\", \\\"tracking_id\\\": \\\"SR88515397622034\\\", \\\"order\\\": 2, \\\"estimated_time_arrival\\\":\\\"09:42:00\\\", \\\"notes\\\":\\\"notes\\\",\\n          \\\"id\\\": 15901922, \\\"reference\\\": \\\"\\\", \\\"tracking_id\\\": \\\"SR88515397622035\\\", \\\"order\\\": 3, \\\"estimated_time_arrival\\\":\\\"09:42:00\\\", \\\"notes\\\":\\\"notes\\\",\\n          \\\"id\\\": 15901921, \\\"reference\\\": \\\"\\\", \\\"tracking_id\\\": \\\"SR88515397622036\\\", \\\"order\\\": 4, \\\"estimated_time_arrival\\\":\\\"09:42:00\\\", \\\"notes\\\":\\\"notes\\\"\\n        }\\n    ],\\n   \\\"driver\\\":{  \\n      \\\"id\\\":23870,\\n      \\\"name\\\":\\\"Conductor 1\\\"\\n   },\\n   \\\"order\\\":1,\\n   \\\"status\\\":\\\"edited\\\",\\n   \\\"id\\\":\\\"51019ab7-c464-4503-bcd6-d00c3d6209f2\\\"\\n}]\\n\\n\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nvehicle {id, name}\\nid: int - name: string\\n\\nVehicle information.\\n\\n\\nplan {id, name}\\nid: int - name: string\\n\\nPlan information\\n\\n\\ntimestamp\\ntimestamp\\n\\nUTC timestamp of the creation of the route.\\n\\n\\nroute_start {lat, lon, start_time, estimated_time_start, address}\\nlat: float - lon: float - start_time: time - estimated_time_start: time - address: string\\n\\nRoute start information. start_time is the time that the driver started the route, so it will be null always at this point, but if we extend this webhook in the future for edition it will have the “real” start_time.\\n\\n\\nroute_end {lat, lon, end_time, estimated_time_end, address}\\nlat: float - lon: float - end_time: time - estimated_time_end: time- address: string.\\n\\nRoute end information\\n\\n\\nplanned_date\\nDate in format YYYY-MM-DD.\\n\\nDate for the route.\\n\\n\\nvisit_ids\\nid\\n\\nList of the visit ids in the route.\\n\\n\\ninfo_visits\\nlist(visit)\\n\\nList of the visits in the route.\",\"textTemplate\":\"\",\"startCharIdx\":72146,\"endCharIdx\":75503,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"D7R7wpuYm/dqZT3U3Ct5tDb0JMAfdUMGI2PiUcCymd8=\"}","__type__":"TEXT"},"623d600c-3e0a-42f1-a8f7-71a4553651a0":{"__data__":"{\"id_\":\"623d600c-3e0a-42f1-a8f7-71a4553651a0\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"63999dc7-7f62-4d32-b48b-7c8407f2cd08\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"pYD+y4Adnhi9X64QQ57Y1I6MWd+ZPgg9eK/GvZGPFqY=\"},\"NEXT\":{\"nodeId\":\"9b7f3fda-9dba-4e75-af02-bde07e67668b\",\"metadata\":{},\"hash\":\"ZMXcNO19nCEde63QqnMGuCcRJsCqqys9RiQm0U+fHY8=\"}},\"text\":\"timestamp\\ntimestamp\\n\\nUTC timestamp of the creation of the route.\\n\\n\\nroute_start {lat, lon, start_time, estimated_time_start, address}\\nlat: float - lon: float - start_time: time - estimated_time_start: time - address: string\\n\\nRoute start information. start_time is the time that the driver started the route, so it will be null always at this point, but if we extend this webhook in the future for edition it will have the “real” start_time.\\n\\n\\nroute_end {lat, lon, end_time, estimated_time_end, address}\\nlat: float - lon: float - end_time: time - estimated_time_end: time- address: string.\\n\\nRoute end information\\n\\n\\nplanned_date\\nDate in format YYYY-MM-DD.\\n\\nDate for the route.\\n\\n\\nvisit_ids\\nid\\n\\nList of the visit ids in the route.\\n\\n\\ninfo_visits\\nlist(visit)\\n\\nList of the visits in the route.\\n\\n\\ndriver {id, name}\\nid: int - name: string.\\n\\nDriver information.\\n\\n\\norder\\nint\\n\\nshow the order of the vehicle route.\\n\\n\\nstatus\\nstring\\n\\nDisplay the operation's status event, indicating whether the route has been edited or deleted.\\n\\n\\nWebhook Route started\\nSimpliRoute is able to send Webhook for route started, the information available is detailed in the table above at the moment the route is started using POST method with headers that can be specified by the customer.\\nThe webhook is expecting a response with status code 200, otherwise it will retry after 30 seconds a maximum of 3 times total.\\n\\nUrl Definition\\n\\n\\nPOST https://api.simpliroute.com/v1/events/register/\\n\\n\\nExample request\\n\\n\\ncurl \\n--location \\n--request POST 'http://api.simpliroute.com/v1/events/register/' \\\\\\n--header 'Authorization: Token b2de5a16bccec465aeb9083a4db41e1666520uij' \\\\\\n--header 'content-type: application/json;charset=UTF-8' \\\\\\n--header 'Content-Type: text/plain' \\\\\\n--data-raw '{\\n    \\\"date_time\\\" : \\\"2020-05-27 16:35:00\\\",\\n    \\\"route_id\\\": \\\"402ecd99-a0c9-418c-9cd9-088a0cb70242\\\",\\n    \\\"type\\\" : \\\"ROUTE_STARTED\\\"\\n}'\\n\\n\\nExample \\n\\n[\\n{\\n  \\\"vehicle\\\": {\\n    \\\"id\\\": 101174,\\n    \\\"name\\\": \\\"KGST\\\"\\n  },\\n  \\\"plan\\\": {\\n    \\\"id\\\": \\\"728c5d34-ff14-4ccf-9fd8-16257f4332e9\\\",\\n    \\\"name\\\": \\\"26-05-2020 21:37:25\\\"\\n  },\\n  \\\"timestamp\\\": \\\"2020-05-27 20:43:40.650476\\\",\\n  \\\"route_start\\\": {\\n    \\\"lat\\\": \\\"-33.459425\\\",\\n    \\\"start_time\\\": \\\"2020-05-27 16:35:00+00:00\\\",\\n    \\\"estimated_time_start\\\": \\\"09:00:00\\\",\\n    \\\"lon\\\": \\\"-70.654531\\\",\\n    \\\"address\\\": \\\"Aldunate 1047, Santiago, Región Metropolitana, Chile\\\"\\n  },\\n  \\\"route_end\\\": {\\n    \\\"lat\\\": \\\"-33.459425\\\",\\n    \\\"lon\\\": \\\"-70.654531\\\",\\n    \\\"end_time\\\": null,\\n    \\\"estimated_time_end\\\": \\\"09:15:00\\\",\\n    \\\"address\\\": \\\"Aldunate 1047, Santiago, Región Metropolitana, Chile\\\"\\n  },\\n  \\\"planned_date\\\": \\\"2020-05-26\\\",\\n  \\\"visit_ids\\\": [\\n    32397185\\n  ],\\n  \\\"driver\\\": {\\n    \\\"id\\\": 26351,\\n    \\\"name\\\": \\\"Flash\\\"\\n  },\\n  \\\"id\\\": \\\"e1d12cf7-25c6-4f01-98d5-83a52c9b3aed\\\"\\n}\\n]\\n\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nvehicle {id, name}\\nid: int - name: string\\n\\nVehicle information.\\n\\n\\nplan {id, name}\\nid: int - name: string\\n\\nPlan information\\n\\n\\ntimestamp\\ntimestamp\\n\\nUTC timestamp of the creation of the route.\\n\\n\\nroute_start {lat, lon, start_time, estimated_time_start, address}\\nlat: float - lon: float - start_time: time - estimated_time_start: time - address: string\\n\\nRoute start information. start_time is the time that the driver started the route, so it will be null always at this point, but if we extend this webhook in the future for edition it will have the “real” start_time.\",\"textTemplate\":\"\",\"startCharIdx\":74718,\"endCharIdx\":78013,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"Y405jqsDH1uT16l4+E24q9tUjMpm44r/INM3ckL8rH8=\"}","__type__":"TEXT"},"9b7f3fda-9dba-4e75-af02-bde07e67668b":{"__data__":"{\"id_\":\"9b7f3fda-9dba-4e75-af02-bde07e67668b\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"623d600c-3e0a-42f1-a8f7-71a4553651a0\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"iOoaUP8EgDi7ZabCYs1ieLxJRZzhhpQjRUlU6vRtp4U=\"},\"NEXT\":{\"nodeId\":\"7a80b17a-41c4-4f6b-9238-55eece0d1b2f\",\"metadata\":{},\"hash\":\"+BcAqKSn60KRhr3YrULuDZrAL97dFv5rV79rWpGkM/w=\"}},\"text\":\"Attributes\\nType\\n\\nDescription\\n\\n\\n\\nvehicle {id, name}\\nid: int - name: string\\n\\nVehicle information.\\n\\n\\nplan {id, name}\\nid: int - name: string\\n\\nPlan information\\n\\n\\ntimestamp\\ntimestamp\\n\\nUTC timestamp of the creation of the route.\\n\\n\\nroute_start {lat, lon, start_time, estimated_time_start, address}\\nlat: float - lon: float - start_time: time - estimated_time_start: time - address: string\\n\\nRoute start information. start_time is the time that the driver started the route, so it will be null always at this point, but if we extend this webhook in the future for edition it will have the “real” start_time.\\n\\n\\nroute_end {lat, lon, end_time, estimated_time_end, address}\\nlat: float - lon: float - end_time: time - estimated_time_end: time- address: string.\\n\\nRoute end information\\n\\n\\nplanned_date\\nDate in format YYYY-MM-DD.\\n\\nDate for the route.\\n\\n\\nvisit_ids\\nid\\n\\nList of the visit ids in the route.\\n\\n\\ndriver {id, name}\\nid: int - name: string.\\n\\nDriver information.\\n\\n\\nid\\nid\\n\\nString with the route id.\\n\\n\\nWebhook Route Finish\\nSimpliRoute is able to send Webhook for finished route, the information available is detailed in the table above at the moment the route is started using POST method with headers that can be specified by the customer.\\nThe webhook is expecting a response with status code 200, otherwise it will retry after 30 seconds a maximum of 3 times total.\\n\\nUrl Definition\\n\\n\\nPOST https://api.simpliroute.com/v1/events/register/\\n\\n\\nExample request\\n\\ncurl \\n--location \\n--request POST 'http://api.simpliroute.com/v1/events/register/' \\\\\\n--header 'Authorization: Token b2de5a16bccec465aeb9083a4db41e1666520uij' \\\\\\n--header 'content-type: application/json;charset=UTF-8' \\\\\\n--header 'Content-Type: text/plain' \\\\\\n--data-raw '{\\n    \\\"date_time\\\" : \\\"2020-05-27 17:35:00\\\",\\n    \\\"route_id\\\": \\\"402ecd99-a0c9-418c-9cd9-088a0cb70242\\\",\\n    \\\"type\\\" : \\\"ROUTE_FINISHED\\\"\\n}'\\n\\n\\n\\n\\nExample \\n\\n[{\\n  \\\"vehicle\\\": {\\n    \\\"id\\\": 101174,\\n    \\\"name\\\": \\\"KGST\\\"\\n  },\\n  \\\"plan\\\": {\\n    \\\"id\\\": \\\"728c5d34-ff14-4ccf-9fd8-16257f4332e9\\\",\\n    \\\"name\\\": \\\"26-05-2020 21:37:25\\\"\\n  },\\n  \\\"timestamp\\\": \\\"2020-05-27 20:46:01.471879\\\",\\n  \\\"route_start\\\": {\\n    \\\"lat\\\": \\\"-33.459425\\\",\\n    \\\"start_time\\\": \\\"2020-05-27 16:35:00+00:00\\\",\\n    \\\"estimated_time_start\\\": \\\"09:00:00\\\",\\n    \\\"lon\\\": \\\"-70.654531\\\",\\n    \\\"address\\\": \\\"Aldunate 1047, Santiago, Región Metropolitana, Chile\\\"\\n  },\\n  \\\"route_end\\\": {\\n    \\\"lat\\\": \\\"-33.459425\\\",\\n    \\\"lon\\\": \\\"-70.654531\\\",\\n    \\\"end_time\\\": \\\"2020-05-27 17:35:00+00:00\\\",\\n    \\\"estimated_time_end\\\": \\\"09:15:00\\\",\\n    \\\"address\\\": \\\"Aldunate 1047, Santiago, Región Metropolitana, Chile\\\"\\n  },\\n  \\\"planned_date\\\": \\\"2020-05-26\\\",\\n  \\\"visit_ids\\\": [\\n    32397185\\n  ],\\n  \\\"driver\\\": {\\n    \\\"id\\\": 26351,\\n    \\\"name\\\": \\\"Flash\\\"\\n  },\\n  \\\"id\\\": \\\"e1d12cf7-25c6-4f01-98d5-83a52c9b3aed\\\"\\n}\\n]\\n\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nvehicle {id, name}\\nid: int - name: string\\n\\nVehicle information.\\n\\n\\nplan {id, name}\\nid: int - name: string\\n\\nPlan information\\n\\n\\ntimestamp\\ntimestamp\\n\\nUTC timestamp of the creation of the route.\\n\\n\\nroute_start {lat, lon, start_time, estimated_time_start, address}\\nlat: float - lon: float - start_time: time - estimated_time_start: time - address: string\\n\\nRoute start information. start_time is the time that the driver started the route, so it will be null always at this point, but if we extend this webhook in the future for edition it will have the “real” start_time.\",\"textTemplate\":\"\",\"startCharIdx\":77417,\"endCharIdx\":80706,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"dOUVG64n4bU6loIcmJNRe/eqOXGpiPi4XqEf4OlXikk=\"}","__type__":"TEXT"},"7a80b17a-41c4-4f6b-9238-55eece0d1b2f":{"__data__":"{\"id_\":\"7a80b17a-41c4-4f6b-9238-55eece0d1b2f\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"9b7f3fda-9dba-4e75-af02-bde07e67668b\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"ZMXcNO19nCEde63QqnMGuCcRJsCqqys9RiQm0U+fHY8=\"},\"NEXT\":{\"nodeId\":\"2862ce31-b7e8-4df7-b5cb-3da960e40cea\",\"metadata\":{},\"hash\":\"MoK2IXVnE65i/3tbmofsiEqFtH3GvgJ8GLr1STsbh4Q=\"}},\"text\":\"Attributes\\nType\\n\\nDescription\\n\\n\\n\\nvehicle {id, name}\\nid: int - name: string\\n\\nVehicle information.\\n\\n\\nplan {id, name}\\nid: int - name: string\\n\\nPlan information\\n\\n\\ntimestamp\\ntimestamp\\n\\nUTC timestamp of the creation of the route.\\n\\n\\nroute_start {lat, lon, start_time, estimated_time_start, address}\\nlat: float - lon: float - start_time: time - estimated_time_start: time - address: string\\n\\nRoute start information. start_time is the time that the driver started the route, so it will be null always at this point, but if we extend this webhook in the future for edition it will have the “real” start_time.\\n\\n\\nroute_end {lat, lon, end_time, estimated_time_end, address}\\nlat: float - lon: float - end_time: time - estimated_time_end: time- address: string.\\n\\nRoute end information\\n\\n\\nplanned_date\\nDate in format YYYY-MM-DD.\\n\\nDate for the route.\\n\\n\\nvisit_ids\\nid\\n\\nList of the visit ids in the route.\\n\\n\\ndriver {id, name}\\nid: int - name: string.\\n\\nDriver information.\\n\\n\\nWebhook  On it`s way\\nSimpliRoute can send visit information at the time an on 'its way' event is launched by calling a POST method to a webservice provided by clients, the available information is described in the following table (not necessarily in that order) .\\nThe webhook expects to get a response with code 200, it will retry every 30 seconds with a maximum of 3 attempts.\\n\\nExample body\\n\\n\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nid\\nint\\nId of the visit in SimpliRoute.\\n\\n\\n\\nload\\ndouble\\nLoad 1.\\n\\n\\n\\nload2\\ndouble\\nLoad 2.\\n\\n\\n\\nload3\\ndouble\\nLoad 3.\\n\\n\\n\\nwindow_start\\nTime\\nInitial Hour when the visit can be visit\\n\\n\\n\\nwindow_end\\nTime\\nFinal Hour when the visit can be visit\\n\\n\\n\\nwindow_start_2\\nTime\\nInitial Hour when the visit can be visit\\n\\n\\n\\nwindow_end_2\\nTime\\nFinal Hour when the visit can be visit\\n\\n\\n\\nreference\\nString\\nReference or internal identifier of the company. Example: Invoice or order number.\\n\\n\\n\\nplanned_date date\\nYYYY-MM-DD\\nDate for the route.\\n\\n\\n\\norder\\nint\\nplanned delivery order\\n\\n\\n\\ncheckout_comment\\ntext\\nComments on delivery time\\n\\n\\n\\nduration\\ntime\\nService time\\n\\n\\n\\ncalculated_service_time\\ntime\\nCalculated service time\\n\\n\\n\\ntitle\\nvarchar(254)\\nVisit Title.\\n\\n\\n\\ncontact_name\\nvarchar(254)\\nContact name\\n\\n\\n\\ncontact_email\\ntext\\ne-mail contat\\n\\n\\n\\ncontact_phone\\nvarchar(254)\\nContact phone\\n\\n\\n\\nnotes\\ntext\\nNotes of the visit\\n.\\n\\n\\nlatitude\\nnumeric(9,6)\\nLatitud of the visit\\n\\n\\n\\nlongitude\\nnumeric(9,6)\\nLongitud of the visit\\n\\n\\n\\nstatus\\nvarchar(100)\\nStatus of the visit: pending, completed or failed.\\n\\n\\n\\naddress\\nvarchar(254)\\nAddress of the visit\\n\\n\\n\\naccount\\nvarchar(254)\\nAccount name\\n\\n\\n\\nroute\\nvarchar(254)\\nRoute name.\\n\\n\\n\\nstatus_changed\\ntimestamp\\nDate and time of the last status change.\\n\\n\\n\\npriority_level\\nint\\nVisit priority.\\n\\n\\n\\ncreated\\ntimestamp\\nCreation time of the visit.\\n\\n\\n\\nmodified\\ntimestamp\\nTime of the last modification of the visit.\\n\\n\\n\\nestimated_time_arrival\\ntime\\nestimated time of arrival to the visit.\\n\\n\\n\\ncurrent_eta\\ndate\\nEstimated time of arrival of the visit.\\n\\n\\n\\nestimated_time_departure\\ntime\\nestimated time of departure from the visit.\\n\\n\\n\\ntracking_id\\nvarchar(254)\\nTracking id.\\n\\n\\n\\nsignature\\nvarchar(100)\\nAddress where the signature is stored\\n\\n\\n\\ncheckin_time\\ntimestamp\\nArrival time at visit (by GPS driver).\\n\\n\\n\\ncheckin_latitude\\nnumeric(9,6)\\nLatitude of arrival at the visit.\\n\\n\\n\\ncheckin_longitude\\nnumeric(9,6)\\nLongitude of arrival at visit.\\n\\n\\n\\ncheckout_longitude\\nnumeric(9,6)\\nLongitude of checkout.\\n\\n\\n\\ncheckout_observation\\nuuid\\nId of the observation selected at checkout.\\n\\n\\n\\ncheckout_latitude\\nnumeric(9,6)\\nLatitude of checkout\\n\\n\\n\\ncheckout_time\\ntimestamp\\nCheckout date and time.\\n\\n\\n\\ngeocode_alert\\nvarchar(22)\\nAlert when georeferencing the address.\\n\\n\\n\\npostal_code\\nvarchar(15)\\nZip Code if the visit.\\n\\n\\n\\nprogrammed_date\\ndate\\nScheduled date of visit.\\n\\n\\n\\nvisit_type\\njson\\nType of the visit that is being made.\\n\\n\\n\\nfleet\\njson\\nInformation of the fleet to which the visit belongs.\\n\\n\\n\\nhas_alert\\nboolean\\nDeprecated.\\n\\n\\n\\npriority\\nboolean\\nDeprecated.\",\"textTemplate\":\"\",\"startCharIdx\":80110,\"endCharIdx\":83969,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"zfd87M+mMh8ESfAeOmC33tq+wkBBYDg0HB+YLI4zV4g=\"}","__type__":"TEXT"},"2862ce31-b7e8-4df7-b5cb-3da960e40cea":{"__data__":"{\"id_\":\"2862ce31-b7e8-4df7-b5cb-3da960e40cea\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"7a80b17a-41c4-4f6b-9238-55eece0d1b2f\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"+BcAqKSn60KRhr3YrULuDZrAL97dFv5rV79rWpGkM/w=\"},\"NEXT\":{\"nodeId\":\"8ad4bdc4-5df2-4c4a-a16b-726b486ff52e\",\"metadata\":{},\"hash\":\"4rme6M5MIKVvkryJcp8FeKM0++06Tvwakr8yux4u4aM=\"}},\"text\":\"checkin_time\\ntimestamp\\nArrival time at visit (by GPS driver).\\n\\n\\n\\ncheckin_latitude\\nnumeric(9,6)\\nLatitude of arrival at the visit.\\n\\n\\n\\ncheckin_longitude\\nnumeric(9,6)\\nLongitude of arrival at visit.\\n\\n\\n\\ncheckout_longitude\\nnumeric(9,6)\\nLongitude of checkout.\\n\\n\\n\\ncheckout_observation\\nuuid\\nId of the observation selected at checkout.\\n\\n\\n\\ncheckout_latitude\\nnumeric(9,6)\\nLatitude of checkout\\n\\n\\n\\ncheckout_time\\ntimestamp\\nCheckout date and time.\\n\\n\\n\\ngeocode_alert\\nvarchar(22)\\nAlert when georeferencing the address.\\n\\n\\n\\npostal_code\\nvarchar(15)\\nZip Code if the visit.\\n\\n\\n\\nprogrammed_date\\ndate\\nScheduled date of visit.\\n\\n\\n\\nvisit_type\\njson\\nType of the visit that is being made.\\n\\n\\n\\nfleet\\njson\\nInformation of the fleet to which the visit belongs.\\n\\n\\n\\nhas_alert\\nboolean\\nDeprecated.\\n\\n\\n\\npriority\\nboolean\\nDeprecated.\\n\\n\\n\\nWebhook Checkout\\nSimpliRoute can send information about the visit at the time of checkout through a POST method call to a webservice provided by clients, the available information is described in the following table (not necessarily in that order).\\nThe webhook expects to get a response with code 200, it will retry every 30 seconds with a maximum of 3 attempts.\\n\\nExample body\\n\\nEjemplo:\\n[{\\n   \\\"id\\\": 18843965,\\n   \\\"load\\\": 0.0,\\n   \\\"load_2\\\": 0.0,\\n   \\\"load_3\\\": 0.0,\\n   \\\"window_start\\\": \\\"09:00:00\\\",\\n   \\\"window_end\\\": \\\"19:00:00\\\",\\n   \\\"window_start_2\\\": \\\"23:59:00\\\",\\n   \\\"window_end_2\\\": \\\"23:59:00\\\",\\n   \\\"reference\\\": \\\"\\\",\\n   \\\"planned_date\\\": \\\"2019-09-09\\\",\\n   \\\"order\\\": 4,\\n   \\\"checkout_comment\\\": \\\"Test\\\",\\n   \\\"duration\\\": \\\"0:20:00\\\",\\n   \\\"calculated_service_time\\\": \\\"0:00:00\\\",\\n   \\\"title\\\": \\\"INDUSTRIAS RIC\\\\u00d3N\\\",\\n   \\\"contact_name\\\": \\\"Victor Gonzalez\\\",\\n   \\\"contact_email\\\": \\\"\\\",\\n   \\\"contact_phone\\\": \\\"978567812\\\",\\n   \\\"notes\\\": \\\"\\\",\\n   \\\"latitude\\\": \\\"-33.439046\\\",\\n   \\\"longitude\\\": \\\"-70.648752\\\",\\n   \\\"status\\\": \\\"completed\\\",\\n   \\\"address\\\": \\\"HUERFANOS 835 OF. 202, SANTIAGO, Santiago\\\",\\n   \\\"account\\\": \\\"demo_apple@simpliroute.com\\\",\\n   \\\"route\\\": \\\"2019-09-09 - Test\\\",\\n   \\\"status_changed\\\": \\\"2019-09-09 21:23:01.251595+00:00\\\",\\n   \\\"priority_level\\\": 0,\\n   \\\"created\\\": \\\"2019-08-29 22:33:44.015108+00:00\\\",\\n   \\\"modified\\\": \\\"2019-09-09 21:23:01.251582+00:00\\\",\\n   \\\"estimated_time_arrival\\\": \\\"10:12:00\\\",\\n   \\\"estimated_time_departure\\\": \\\"10:32:00\\\",\\n   \\\"tracking_id\\\": \\\"SR67118024023080\\\",\\n   \\\"signature\\\": \\\"visit-signatures/2019/09/09/ac6bf49a-35b.png\\\",\\n   \\\"checkin_time\\\": null,\\n   \\\"checkin_latitude\\\": null,\\n   \\\"checkin_longitude\\\": null,\\n   \\\"checkout_observation\\\": null,\\n   \\\"checkout_latitude\\\": \\\"-33.420471\\\",\\n   \\\"checkout_longitude\\\": \\\"-70.603384\\\",\\n   \\\"checkout_time\\\": \\\"2019-09-09 21:22:56.068000+00:00\\\",\\n   \\\"on_its_way\\\": null,\\n   \\\"geocode_alert\\\": null,\\n   \\\"has_alert\\\": false,\\n   \\\"priority\\\": false\\n}]\\n\\n\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nid\\nint\\n\\nId of the visit in SimpliRoute\\n\\n\\nload\\ndouble\\n\\nLoad 1\\n\\n\\nload2\\ndouble\\n\\nLoad 2\\n\\n\\nload3\\ndouble\\n\\nLoad 3\\n\\n\\nwindow_start\\ntime\\n\\nStart time window 1. Format HH:MM:SS\\n\\n\\nwindow_end\\ntime\\n\\nEnd time window 1. Format HH:MM:SS\\n\\n\\nwindow_start_2\\ntime\\n\\nStart time window 2. Format HH:MM:SS\\n\\n\\nwindow_end_2\\ntime\\n\\nEnd time window 2. Format HH:MM:SS.\\n\\n\\nreference\\nvarchar(254)\\n\\nVisit reference\\n\\n\\nplanned_date\\ndate\\n\\nDelivery date. Format YYYY-MM-DD\\n\\n\\norder\\nint\\n\\nPlanned delivery order\\n\\n\\ncheckout_comment\\nstring\\n\\nComments upon delivery\\n\\n\\nduration\\ntime\\n\\nService time of the visit\\n\\n\\ncheckout_comment\\nstring\\n\\nComments upon delivery\\n\\n\\nduration\\ntime\\n\\nService time\",\"textTemplate\":\"\",\"startCharIdx\":83183,\"endCharIdx\":86483,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"qYUTtJXfPMU0XznLMCQseU87EJcbrdrJfBsO0xhuQ+s=\"}","__type__":"TEXT"},"8ad4bdc4-5df2-4c4a-a16b-726b486ff52e":{"__data__":"{\"id_\":\"8ad4bdc4-5df2-4c4a-a16b-726b486ff52e\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"2862ce31-b7e8-4df7-b5cb-3da960e40cea\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"MoK2IXVnE65i/3tbmofsiEqFtH3GvgJ8GLr1STsbh4Q=\"},\"NEXT\":{\"nodeId\":\"17c12363-b442-4b35-a812-5cf7119ff3ac\",\"metadata\":{},\"hash\":\"EQGcMzZb01+4SqfUnMVm0k9aHydeojeCRrCy35sUrIo=\"}},\"text\":\"Attributes\\nType\\n\\nDescription\\n\\n\\n\\nid\\nint\\n\\nId of the visit in SimpliRoute\\n\\n\\nload\\ndouble\\n\\nLoad 1\\n\\n\\nload2\\ndouble\\n\\nLoad 2\\n\\n\\nload3\\ndouble\\n\\nLoad 3\\n\\n\\nwindow_start\\ntime\\n\\nStart time window 1. Format HH:MM:SS\\n\\n\\nwindow_end\\ntime\\n\\nEnd time window 1. Format HH:MM:SS\\n\\n\\nwindow_start_2\\ntime\\n\\nStart time window 2. Format HH:MM:SS\\n\\n\\nwindow_end_2\\ntime\\n\\nEnd time window 2. Format HH:MM:SS.\\n\\n\\nreference\\nvarchar(254)\\n\\nVisit reference\\n\\n\\nplanned_date\\ndate\\n\\nDelivery date. Format YYYY-MM-DD\\n\\n\\norder\\nint\\n\\nPlanned delivery order\\n\\n\\ncheckout_comment\\nstring\\n\\nComments upon delivery\\n\\n\\nduration\\ntime\\n\\nService time of the visit\\n\\n\\ncheckout_comment\\nstring\\n\\nComments upon delivery\\n\\n\\nduration\\ntime\\n\\nService time\\n\\n\\ncalculated_service_time\\ntime\\n\\nCalculated service time\\n\\n\\ntitle\\nvarchar(254)\\n\\nTitle of the visit\\n\\n\\ncontact_name\\nvarchar(254)\\n\\nContact name\\n\\n\\ncontact_email\\nstring\\n\\nContact e mail\\n\\n\\ncontact_phone\\nvarchar(254)\\n\\nContact phone number\\n\\n\\nnotes\\nstring\\n\\nNotes of the visit\\n\\n\\nlatitude\\ndouble\\n\\nLatitude of the visit\\n\\n\\nlongitude\\ndouble\\n\\nLongitude of the visit\\n\\n\\nstatus\\nvarchar(100)\\n\\nStatus of the visit: pending, completed, failed, partial\\n\\n\\naddress\\nvarchar(254\\n\\nAddress of the visit\\n\\n\\naccount\\nvarchar(254\\n\\nAccount name\\n\\n\\nroute\\nvarchar(254\\n\\nRoute name\\n\\n\\nstatus_changed\\ntimestamp\\n\\nDate and time of the last status change\\n\\n\\npriority_level\\ninteger\\n\\nPriority of the Visit. Ej 1 high priority, 2 second priority\\n\\n\\ncreated\\ntimestamp\\n\\nCreation time of the visit.\\n\\n\\nmodified\\ntimestamp\\n\\nTime of the last modification of the visit.\\n\\n\\nestimated_time_arrival\\ntime\\n\\nEstimated time of arrival for the visit\\n\\n\\nestimated_time_departure\\ntime\\n\\nEstimated time of departure from the visit.\\n\\n\\ntracking_id\\nvarchar(254)\\n\\nId of tracking\\n\\n\\nsignature\\nvarchar(100)\\n\\nAddress where the signature is stored.\\n\\n\\ncheckin_time\\ntimestamp\\n\\nArrival time for the visit (by GPS driver).\\n\\n\\ncheckin_latitude\\ndouble\\n\\nLatitude of arrival at the visit\\n\\n\\ncheckin_longitude\\ndoube\\n\\nLongitude of arrival at the visit\\n\\n\\ncheckout_observation\\nuuid\\n\\nId of the observation selected at checkout\\n\\n\\ncheckout_latitude\\ndouble\\n\\nCheckout latitude\\n\\n\\ncheckout_longitude\\ndouble\\n\\nCheckout longitude\\n\\n\\ncheckout_time\\ntimestamp\\n\\nCheckout date and time\\n\\n\\non_its_way\\ntimestamp\\n\\nDate and time when “On its way” was marked.\\n\\n\\ngeocode_alert\\n\\n\\nAlert when georeferencing the addressWebhook Checkout detailed\\nSimpliRoute can send detailed information about the visit at the time of checkout through a POST method call to a webservice provided by the clients, the information available is described in the following table (not necessarily in that order).The webhook expects to get a response with code 200, it will retry every 30 seconds with a maximum of 3 attempts.Example \\n\\n{\\n    \\\"load\\\": 50.0,\\n    \\\"window_start\\\": \\\"09:00:00\\\",\\n    \\\"reference\\\": \\\"96018725010003\\\",\\n    \\\"planned_date\\\": \\\"2020-09-02\\\",\\n    \\\"has_alert\\\": false,\\n    \\\"address\\\": \\\"SANTA MARIA 2670, PROVIDENCIA, Santiago\\\",\\n    \\\"load_3\\\": 0.0,\\n    \\\"load_2\\\": 0.0,\\n    \\\"programmed_date\\\": null,\\n    \\\"window_end\\\": \\\"19:00:00\\\",\\n    \\\"postal_code\\\": null,\\n    \\\"longitude\\\": \\\"-70.609643\\\",\\n    \\\"duration\\\": \\\"0:20:00\\\",\\n    \\\"status_changed\\\": \\\"2020-09-02 22:36:12.886508+00:00\\\",\\n    \\\"contact_name\\\": \\\"Paulina Mu\\\\u00f1oz\\\",\\n    \\\"id\\\": 44678051,\\n    \\\"window_start_2\\\": \\\"23:59:00\\\",\\n    \\\"visit_type\\\": null,\\n    \\\"title\\\": \\\"CONFITERIA SAN RODRIGO\\\",\\n    \\\"pictures\\\": [\\n    \\\"https://simpli-visit-images-dev.s3.amazonaws.com/visit-pictures/2020/09/02/vi93grwrv.jpg\\\"\\n    ],\\n    \\\"checkout_longitude\\\": \\\"-122.406417\\\",\\n    \\\"priority\\\": false,\\n    \\\"checkout_observation\\\": null,\\n    \\\"latitude\\\": \\\"-33.416713\\\",\\n    \\\"contact_phone\\\": \\\"967603803\\\",\\n    \\\"status\\\": \\\"completed\\\",\\n    \\\"estimated_time_departure\\\": \\\"09:37:00\\\",\\n    \\\"route\\\": {\\n        \\\"comment\\\": \\\"Comentario\\\",\",\"textTemplate\":\"\",\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"u2g/coEBtYNS84PqbsX7YUpQAj5Fs7111/rh//bKQE4=\"}","__type__":"TEXT"},"17c12363-b442-4b35-a812-5cf7119ff3ac":{"__data__":"{\"id_\":\"17c12363-b442-4b35-a812-5cf7119ff3ac\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"8ad4bdc4-5df2-4c4a-a16b-726b486ff52e\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"4rme6M5MIKVvkryJcp8FeKM0++06Tvwakr8yux4u4aM=\"},\"NEXT\":{\"nodeId\":\"54577f93-6199-443d-9136-3fc8d7f535ad\",\"metadata\":{},\"hash\":\"ElPOT5zw9RW+BzR6TzugCshZZThVsDOC5/TvotP+Ys4=\"}},\"text\":\"\\\"contact_name\\\": \\\"Paulina Mu\\\\u00f1oz\\\",\\n    \\\"id\\\": 44678051,\\n    \\\"window_start_2\\\": \\\"23:59:00\\\",\\n    \\\"visit_type\\\": null,\\n    \\\"title\\\": \\\"CONFITERIA SAN RODRIGO\\\",\\n    \\\"pictures\\\": [\\n    \\\"https://simpli-visit-images-dev.s3.amazonaws.com/visit-pictures/2020/09/02/vi93grwrv.jpg\\\"\\n    ],\\n    \\\"checkout_longitude\\\": \\\"-122.406417\\\",\\n    \\\"priority\\\": false,\\n    \\\"checkout_observation\\\": null,\\n    \\\"latitude\\\": \\\"-33.416713\\\",\\n    \\\"contact_phone\\\": \\\"967603803\\\",\\n    \\\"status\\\": \\\"completed\\\",\\n    \\\"estimated_time_departure\\\": \\\"09:37:00\\\",\\n    \\\"route\\\": {\\n        \\\"comment\\\": \\\"Comentario\\\",\\n        \\\"vehicle\\\": { \\n            \\\"id\\\": 153969, \\n            \\\"name\\\": \\\"asd\\\",\\n            \\\"reference\\\": \\\"1234FF\\\"\\n        },\\n        \\\"plan\\\": {\\n            \\\"id\\\": \\\"9ab4c716-020d-44cd-a90c-4dc88cabf884\\\",\\n            \\\"name\\\": \\\"2-09-2020 18:34:49\\\"\\n        },\\n        \\\"timestamp\\\": \\\"2020-09-02 22:36:16.361577\\\",\\n        \\\"route_start\\\": {\\n            \\\"lat\\\": \\\"-33.415468\\\",\\n            \\\"start_time\\\": \\\"2020-09-02 22:35:48.034000+00:00\\\",\\n            \\\"estimated_time_start\\\": \\\"09:00:00\\\",\\n            \\\"lon\\\": \\\"-70.667961\\\",\\n            \\\"address\\\": \\\"Avenida Domingo Santa Mar\\\\u00eda 12, Independencia, Chile\\\"\\n        },\\n        \\\"route_end\\\": {\\n            \\\"lat\\\": \\\"-33.415468\\\",\\n            \\\"lon\\\": \\\"-70.667961\\\",\\n            \\\"end_time\\\": null,\\n            \\\"estimated_time_end\\\": \\\"11:41:00\\\",\\n            \\\"address\\\": \\\"Avenida Domingo Santa Mar\\\\u00eda 12, Independencia, Chile\\\"\\n        },\\n        \\\"planned_date\\\": \\\"2020-09-02\\\",\\n        \\\"visit_ids\\\": [44678051, 44678052, 44678053, 44678054, 44678055],\\n        \\\"driver\\\": { \\\"id\\\": 75388, \\\"name\\\": \\\"f\\\" },\\n        \\\"id\\\": \\\"e05b954e-754d-4774-b91b-000859eef55b\\\"\\n    },\\n    \\\"window_end_2\\\": \\\"23:59:00\\\",\\n    \\\"extra_field_values\\\": {\\n        \\\"numero_interior\\\": null,\\n        \\\"cantidad\\\": null,\\n        \\\"codigo_postal\\\": null,\\n        \\\"entre_calles_1\\\": null,\\n        \\\"edificio\\\": null,\\n        \\\"comentarios\\\": null,\\n        \\\"remision\\\": null\\n    },\\n    \\\"checkout_time\\\": \\\"2020-09-02 22:36:12.330000+00:00\\\",\\n    \\\"geocode_alert\\\": null,\\n    \\\"contact_email\\\": \\\"diego.araneda@simplit-solutions.com\\\",\\n    \\\"current_eta\\\": null,\\n    \\\"calculated_service_time\\\": \\\"0:00:00\\\",\\n    \\\"account\\\": { \\\"id\\\": 28387, \\\"name\\\": \\\"11FabianUrrutia\\\" },\\n    \\\"priority_level\\\": 0,\\n    \\\"checkout_latitude\\\": \\\"37.785834\\\",\\n    \\\"observation\\\": {},\\n    \\\"created\\\": \\\"2020-09-02 22:35:01.950457+00:00\\\",\\n    \\\"on_its_way\\\": null,\\n    \\\"checkin_time\\\": null,\\n    \\\"modified\\\": \\\"2020-09-02 22:36:12.886496+00:00\\\",\\n    \\\"checkout_comment\\\": \\\"Comentario del conductor\\\",\\n    \\\"order\\\": 1,\\n    \\\"estimated_time_arrival\\\": \\\"09:17:00\\\",\\n    \\\"tracking_id\\\": \\\"SR99086101951738\\\",\\n    \\\"signature\\\": \\\"\\\",\\n    \\\"checkin_latitude\\\": null,\\n    \\\"fleet\\\": null,\\n    \\\"notes\\\": \\\"\\\",\\n    \\\"checkin_longitude\\\": null,\\n    \\\"plan\\\": {\\n        \\\"route_ids\\\": [\\\"e05b954e-754d-4774-b91b-000859eef55b\\\"],\\n        \\\"fleet_id\\\": null,\\n        \\\"name\\\": \\\"2-09-2020 18:34:49\\\",\",\"textTemplate\":\"\",\"startCharIdx\":88924,\"endCharIdx\":91738,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"thnbIsix6s2hhDij5oSb9/wm1Tx9yBZVxRZIQj9RZ8I=\"}","__type__":"TEXT"},"54577f93-6199-443d-9136-3fc8d7f535ad":{"__data__":"{\"id_\":\"54577f93-6199-443d-9136-3fc8d7f535ad\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"17c12363-b442-4b35-a812-5cf7119ff3ac\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"EQGcMzZb01+4SqfUnMVm0k9aHydeojeCRrCy35sUrIo=\"},\"NEXT\":{\"nodeId\":\"17f58786-3ba7-4397-a48a-bc9515e83d38\",\"metadata\":{},\"hash\":\"q3rpm6aWvbkBMZHURH6QRWSmA9GPjyzLXBq9/9lJXSY=\"}},\"text\":\"950457+00:00\\\",\\n    \\\"on_its_way\\\": null,\\n    \\\"checkin_time\\\": null,\\n    \\\"modified\\\": \\\"2020-09-02 22:36:12.886496+00:00\\\",\\n    \\\"checkout_comment\\\": \\\"Comentario del conductor\\\",\\n    \\\"order\\\": 1,\\n    \\\"estimated_time_arrival\\\": \\\"09:17:00\\\",\\n    \\\"tracking_id\\\": \\\"SR99086101951738\\\",\\n    \\\"signature\\\": \\\"\\\",\\n    \\\"checkin_latitude\\\": null,\\n    \\\"fleet\\\": null,\\n    \\\"notes\\\": \\\"\\\",\\n    \\\"checkin_longitude\\\": null,\\n    \\\"plan\\\": {\\n        \\\"route_ids\\\": [\\\"e05b954e-754d-4774-b91b-000859eef55b\\\"],\\n        \\\"fleet_id\\\": null,\\n        \\\"name\\\": \\\"2-09-2020 18:34:49\\\",\\n        \\\"end_date\\\": \\\"2020-09-02\\\",\\n        \\\"reset_day\\\": 1,\\n        \\\"id\\\": \\\"9ab4c716-020d-44cd-a90c-4dc88cabf884\\\",\\n        \\\"account_id\\\": 28387,\\n        \\\"start_date\\\": \\\"2020-09-02\\\"\\n    },\\n    \\\"invoices\\\": [{\\n        \\\"id\\\": \\\"21bbbce0-d97f-4735-bd58-afa510c20398\\\",\\n        \\\"reference\\\": \\\"08224267\\\",\\n        \\\"type\\\": \\\"bill\\\",\\n        \\\"items\\\": [{\\n            \\\"id\\\": 198907,\\n            \\\"delivery_issue\\\": null,\\n            \\\"product\\\": \\\"5be6599e-652d-4dcd-b2a2-c6899d4d63ac\\\",\\n            \\\"reference\\\": \\\"121076\\\",\\n            \\\"status\\\": \\\"completed\\\",\\n            \\\"title\\\": \\\"Nordic Zero Ginger Ale PT3,0 x 6\\\",\\n            \\\"sku\\\": \\\"121076\\\",\\n            \\\"unit_price\\\": 9335,\\n            \\\"planned_units\\\": 10,\\n            \\\"delivered_units\\\": 10,\\n            \\\"type\\\": \\\"pack\\\"\\n        },\\n        {\\n            \\\"id\\\": 198908,\\n            \\\"delivery_issue\\\": null,\\n            \\\"product\\\": null,\\n            \\\"reference\\\": \\\"122615\\\",\\n            \\\"status\\\": \\\"completed\\\",\\n            \\\"title\\\": \\\"Vital C/G PT 1,6 x 6 term.\\\",\\n            \\\"sku\\\": \\\"122615\\\",\\n            \\\"unit_price\\\": 13744,\\n            \\\"planned_units\\\": 10,\\n            \\\"delivered_units\\\": 10,\\n            \\\"type\\\": \\\"pack\\\"\\n        },\\n        {\\n            \\\"id\\\": 198909,\\n            \\\"delivery_issue\\\": {\\n                \\\"id\\\": 115,\\n                \\\"title\\\": \\\"14 Duplicado/Mal digitado\\\"\\n            },\\n            \\\"product\\\": null,\\n            \\\"reference\\\": \\\"120111\\\",\\n            \\\"status\\\": \\\"failed\\\",\\n            \\\"title\\\": \\\"Coca Cola RP2,0cc x 8\\\",\\n            \\\"sku\\\": \\\"120111\\\",\\n            \\\"unit_price\\\": 9916,\\n            \\\"planned_units\\\": 10,\\n            \\\"delivered_units\\\": 0,\\n            \\\"type\\\": \\\"box\\\"\\n        }],\\n        \\\"label\\\": null,\\n        \\\"payment_method\\\": \\\"cash\\\",\\n        \\\"payment_method_details\\\": null,\\n        \\\"status\\\": \\\"partial\\\"\\n    }]\\n}\\n\\n\\n\\n\\n\\nAttributes\\nType\\n\\nDescription\\n\\n\\n\\nid\\nint\\n\\nId of the visit in SimpliRoute\\n\\n\\nload\\ndouble\\n\\nLoad 1\\n\\n\\nload2\\ndouble\\n\\nLoad 2\\n\\n\\nload3\\ndouble\\n\\nLoad 3\\n\\n\\nwindow_start\\ntime\\n\\nStart time window 1. Format HH:MM:SS\\n\\n\\nwindow_end\\ntime\\n\\nEnd time window 1. Format HH:MM:SS\\n\\n\\nwindow_start_2\\ntime\\n\\nStart time window 2. Format HH:MM:SS\\n\\n\\nwindow_end_2\\ntime\\n\\nEnd time window 2. Format HH:MM:SS.\\n\\n\\nreference\\nvarchar(254)\\n\\nVisit reference\\n\\n\\nplanned_date\\ndate\\n\\nDelivery date. Format YYYY-MM-DD\\n\\n\\norder\\nint\\n\\nPlanned delivery order\\n\\n\\ncheckout_comment\\nstring\\n\\nComments upon delivery\\n\\n\\nduration\\ntime\\n\\nService time of the visit\\n\\n\\ncheckout_comment\\nstring\\n\\nComments upon delivery\\n\\n\\nduration\\ntime\\n\\nService time\\n\\n\\ncalculated_service_time\\ntime\\n\\nCalculated service time\\n\\n\\ntitle\\nvarchar(254)\\n\\nTitle of the visit\\n\\n\\ncontact_name\\nvarchar(254)\\n\\nContact name\\n\\n\\ncontact_email\\nstring\\n\\nContact e mail\\n\\n\\ncontact_phone\\nvarchar(254)\\n\\nContact phone number\\n\\n\\nnotes\\nstring\\n\\nNotes of the visit\\n\\n\\nlatitude\\ndouble\\n\\nLatitude of the visit\\n\\n\\nlongitude\\ndouble\\n\\nLongitude of the visit\",\"textTemplate\":\"\",\"startCharIdx\":91214,\"endCharIdx\":94511,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"iSRTinszAEcoFwGHsxUM/4FRo4xBRSu0eKnk22ResHM=\"}","__type__":"TEXT"},"17f58786-3ba7-4397-a48a-bc9515e83d38":{"__data__":"{\"id_\":\"17f58786-3ba7-4397-a48a-bc9515e83d38\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"54577f93-6199-443d-9136-3fc8d7f535ad\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"ElPOT5zw9RW+BzR6TzugCshZZThVsDOC5/TvotP+Ys4=\"},\"NEXT\":{\"nodeId\":\"4da54db5-e3ba-42a5-aec4-c8ff04b2bb1a\",\"metadata\":{},\"hash\":\"5ifER4cCf+twxX0D8E6UVo7t2WmYCcNt9gCkRpbnYb0=\"}},\"text\":\"window_start_2\\ntime\\n\\nStart time window 2. Format HH:MM:SS\\n\\n\\nwindow_end_2\\ntime\\n\\nEnd time window 2. Format HH:MM:SS.\\n\\n\\nreference\\nvarchar(254)\\n\\nVisit reference\\n\\n\\nplanned_date\\ndate\\n\\nDelivery date. Format YYYY-MM-DD\\n\\n\\norder\\nint\\n\\nPlanned delivery order\\n\\n\\ncheckout_comment\\nstring\\n\\nComments upon delivery\\n\\n\\nduration\\ntime\\n\\nService time of the visit\\n\\n\\ncheckout_comment\\nstring\\n\\nComments upon delivery\\n\\n\\nduration\\ntime\\n\\nService time\\n\\n\\ncalculated_service_time\\ntime\\n\\nCalculated service time\\n\\n\\ntitle\\nvarchar(254)\\n\\nTitle of the visit\\n\\n\\ncontact_name\\nvarchar(254)\\n\\nContact name\\n\\n\\ncontact_email\\nstring\\n\\nContact e mail\\n\\n\\ncontact_phone\\nvarchar(254)\\n\\nContact phone number\\n\\n\\nnotes\\nstring\\n\\nNotes of the visit\\n\\n\\nlatitude\\ndouble\\n\\nLatitude of the visit\\n\\n\\nlongitude\\ndouble\\n\\nLongitude of the visit\\n\\n\\nstatus\\nvarchar(100)\\n\\nStatus of the visit: pending, completed, failed, partial\\n\\n\\naddress\\nvarchar(254\\n\\nAddress of the visit\\n\\n\\naccount\\nvarchar(254)\\n\\nAccount name\\n\\n\\naccount.id\\ninteger\\n\\nId of the account\\n\\n\\naccount.name\\nvarchar(254)\\n\\nAccount namme\\n\\n\\nroute\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.id\\nvarchar(254)\\n\\nId of the route\\n\\n\\nroute.comment\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.driver\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.driver.id\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.driver.name\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.plan\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.plan.id\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.plan.name\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.route_start\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.route_start.address\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.route_start.estimated_time_start\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.route_start.lat\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.route_start.lon\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.route_start.start_time\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.route_end\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.route_end.address\\nvarchar(254)\\n\\nRoute name\\n\\n\\nroute.route_end.estimated_time_start\\nvarchar(254)\\n\\nEstimated completion time\\n\\n\\nroute.route_end.lat\\ndouble\\n\\nLatitude of the end of the route.\\n\\n\\nroute.route_end.lon\\ndouble\\n\\nLongitude of the end of the route\\n\\n\\nroute.route_end.end_time\\ntime\\n\\nReal moment of the end of the route\\n\\n\\nroute.timestamp\\ndate\\n\\nCurrent time of information request.\\n\\n\\nroute.vehicle\\njson\\n\\nContains route vehicle information.\\n\\n\\nroute.vehicle.id\\ninteger\\n\\nId of the vehicle of the route.\\n\\n\\nroute.vehicle.name\\nvarchar(254)\\n\\nRoute vehicle name.\\n\\n\\nroute.visit_ids\\narray\\n\\nArray with a list of visits corresponding to the assigned checkout route\\n\\n\\nroute.planned_date\\ndate\\nDate of the route planning.\\n\\n\\n\\nstatus_changed\\ntimestamp\\n\\nDate and time of the last status change\\n\\n\\npriority_level\\ninteger\\n\\nPriority of the Visit. Ej 1 high priority, 2 second priority\\n\\n\\ncreated\\ntimestamp\\n\\nCreation time of the visit.\\n\\n\\nmodified\\ntimestamp\\n\\nTime of the last modification of the visit.\\n\\n\\nestimated_time_arrival\\ntime\\n\\nEstimated time of arrival for the visit\\n\\n\\nestimated_time_departure\\ntime\\n\\nEstimated time of departure from the visit.\\n\\n\\ntracking_id\\nvarchar(254)\\n\\nId of tracking\\n\\n\\nsignature\\nvarchar(100)\\n\\nAddress where the signature is stored.\\n\\n\\ncheckin_time\\ntimestamp\\n\\nArrival time for the visit (by GPS driver).\\n\\n\\ncheckin_latitude\\ndouble\\n\\nLatitude of arrival at the visit\\n\\n\\ncheckin_longitude\\ndoube\\n\\nLongitude of arrival at the visit\\n\\n\\ncheckout_observation\\nuuid\\n\\nId of the observation selected at checkout\\n\\n\\ncheckout_latitude\\ndouble\\n\\nCheckout latitude\\n\\n\\ncheckout_longitude\\ndouble\\n\\nCheckout longitude\\n\\n\\ncheckout_time\\ntimestamp\\n\\nCheckout date and time\\n\\n\\non_its_way\\ntimestamp\\n\\nDate and time when “On its way” was marked.\\n\\n\\ngeocode_alert\\nvarchar (22)\\n\\nAlert when georeferencing the address\\n\\n\\npictures\\narray\\n\\nArray with urls of the photos added to the visit.\\n\\n\\npostal_code\\nvarchar (15)\\n\\nPostal code of the visit.\\n\\n\\nprogrammed_date\\ndate\\n\\nScheduled date of visit.\\n\\n\\nvisit_type\\njson\\n\\nType of the visit that is being made.\\n\\n\\nextra_fields_values\\narray\\n\\nExtra values ​​of the visit. Format: [{“key”:”value”}]\\n\\n\\ncurrent_eta\\ndate\\n\\nEstimated time of arrival to the visit.\\n\\n\\nobservation\\njson\\n\\nContains observation information added to the visit\\n\\n\\nobservation.id\\ninteger\\n\\nId of the Observation\\n\\n\\nobservation.labe\\nvarchar (254)\\n\\nObservation visit label\\n\\n\\nfleet\\njson\\n\\nInformation of the fleet to which the visit belongs.\\n\\n\\nplan\\njson\\n\\nContains plan information associated with the visit\\n\\n\\nplan.id\\nuuid\\n\\nid of the plan associated with the visit.\",\"textTemplate\":\"\",\"startCharIdx\":93744,\"endCharIdx\":98004,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"imCsQ62HDGdcG1rMhzp5KW6r/dnNgn+bsDYfhhmaRls=\"}","__type__":"TEXT"},"4da54db5-e3ba-42a5-aec4-c8ff04b2bb1a":{"__data__":"{\"id_\":\"4da54db5-e3ba-42a5-aec4-c8ff04b2bb1a\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"17f58786-3ba7-4397-a48a-bc9515e83d38\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"q3rpm6aWvbkBMZHURH6QRWSmA9GPjyzLXBq9/9lJXSY=\"},\"NEXT\":{\"nodeId\":\"e8185390-5aaf-44a6-82f2-7d4fae5711ed\",\"metadata\":{},\"hash\":\"9jyQBHT0fSjISJNer62FTOrwvgbsvJeJ9OUlCs7Bh7w=\"}},\"text\":\"geocode_alert\\nvarchar (22)\\n\\nAlert when georeferencing the address\\n\\n\\npictures\\narray\\n\\nArray with urls of the photos added to the visit.\\n\\n\\npostal_code\\nvarchar (15)\\n\\nPostal code of the visit.\\n\\n\\nprogrammed_date\\ndate\\n\\nScheduled date of visit.\\n\\n\\nvisit_type\\njson\\n\\nType of the visit that is being made.\\n\\n\\nextra_fields_values\\narray\\n\\nExtra values ​​of the visit. Format: [{“key”:”value”}]\\n\\n\\ncurrent_eta\\ndate\\n\\nEstimated time of arrival to the visit.\\n\\n\\nobservation\\njson\\n\\nContains observation information added to the visit\\n\\n\\nobservation.id\\ninteger\\n\\nId of the Observation\\n\\n\\nobservation.labe\\nvarchar (254)\\n\\nObservation visit label\\n\\n\\nfleet\\njson\\n\\nInformation of the fleet to which the visit belongs.\\n\\n\\nplan\\njson\\n\\nContains plan information associated with the visit\\n\\n\\nplan.id\\nuuid\\n\\nid of the plan associated with the visit.\\n\\n\\nplan.route_ids\\narray\\n\\nArray with id of the plan routes.\\n\\n\\nplan.fleet_id\\ninteger\\n\\nid of the fleet which the plan belongs\\n\\n\\nplan.name\\nvarchar (254)\\n\\nName of the plan\\n\\n\\nplan.end_date\\ndate\\n\\nPlan termination date.\\n\\n\\nplan.reset_day\\ninteger\\n\\nPlan reset time.\\n\\n\\nplan.account_id\\nid\\n\\nId of the account assigned to the plan\\n\\n\\nplan.start_date\\ndate\\n\\nPlan start date\\n\\n\\ninvoices\\nlist\\n\\nList of invoices of the visit. See Invoice for its fields.\\n\\n\\nOptimization\\n\\nOptimization Endpoint\\n\\n\\nhttp://optimizer.simpliroute.com/vrp/optimize/syncDue to our wide experience in route optimization, we guarantee this is the best way to create your company's delivery routes.We believe that everyday problems deserve simple solutions, which is why you now have available the API of our algorithm.Solve your logistics delivery problems in the quickest and easiest way possible.SimpliRoute gets these restrictions in consideration:\\n\\nCapacities of your vehicles.Different start and end points for your vehicles.Drivers' shifts.Time windows of your clients.And a lot more\\n\\nIn the next couple of sections, we'll go in deep detail about our API, which objects it contains and a lot of practical examples to start developing your app using our API.\",\"textTemplate\":\"\",\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"5CJ3CYcd9gV/AQsYLMnODWhyC4lUmWOM4rG33AcwZ6k=\"}","__type__":"TEXT"},"e8185390-5aaf-44a6-82f2-7d4fae5711ed":{"__data__":"{\"id_\":\"e8185390-5aaf-44a6-82f2-7d4fae5711ed\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"4da54db5-e3ba-42a5-aec4-c8ff04b2bb1a\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5ifER4cCf+twxX0D8E6UVo7t2WmYCcNt9gCkRpbnYb0=\"},\"NEXT\":{\"nodeId\":\"32c383a8-80f3-466d-8e41-ee4261e0acbd\",\"metadata\":{},\"hash\":\"impuZtV+NeGD0TblOcuyR6D8F3soMserOnhhpuTCitE=\"}},\"text\":\"plan.start_date\\ndate\\n\\nPlan start date\\n\\n\\ninvoices\\nlist\\n\\nList of invoices of the visit. See Invoice for its fields.\\n\\n\\nOptimization\\n\\nOptimization Endpoint\\n\\n\\nhttp://optimizer.simpliroute.com/vrp/optimize/syncDue to our wide experience in route optimization, we guarantee this is the best way to create your company's delivery routes.We believe that everyday problems deserve simple solutions, which is why you now have available the API of our algorithm.Solve your logistics delivery problems in the quickest and easiest way possible.SimpliRoute gets these restrictions in consideration:\\n\\nCapacities of your vehicles.Different start and end points for your vehicles.Drivers' shifts.Time windows of your clients.And a lot more\\n\\nIn the next couple of sections, we'll go in deep detail about our API, which objects it contains and a lot of practical examples to start developing your app using our API.If you have questions, you can send us an email to contact@simpliroute.com\\nOptimization Instance\\n\\nInput json\\n\\n[{\\n    \\\"vehicles\\\": [\\n        {\\n            \\\"ident\\\": \\\"Vehicle 1\\\",\\n            \\\"location_start\\\": {\\n                \\\"ident\\\": \\\"warehouse A\\\",\\n                \\\"lat\\\": -33.4233926,\\n                \\\"lon\\\": -70.6104996\\n            },\\n            \\\"location_end\\\": {\\n                \\\"ident\\\": \\\"warehouse C\\\",\\n                \\\"lat\\\": -33.4233926,\\n                \\\"lon\\\": -70.6104996\\n            },\\n            \\\"capacity\\\": 3500,\\n            \\\"capacity_2\\\": 3500,\\n            \\\"capacity_3\\\": 3500,\\n            \\\"shift_start\\\": \\\"9:00\\\",\\n            \\\"shift_end\\\": \\\"22:00\\\",\\n            \\\"skills\\\": []\\n        },\\n        {\\n            \\\"ident\\\": \\\"Vehicle 2\\\",\\n            \\\"location_start\\\": {\\n                \\\"ident\\\": \\\"warehouse B\\\",\\n                \\\"lat\\\": -33.4233926,\\n                \\\"lon\\\": -70.6104996\\n            },\\n            \\\"location_end\\\": {\\n                \\\"ident\\\": \\\"warehouse C\\\",\\n                \\\"lat\\\": -33.4233926,\\n                \\\"lon\\\": -70.6104996\\n            },\\n            \\\"capacity\\\": 3500,\\n            \\\"capacity_2\\\": 3500,\\n            \\\"capacity_3\\\": 3500,\\n            \\\"shift_start\\\": \\\"9:00\\\",\\n            \\\"shift_end\\\": \\\"22:00\\\",\\n            \\\"skills\\\": []\\n        }\\n    ],\\n    \\\"nodes\\\": [\\n        {\\n            \\\"ident\\\": \\\"El Salto 4875\\\",\\n            \\\"lat\\\": -33.3887,\\n            \\\"lon\\\": -70.62304,\\n            \\\"window_start\\\": \\\"09:00\\\",\\n            \\\"window_end\\\": \\\"17:00\\\",\\n            \\\"window_start_2\\\": \\\"19:00\\\",\\n            \\\"window_end_2\\\": \\\"22:00\\\",\\n            \\\"duration\\\": 15\\n        },\\n        {\\n            \\\"ident\\\": \\\"Avenida Del Valle 7\\\",\\n            \\\"lat\\\": -33.39124,\\n            \\\"lon\\\": -70.61387,\\n            \\\"load\\\": 2530,\\n            \\\"window_start\\\": \\\"9:00\\\",\\n            \\\"window_end\\\": \\\"11:00\\\",\\n            \\\"window_start_2\\\": \\\"19:00\\\",\\n            \\\"window_end_2\\\": \\\"22:00\\\",\\n            \\\"duration\\\": 15\\n        },\\n        {\\n            \\\"ident\\\": \\\"Larrain 5862\\\",\\n            \\\"lat\\\": -33.45066,\\n            \\\"lon\\\": -70.54915,\\n            \\\"load\\\": 77,\\n            \\\"window_start\\\": \\\"09:00\\\",\\n            \\\"window_end\\\": \\\"17:00\\\",\\n            \\\"window_start_2\\\": \\\"19:00\\\",\\n            \\\"window_end_2\\\": \\\"22:00\\\",\\n            \\\"priority_level\\\": 1,\\n\\n            \\\"duration\\\": 10\\n        }\\n    ],\\n    \\\"balance\\\": true,\\n    \\\"all_vehicles\\\": false,\\n    \\\"join\\\": true,\\n    \\\"open_ended\\\": false,\\n    \\\"single_tour\\\": true,\\n    \\\"fmv\\\": 1.0\\n}]\\n\\nOur API receives JSON object as input.The Optimization json can be divided in this sections:\\n\\nVehicles: Array of vehicles with their information to be optimized with our API.Nodes: Array of deliveries with their constraints to be routed with our API.Optimization options: Different optimizations criteria to adjust the optimization to your requirements.In the following sections, we'll discuss more in detail each of this objects.Also, we'll show a few examples of how to make a request to our API with different use-cases to make easier for you to start coding with SimpliRoute.\",\"textTemplate\":\"\",\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"RiqfT/83VL+WyUbuGwzsmlyk2SIn0U3J4i/GitTyXwU=\"}","__type__":"TEXT"},"32c383a8-80f3-466d-8e41-ee4261e0acbd":{"__data__":"{\"id_\":\"32c383a8-80f3-466d-8e41-ee4261e0acbd\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"e8185390-5aaf-44a6-82f2-7d4fae5711ed\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"9jyQBHT0fSjISJNer62FTOrwvgbsvJeJ9OUlCs7Bh7w=\"},\"NEXT\":{\"nodeId\":\"b0a58491-2146-471e-a2c3-8af7de790370\",\"metadata\":{},\"hash\":\"Q85P+GYWx5NV6P1zP7txF8r+m5kTeFT/cNzhRJaEeYo=\"}},\"text\":\"The Optimization json can be divided in this sections:\\n\\nVehicles: Array of vehicles with their information to be optimized with our API.Nodes: Array of deliveries with their constraints to be routed with our API.Optimization options: Different optimizations criteria to adjust the optimization to your requirements.In the following sections, we'll discuss more in detail each of this objects.Also, we'll show a few examples of how to make a request to our API with different use-cases to make easier for you to start coding with SimpliRoute.Vehicles\\n\\nVehicle's object example:\\n\\n[{\\n    \\\"ident\\\": \\\"Vehicle 1\\\",\\n    \\\"location_start\\\": {\\n        \\\"ident\\\": \\\"warehouse B\\\",\\n        \\\"lat\\\": -33.4233926,\\n        \\\"lon\\\": -70.6104996\\n    },\\n    \\\"location_end\\\": {\\n        \\\"ident\\\": \\\"warehouse C\\\",\\n        \\\"lat\\\": -33.345523,\\n        \\\"lon\\\": -70.456992\\n    },\\n    \\\"capacity\\\": 3500,\\n    \\\"capacity_2\\\": 3500,\\n    \\\"capacity_3\\\": 3500,\\n    \\\"shift_start\\\": \\\"09:00\\\",\\n    \\\"shift_end\\\": \\\"18:00\\\",\\n    \\\"refill\\\": 30,     \\n    \\\"skills\\\": [\\n        \\\"47076\\\"\\n        \\\"47054\\\"\\n    ],\\n    \\\"zones\\\": [\\n        14730\\n    ],\\n    \\\"max_tour_duration\\\": 40,\\n    \\\"cost\\\": 100,\\n    \\\"min_load\\\": 0,\\n    \\\"min_load_2\\\": 0,\\n    \\\"min_load_3\\\": 0,\\n    \\\"max_visit\\\": 35,\\n    \\\"max_number_of_routes\\\": 2\\n}]\\n\\nWhen using our API, the first object that you have to understand is the vehicle object.In our API, a vehicle is any moving device in your city, then if you are working with fleet, field services or sales people, all of them should be created as a \\\"vehicle\\\" in our API.Each of the attributes are described below:\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nident\\nMandatory\\nString\\nUnique identifier for the object.\\n\\n\\nlocation_start\\nMandatory\\nObject\\nLocation of the vehicle when the optimization was called\\n\\n\\nlocation_end\\nOptional\\nObject\\nLocation where the vehicle should end its route\\n\\n\\ncapacity\\nOptional\\nFloat\\nVehicle's capacity load\\n\\n\\ncapacity_2\\nOptional\\nFloat\\nVehicle's second capacity load\\n\\n\\ncapacity_3\\nOptional\\nFloat\\nVehicle's third capacity load\\n\\n\\nshift_start\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). When the vehicle's shift starts.\\n\\n\\nshift_end\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). When the vehicle's shift ends.\\n\\n\\nskills\\nOptional\\nString array\\nSkills that the vehicles supports. Deliveries must have skills in order to be used.\\n\\n\\nrefill\\nOptional\\nInteger\\nMinutes that takes to refill the vehicle when it returns to the depot before starts a new route.\\n\\n\\nzones\\nOptional\\nInteger array\\nIdentifiers of the zones to which the vehicle belongs. A vehicle can belong to more than one zone.\\n\\n\\nmax_tour_duration\\nOptional\\nInteger\\nMaximum minutes that the vehicle is allowed to make all its routes.\\n\\n\\nmin_load\\nOptional\\nInteger\\nPercentage of minimum load associated with capacity attribute that the vehicle must have to go out on the road.\\n\\n\\nmin_load_2\\nOptional\\nInteger\\nPercentage of minimum load associated with capacity_2 attribute that the vehicle must have to go out on the road.\\n\\n\\nmin_load_3\\nOptional\\nInteger\\nPercentage of minimum load associated with capacity_3 attribute that the vehicle must have to go out on the road.\\n\\n\\nmax_visit\\nOptional\\nInteger\\nMaximum number of visits that the routes carried out by the vehicle can have.\\n\\n\\nmax_number_of_routes\\nOptional\\nInteger\\nMaximum number of routes that each vehicle can have. If the value is 0 or null, the maximum is infinity.\\n\\n\\nopen_start\\nOptional\\nBoolean\\nWhen true, this feature allows vehicles to begin their routes from locations other than the depot. It's false by default.\\n\\n\\nopen_end\\nOptional\\nBoolean\\nWhen true, this feature allows vehicles to end their routes in locations other than the depot. It's false by default. If open_ended is true, it overwrites this parameter.\",\"textTemplate\":\"\",\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"wWlUCqqSD/AG2IsS35qTRfHVjCfGh53jI7ZtyqXpDkI=\"}","__type__":"TEXT"},"b0a58491-2146-471e-a2c3-8af7de790370":{"__data__":"{\"id_\":\"b0a58491-2146-471e-a2c3-8af7de790370\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"32c383a8-80f3-466d-8e41-ee4261e0acbd\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"impuZtV+NeGD0TblOcuyR6D8F3soMserOnhhpuTCitE=\"},\"NEXT\":{\"nodeId\":\"2f82f283-18bb-45c5-b648-f34680029790\",\"metadata\":{},\"hash\":\"W8tR8MttFfDDpCKRrna6U4VPif8wQseDXnExkFNZegc=\"}},\"text\":\"min_load_2\\nOptional\\nInteger\\nPercentage of minimum load associated with capacity_2 attribute that the vehicle must have to go out on the road.\\n\\n\\nmin_load_3\\nOptional\\nInteger\\nPercentage of minimum load associated with capacity_3 attribute that the vehicle must have to go out on the road.\\n\\n\\nmax_visit\\nOptional\\nInteger\\nMaximum number of visits that the routes carried out by the vehicle can have.\\n\\n\\nmax_number_of_routes\\nOptional\\nInteger\\nMaximum number of routes that each vehicle can have. If the value is 0 or null, the maximum is infinity.\\n\\n\\nopen_start\\nOptional\\nBoolean\\nWhen true, this feature allows vehicles to begin their routes from locations other than the depot. It's false by default.\\n\\n\\nopen_end\\nOptional\\nBoolean\\nWhen true, this feature allows vehicles to end their routes in locations other than the depot. It's false by default. If open_ended is true, it overwrites this parameter.\\n\\n\\nDeliveries\\n\\nDelivery's object example:\\n\\n[{\\n    \\\"nodes\\\": [\\n        {\\n            \\\"ident\\\": \\\"Delivery 1\\\",\\n            \\\"group_id\\\": \\\"Delivery 1\\\",\\n            \\\"lat\\\": -33.3887,\\n            \\\"lon\\\": -70.62304\\n        },\\n        {\\n            \\\"ident\\\": \\\"Delivery 2\\\",\\n            \\\"group_id\\\": \\\"Delivery 1\\\",\\n            \\\"address\\\": \\\"Ricardo Flores Magon # 28. Nave 12. Parque industrial San Jeronimo Caleras. San Jeronimo Caleras, Pue.\\\",\\n            \\\"lat\\\": -33.39124,\\n            \\\"lon\\\": -70.61387,\\n            \\\"load\\\": 253.1,\\n            \\\"load_2\\\": 2.0,\\n            \\\"load_2\\\": 3.2,\\n            \\\"window_start\\\": \\\"09:00\\\",\\n            \\\"window_end\\\": \\\"11:00\\\",\\n            \\\"window_start_2\\\": \\\"13:00\\\",\\n            \\\"window_end_2\\\": \\\"15:00\\\",\\n            \\\"duration\\\": 15,\\n            \\\"skills_required\\\": [\\n                30744,\\n                47593\\n            ],\\n            \\\"skills_optional\\\": [\\n                30567\\n            ],\\n            \\\"priority_level\\\": 2,\\n            \\\"zones\\\": [\\n                14730\\n            ],\\n            \\\"open_start\\\": true,\\n            \\\"open_end\\\": false\\n        }\\n    ]\\n}]\\n\\nA delivery is something that your vehicle has to do in the street: delivery orders, sales opportunities, field service orders, etc.\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nident\\nMandatory\\nString\\nUnique identifier for the object.\\n\\n\\nlat\\nMandatory\\nFloat\\nLatitude of the delivery's location.\\n\\n\\nlon\\nMandatory\\nFloat\\nLongitude of the delivery's location.\\n\\n\\naddress\\nOptional\\nString\\nAddress of the delivery. If there are lat and lon attributes, it will privilege those fields over this\\n\\n\\ngroup_id\\nOptional\\nString\\nIdentifier of the delivery to which this delivery will be linked when using join_v2 (see optimization options).\\n\\n\\nload\\nOptional\\nFloat\\nLoad of this delivery. Must be on same units as vehicle's load.\\n\\n\\nload_2\\nOptional\\nFloat\\nSecondary load of this delivery. Must be on same units as vehicle's load 2.\\n\\n\\nload_3\\nOptional\\nFloat\\nThird load of this delivery. Must be on same units as vehicle's load 3.\\n\\n\\nwindow_start\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). Minimum time this delivery can be attended.\\n\\n\\nwindow_end\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). Maximum time this delivery can be attended.\\n\\n\\nwindow_start_2\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). Secondary minimum time this delivery can be attended. (Ex: I can visit this place from 10:00 to 12:00 and from 15:00 to 19:00)\\n\\n\\nwindow_end_2\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). Secondary maximum time this delivery can be attended.\\n\\n\\nduration\\nOptional\\nInteger\\nMinutes that the vehicle will stay on the delivery.\\n\\n\\nskills_required\\nOptional\\nInteger array\\nSkills this delivery needs to be fulfilled. Only the vehicles who have all of these skills will attend the delivery.\\n\\n\\nskills_optional\\nOptional\\nInteger array\\nSkills this delivery needs to be fulfilled. Only the vehicles who have at least one of these skills will attend the delivery.\\n\\n\\npriority_level\\nOptional\\nInteger\\nUsed to indicate this delivery is more important than others. Possible values are 1: First of the day, 2: Last of its route, 3: High Priority, 4: Medium Priority, 5: Low Priority.\\n\\n\\nzones\\nOptional\\nInteger array\\nIdentifier of the zone to which this delivery belongs. Only vehicles that have this area will attend the delivery.\",\"textTemplate\":\"\",\"startCharIdx\":104440,\"endCharIdx\":108594,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"VSyW57E39bQKgQA+OntnsDao67SitxhRC5CJzptgbN4=\"}","__type__":"TEXT"},"2f82f283-18bb-45c5-b648-f34680029790":{"__data__":"{\"id_\":\"2f82f283-18bb-45c5-b648-f34680029790\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"b0a58491-2146-471e-a2c3-8af7de790370\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"Q85P+GYWx5NV6P1zP7txF8r+m5kTeFT/cNzhRJaEeYo=\"},\"NEXT\":{\"nodeId\":\"3396de2e-c4b0-42c9-8a5e-c41651ecc243\",\"metadata\":{},\"hash\":\"WCHJ3kGKqxFq1ez6XHI+FU6nn2liy/vFke6sEHvfB8Y=\"}},\"text\":\"window_end_2\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). Secondary maximum time this delivery can be attended.\\n\\n\\nduration\\nOptional\\nInteger\\nMinutes that the vehicle will stay on the delivery.\\n\\n\\nskills_required\\nOptional\\nInteger array\\nSkills this delivery needs to be fulfilled. Only the vehicles who have all of these skills will attend the delivery.\\n\\n\\nskills_optional\\nOptional\\nInteger array\\nSkills this delivery needs to be fulfilled. Only the vehicles who have at least one of these skills will attend the delivery.\\n\\n\\npriority_level\\nOptional\\nInteger\\nUsed to indicate this delivery is more important than others. Possible values are 1: First of the day, 2: Last of its route, 3: High Priority, 4: Medium Priority, 5: Low Priority.\\n\\n\\nzones\\nOptional\\nInteger array\\nIdentifier of the zone to which this delivery belongs. Only vehicles that have this area will attend the delivery.\\n\\n\\nOptimization options\\nSimpliRoute has some additional features allowing you to configure the optimization in the best possible way that fits your company.\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\ncountry\\nMandatory\\nString\\nISO code referring to the country where the delivery locations are located.\\n\\n\\nbalance\\nOptional\\nBoolean\\nDefault: False. If true, there will be an enforced balance between all the vehicles, in time and number of locations for the algorithm procedure\\n\\n\\nfmv\\nOptional\\nFloat\\nDefault: 2.0, Speed traffic factor. It could be 1.0 = Low Traffic, 1.5 = Medium Traffic, 2.0 = High Traffic or 3.0 = Intense Traffic.\\n\\n\\nall_vehicles\\nOptional\\nBoolean\\nDefault: False. If true, the algorithm will use all the selected vehicles. If false, will minimize the number of vehicles.\\n\\n\\nopen_ended\\nOptional\\nBoolean\\nDefault: False. If true, the route will be created assuming the vehicle won't return the depot at the end of the day.\\n\\n\\nsingle_tour\\nOptional\\nBoolean\\nDefault: False. If true, all vehicles will have only one route.\\n\\n\\njoin_v2\\nOptional\\nBoolean\\nDefault: False.  If true, the algorithm performs a union of visits with the same address, respecting the capacity of the vehicles, and seeking to minimize the number of vehicles that have similar visits.\\n\\n\\nbeauty\\nOptional\\nBoolean\\nDefault: False. If true, the algorithm groups visits into clusters and creates routes within these clusters.\\n\\n\\nfmb\\nOptional\\nInteger\\nDefault: 5. Clustering factor. It could be 1.0 = Zero Clustering, 2.0 = Low Clustering, 3.0 = Medium Clustering, 4.0 = High Clustering  or  5.0 = Intense Clustering\\n\\n\\nuse_euclidean_distance\\nOptional\\nBoolean\\nDefault: False. If true, it is considered as the distance between two locations, the direct line that joins both nodes.\\n\\n\\nautoZone\\nOptional\\nBoolean\\nDefault: False. If true, the algorithm assigns the vehicles that serve each specified zone in the visits.\\n\\n\\nintensive_intra\\nOptional\\nBoolean\\nDefault: False.  If true, the algorithm performs a more intensive search on the solution space. Response time may increase.\\n\\n\\nopen_routes_logic\\nOptional\\nBoolean\\nDefault: False. If true, the route will be created assuming the vehicle won't return the depot at the end of the day, BUT it does.\\n\\n\\nvehicle_capacities_increment\\nOptional\\nInteger\\nDefault: 0. Percentage increase in load capacity of all vehicles.\\n\\n\\nvehicle_journey_extention\\nOptional\\nInteger\\nDefault: 0. Percentage of increase in the time window of all vehicles.\\n\\n\\nenable_soft_window\\nOptional\\nBoolean\\nDefault: False. If true, it allows not respecting the deliveries time windows, but seeking to minimize the total delay time.\\n\\n\\nisReorder\\nOptional\\nBoolean\\nDefault: False. When enabled, this feature will try to insert all nodes, considering only the first time windows. If this is not achievable, it will try again ignoring the time window constraints.\\n\\n\\nradial_routing\\nOptional\\nInteger\\nDefault: 0. When its value is 1, each route will start close to the depot and end far from the depot. When its value is -1, each route will start far from the depot and end close to the depot. When its value is 0, the option is disabled. Other values are not accepted.\",\"textTemplate\":\"\",\"startCharIdx\":107715,\"endCharIdx\":111718,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"KVpD3tzIcetZs10ljg96WJUCxMtMIl+7pEG4gR02gQI=\"}","__type__":"TEXT"},"3396de2e-c4b0-42c9-8a5e-c41651ecc243":{"__data__":"{\"id_\":\"3396de2e-c4b0-42c9-8a5e-c41651ecc243\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"2f82f283-18bb-45c5-b648-f34680029790\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"W8tR8MttFfDDpCKRrna6U4VPif8wQseDXnExkFNZegc=\"},\"NEXT\":{\"nodeId\":\"06ef87cf-65a1-476f-873a-06f53ba34af2\",\"metadata\":{},\"hash\":\"PIsgicanzIbeThtCywJzynMPsdkjsFtHB4UpQ8iNIAY=\"}},\"text\":\"vehicle_journey_extention\\nOptional\\nInteger\\nDefault: 0. Percentage of increase in the time window of all vehicles.\\n\\n\\nenable_soft_window\\nOptional\\nBoolean\\nDefault: False. If true, it allows not respecting the deliveries time windows, but seeking to minimize the total delay time.\\n\\n\\nisReorder\\nOptional\\nBoolean\\nDefault: False. When enabled, this feature will try to insert all nodes, considering only the first time windows. If this is not achievable, it will try again ignoring the time window constraints.\\n\\n\\nradial_routing\\nOptional\\nInteger\\nDefault: 0. When its value is 1, each route will start close to the depot and end far from the depot. When its value is -1, each route will start far from the depot and end close to the depot. When its value is 0, the option is disabled. Other values are not accepted.\\n\\n\\n\\nExample - Basic Optimization JSON input\\n\\n{\\n    \\\"vehicles\\\": [\\n        {\\n            \\\"ident\\\": \\\"Vehicle 1\\\",\\n            \\\"location_start\\\": {\\n                \\\"ident\\\": \\\"depot_1_start\\\",\\n                \\\"lat\\\": -33.4233926,\\n                \\\"lon\\\": -70.6104996\\n            }\\n        }\\n    ],\\n    \\\"nodes\\\": [\\n        {\\n            \\\"ident\\\": \\\"1\\\",\\n            \\\"lat\\\": -33.436135,\\n            \\\"lon\\\": -70.6509688\\n        },\\n        {\\n            \\\"ident\\\": \\\"2\\\",\\n            \\\"lat\\\": -33.4334123,\\n            \\\"lon\\\": -70.653234\\n        },\\n        {\\n            \\\"ident\\\": \\\"3\\\",\\n            \\\"lat\\\": -33.333413,\\n            \\\"lon\\\": -70.5534688\\n        }\\n    ]\\n}\",\"textTemplate\":\"\",\"startCharIdx\":110913,\"endCharIdx\":112351,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"aVmJRozCZN/DDJQB2iuKpBZCgnIBrg6TVbQxG/R9voc=\"}","__type__":"TEXT"},"06ef87cf-65a1-476f-873a-06f53ba34af2":{"__data__":"{\"id_\":\"06ef87cf-65a1-476f-873a-06f53ba34af2\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"3396de2e-c4b0-42c9-8a5e-c41651ecc243\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"WCHJ3kGKqxFq1ez6XHI+FU6nn2liy/vFke6sEHvfB8Y=\"},\"NEXT\":{\"nodeId\":\"53095075-7106-48f6-94f8-ef9c474416bf\",\"metadata\":{},\"hash\":\"NSYHpI3+vBWOuqZAcdMcGr8lV+4YXADgojbGuJtlNmo=\"}},\"text\":\"Example - Basic Optimization JSON input\\n\\n{\\n    \\\"vehicles\\\": [\\n        {\\n            \\\"ident\\\": \\\"Vehicle 1\\\",\\n            \\\"location_start\\\": {\\n                \\\"ident\\\": \\\"depot_1_start\\\",\\n                \\\"lat\\\": -33.4233926,\\n                \\\"lon\\\": -70.6104996\\n            }\\n        }\\n    ],\\n    \\\"nodes\\\": [\\n        {\\n            \\\"ident\\\": \\\"1\\\",\\n            \\\"lat\\\": -33.436135,\\n            \\\"lon\\\": -70.6509688\\n        },\\n        {\\n            \\\"ident\\\": \\\"2\\\",\\n            \\\"lat\\\": -33.4334123,\\n            \\\"lon\\\": -70.653234\\n        },\\n        {\\n            \\\"ident\\\": \\\"3\\\",\\n            \\\"lat\\\": -33.333413,\\n            \\\"lon\\\": -70.5534688\\n        }\\n    ]\\n}\\n\\n\\nJSON output\\n\\n{\\n    \\\"vehicles\\\": [\\n        {\\n            \\\"ident\\\": \\\"Vehicle 1\\\",\\n            \\\"tours\\\": [\\n                {\\n                    \\\"nodes\\\": [\\n                        {\\n                            \\\"arrival\\\": \\\"00:00:00\\\",\\n                            \\\"ident\\\": \\\"depot_1_start\\\",\\n                            \\\"lon\\\": -70.6104996,\\n                            \\\"departure\\\": \\\"00:00:00\\\",\\n                            \\\"lat\\\": -33.4233926,\\n                            \\\"order\\\": 0,\\n                            \\\"priority\\\": null,\\n                            \\\"load\\\": 0,\\n                            \\\"load_2\\\": 0,\\n                            \\\"load_3\\\": 0\\n                        },\\n                        {\\n                            \\\"load\\\": 0,\\n                            \\\"arrival\\\": \\\"00:17:00\\\",\\n                            \\\"ident\\\": \\\"3\\\",\\n                            \\\"lon\\\": -70.5534688,\\n                            \\\"departure\\\": \\\"00:17:00\\\",\\n                            \\\"lat\\\": -33.333413,\\n                            \\\"order\\\": 1,\\n                            \\\"priority\\\": 0,\\n                            \\\"load\\\": 0,\\n                            \\\"load_2\\\": 0,\\n                            \\\"load_3\\\": 0\\n                        },\\n                        {\\n                            \\\"load\\\": 0,\\n                            \\\"arrival\\\": \\\"00:39:00\\\",\\n                            \\\"ident\\\": \\\"2\\\",\\n                            \\\"lon\\\": -70.653234,\\n                            \\\"departure\\\": \\\"00:39:00\\\",\\n                            \\\"lat\\\": -33.4334123,\\n                            \\\"order\\\": 2,\\n                            \\\"priority\\\": 0,\\n                            \\\"load\\\": 0,\\n                            \\\"load_2\\\": 0,\\n                            \\\"load_3\\\": 0\\n                        },\\n                        {\\n                            \\\"load\\\": 0,\\n                            \\\"arrival\\\": \\\"00:40:00\\\",\\n                            \\\"ident\\\": \\\"1\\\",\\n                            \\\"lon\\\": -70.6509688,\\n                            \\\"departure\\\": \\\"00:40:00\\\",\\n                            \\\"lat\\\": -33.436135,\\n                            \\\"order\\\": 3,\\n                            \\\"priority\\\": 0,\\n                            \\\"load\\\": 0,\\n                            \\\"load_2\\\": 0,\\n                            \\\"load_3\\\": 0\\n                        },\\n                        {\\n                            \\\"arrival\\\": \\\"01:42:00\\\",\\n                            \\\"ident\\\": \\\"depot_1_start\\\",\\n                            \\\"lon\\\": -70.6104996,\\n                            \\\"departure\\\": \\\"01:42:00\\\",\\n                            \\\"lat\\\": -33.4233926,\\n                            \\\"order\\\": 4,\\n                            \\\"priority\\\": null,\\n                            \\\"load\\\": 0,\\n                            \\\"load_2\\\": 0,\\n                            \\\"load_3\\\": 0\\n                        }\\n                    ]\\n                }\\n            ]\\n        }\\n    ],\\n    \\\"num_vehicles_used\\\": 1,\\n    \\\"filteredClientsNodes\\\": [],\\n    \\\"unattendedClientsNodes\\\": []\\n}\\n\\nThe most basic example of routing optimization using our API is when there's only one depot, from which all of your vehicles will start and end the day.\\nAdditionally, on every location your vehicles need to visit there are no restrictions regarding load or time windows. This happens usually on cases like:\\n\\nDelivery of letters and documents\\nFood delivery with vehicles on which load restrictions are not an issue\\n\\nYou can see an input and output JSON example on the right.\\nIn this example there are two relevant entities: vehicles and nodes. The first of them must contain:\\n\\n\\n{\\n\\\"vehicles\\\": [\\n{\\n\\\"ident\\\": \\\"Vehicle 1\\\",\\n\\\"location_start\\\": {\\n\\\"ident\\\": \\\"depot_1_start\\\",\\n\\\"lat\\\": -33.4233926,\\n\\\"lon\\\": -70.6104996\\n}\\n}\\n]\\n}\\n\\n\\n\\\"Ident\\\" is required and is the vehicle's id. The object \\\"location_start\\\" is the location from where the vehicle will begin its daily operation. Since in this example we didn't define a \\\"location_end\\\" our algorithm will assume that the vehicle will end its day on \\\"location_start\\\".\\nIn the nodes case, you must define the following:\\n\\n\\n{\\n\\\"ident\\\": \\\"8\\\",\\n\\\"lat\\\": -33.438943,\\n\\\"lon\\\": -70.655193\\n}\",\"textTemplate\":\"\",\"startCharIdx\":111722,\"endCharIdx\":116402,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"ZGZAqXmAWzAZTiJx146xnQWOLrdZeOFE0wzUTLk4zNg=\"}","__type__":"TEXT"},"53095075-7106-48f6-94f8-ef9c474416bf":{"__data__":"{\"id_\":\"53095075-7106-48f6-94f8-ef9c474416bf\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"06ef87cf-65a1-476f-873a-06f53ba34af2\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"PIsgicanzIbeThtCywJzynMPsdkjsFtHB4UpQ8iNIAY=\"},\"NEXT\":{\"nodeId\":\"99bff608-c83a-47a1-883f-e06e6e9f5a23\",\"metadata\":{},\"hash\":\"5hCYPv0ReMm8pPILY5qMqjIggl8i/56e9F7a9mas8rI=\"}},\"text\":\"{\\n\\\"vehicles\\\": [\\n{\\n\\\"ident\\\": \\\"Vehicle 1\\\",\\n\\\"location_start\\\": {\\n\\\"ident\\\": \\\"depot_1_start\\\",\\n\\\"lat\\\": -33.4233926,\\n\\\"lon\\\": -70.6104996\\n}\\n}\\n]\\n}\\n\\n\\n\\\"Ident\\\" is required and is the vehicle's id. The object \\\"location_start\\\" is the location from where the vehicle will begin its daily operation. Since in this example we didn't define a \\\"location_end\\\" our algorithm will assume that the vehicle will end its day on \\\"location_start\\\".\\nIn the nodes case, you must define the following:\\n\\n\\n{\\n\\\"ident\\\": \\\"8\\\",\\n\\\"lat\\\": -33.438943,\\n\\\"lon\\\": -70.655193\\n}\\n\\n\\nWe use \\\"ident\\\" as an ID for the visit, and \\\"lat\\\" and \\\"lon\\\" to specify the latitude and longitude of the node. Since in this example there are no time windows nor loads, there's no need to specify anything else on each visit.\\nVehicle Time Windows\\nIf no time windows are specified for the vehicle, our algorithm will assume that the vehicle will work between \\\"00:00\\\" and \\\"23:59\\\" hours of that day. If you wish to specify a time window for the vehicle, you must add the values \\\"shift_start\\\" and \\\"shift_end\\\". An example of this:\\n\\n\\n{\\n\\\"ident\\\": \\\"Vehicle 1\\\",\\n\\\"shift_start\\\": \\\"9:00\\\",\\n\\\"shift_end\\\": \\\"18:00\\\",\\n\\\"location_start\\\": {\\n\\\"ident\\\": \\\"depot_1_start\\\",\\n\\\"lat\\\": -33.4233926,\\n\\\"lon\\\": -70.6104996\\n}\\n\\n\\nService Times\\nIf service time is not specified, our algorithm will assume that service time in that location is 0 (zero) minutes. If you wish to add a value, you can specify it on the node object as it follows:\\n\\n\\n{\\n\\\"ident\\\": \\\"8\\\",\\n\\\"lat\\\": -33.438943,\\n\\\"lon\\\": -70.655193,\\n\\\"duration\\\": 5\\n}\\n\\n\\n\\\"Duration\\\" must be an integer in minutes. It represents how long will the vehicle stay on that location.\\nOptimization Response\\nThe optimization response, which is the ouput optimization, can be divided into these sections:\\n\\nVehicles: Array of vehicles from the Json input.\\nTours: Array of tours. A tour is the list of all the routes that the vehicle takes from the beginning of its journey until its end.\\nNodes: Array of deliveries that were included in some route.\\nnum_vehicles_used: Number of vehicles used to create the routes.\\nfilteredClientsNodes: Array of deliveries' ident that were removed from the Optimization input before optimizing the routes, due to the impossibility of serving them due to the constraints of the problem.\\nunattendedClientsNodes: Array of deliveries' ident, not filtered, that could not be included in some route during the optimization of the problem.\\n\\nSome of the attributes that the nodes have in the optmization response are the same as those sent in the request, except for these: \\n\\n\\nAttributes\\nType\\nDescription\\n\\n\\n\\narrival\\nString\\nString \\\"HH:mm:ss\\\" (military time). Vehicle arrival time at delivery.\\n\\n\\ndeparture\\nString\\nString \\\"HH:mm:ss\\\" (military time). Vehicle departure time from delivery.\\n\\n\\norder\\nInteger\\nOrder in which delivery is visited.\\n\\n\\nExample - Multiple depots\\nSimilar to last case, you can define for each vehicle a different location to start and end the day. This way, you can simulate more complex operations in which a vehicle must begin the day on a city and end the day on another place. An example JSON of this is on the right.\\n\\nJSON input:\\n\\n{\\n    \\\"vehicles\\\": [\\n        {\\n            \\\"ident\\\": \\\"Vehicle 1 different start and end\\\",\\n            \\\"shift_start\\\": \\\"09:00\\\",\\n            \\\"shift_end\\\": \\\"19:00\\\",\\n            \\\"location_start\\\": {\\n                \\\"ident\\\": \\\"depot_1_start\\\",\\n                \\\"lat\\\": -33.4233926,\\n                \\\"lon\\\": -70.6104996\\n            },\\n            \\\"location_end\\\": {\\n                \\\"ident\\\": \\\"depot_2_end\\\",\\n                \\\"lat\\\": -33.436662,\\n                \\\"lon\\\": -70.577584\\n            }\\n        }\\n    ],\\n    \\\"nodes\\\": [\\n        {\\n            \\\"ident\\\": \\\"1\\\",\\n            \\\"lat\\\": -33.436135,\\n            \\\"lon\\\": -70.6509688\\n        },\\n        {\\n            \\\"ident\\\": \\\"2\\\",\\n            \\\"lat\\\": -33.4334135,\\n            \\\"lon\\\": -70.6534688,\\n            \\\"duration\\\": 5\\n        },\\n        {\\n            \\\"ident\\\": \\\"3\\\",\\n            \\\"lat\\\": -33.333413,\\n            \\\"lon\\\": -70.5534688,\\n            \\\"duration\\\": 5\\n        }\\n    ]\\n}\",\"textTemplate\":\"\",\"startCharIdx\":115880,\"endCharIdx\":119861,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"bYT49dSdffAIqm6rbxqGhpn6y2/+kc8+vbjyUqc4Hfc=\"}","__type__":"TEXT"},"99bff608-c83a-47a1-883f-e06e6e9f5a23":{"__data__":"{\"id_\":\"99bff608-c83a-47a1-883f-e06e6e9f5a23\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"53095075-7106-48f6-94f8-ef9c474416bf\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"NSYHpI3+vBWOuqZAcdMcGr8lV+4YXADgojbGuJtlNmo=\"},\"NEXT\":{\"nodeId\":\"5a06fe6d-0370-434f-9f31-45c5d95126a2\",\"metadata\":{},\"hash\":\"/1snwy2j2BF8N5hFqE974u8k96FU6jvBRx1AfZjJ4K8=\"}},\"text\":\"JSON output:\\n\\n{\\n    {\\n    \\\"vehicles\\\": [{\\n        \\\"ident\\\": \\\"Vehicle 1 different start and end\\\",\\n        \\\"tours\\\": [{\\n            \\\"nodes\\\": [{\\n                \\\"arrival\\\": \\\"09:00\\\",\\n                \\\"ident\\\": \\\"depot_1_start\\\",\\n                \\\"lon\\\": -70.6104996,\\n                \\\"departure\\\": \\\"09:00\\\",\\n                \\\"lat\\\": -33.4233926,\\n                \\\"order\\\": 0\\n            }, {\\n                \\\"load\\\": 0,\\n                \\\"arrival\\\": \\\"09:17\\\",\\n                \\\"ident\\\": \\\"2\\\",\\n                \\\"lon\\\": -70.6534688,\\n                \\\"departure\\\": \\\"09:22\\\",\\n                \\\"lat\\\": -33.4334135,\\n                \\\"order\\\": 1\\n            }, {\\n                \\\"load\\\": 0,\\n                \\\"arrival\\\": \\\"10:05\\\",\\n                \\\"ident\\\": \\\"1\\\",\\n                \\\"lon\\\": -70.6509688,\\n                \\\"departure\\\": \\\"10:35\\\",\\n                \\\"lat\\\": -33.436135,\\n                \\\"order\\\": 2\\n            }, {\\n                \\\"load\\\": 0,\\n                \\\"arrival\\\": \\\"10:49\\\",\\n                \\\"ident\\\": \\\"3\\\",\\n                \\\"lon\\\": -70.5534688,\\n                \\\"departure\\\": \\\"11:19\\\",\\n                \\\"lat\\\": -33.333413,\\n                \\\"order\\\": 3\\n            },{\\n                \\\"arrival\\\": \\\"11:56\\\",\\n                \\\"ident\\\": \\\"depot_2_end\\\",\\n                \\\"lon\\\": -70.577584,\\n                \\\"departure\\\": \\\"11:56\\\",\\n                \\\"lat\\\": -33.436662,\\n                \\\"order\\\": 4\\n            }]\\n        }]\\n    }],\\n    \\\"num_vehicles_used\\\": 1\\n}\\n\\nBackhaul Optimization (Routes with picks and drop offs)\\n\\nExample of Nodes Object with Loads and Pickloads\\n\\n{\\n    \\\"nodes\\\": [\\n        {\\n            \\\"ident\\\": \\\"Regular Delivery\\\",\\n            \\\"lat\\\": -33.3887,\\n            \\\"lon\\\": -70.62304,\\n            \\\"load\\\": 10.1,\\n            \\\"load_2\\\": 2.0,\\n            \\\"load_3\\\": 3.2\\n        },\\n        {\\n            \\\"ident\\\": \\\"Regular Pick up\\\",\\n            \\\"lat\\\": -33.39124,\\n            \\\"lon\\\": -70.61387,\\n            \\\"pickload\\\": 5.1,\\n            \\\"pickload_2\\\": 1.0,\\n            \\\"pickload_3\\\": 1.2\\n        },\\n        {\\n            \\\"ident\\\": \\\"Pick up and Delivery\\\",\\n            \\\"lat\\\": -33.4887,\\n            \\\"lon\\\": -70.92304\\n            \\\"load\\\": 7.2,\\n            \\\"load_2\\\": 1.0,\\n            \\\"load_2\\\": 2.2,\\n            \\\"pickload\\\": 4.1,\\n            \\\"pickload_2\\\": 3.0,\\n            \\\"pickload_3\\\": 3.2\\n        }\\n    ]\\n}\\n\\nOur algorithm is extended to also support routes in which your vehicles must deliver products to your customers and also pick up products from your customers that must come back to your depot or warehouse. In this scenario, on each customer you can either deliver, pick up or both pick up and deliver products.\\nThis type of routing is commonly known as Backhaul Route Optimization, which must not be confused with Pick up And Delivery Optimization which is a slightly different problem. In this type of route optimization, the capacity of the vehicle must be checked on each stop, in order not to overbook it on the middle of the route.\\nIn order to use our Backhaul Optimization you must use the same route optimization endpoint that is used for regular optimizations, but adding some optional parameters into the nodes object for each visit.\\nThese are the new parameters you can add, and how they are related to the parameters of regular route optimization:\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nload\\nOptional\\nFloat\\nLoad that must be delivered on this client. Must be on the same unit as vehicle's load.\\n\\n\\nload_2\\nOptional\\nFloat\\nSecondary Load that must be delivered on this client. Must be on the same unit as vehicle's secondary load.\\n\\n\\nload_3\\nOptional\\nFloat\\nThird Load that must be delivered on this client. Must be on the same unit as vehicle's third load.\\n\\n\\npickload\\nOptional\\nFloat\\nLoad that must be picked up on this client. Must be on the same unit as vehicle's load and this visit's load.\\n\\n\\npickload_2\\nOptional\\nFloat\\nSecondary Load that must be picked up on this client. Must be on the same unit as vehicle's secondary load and this visit's load_2.\\n\\n\\npickload_3\\nOptional\\nFloat\\nThird Load that must be picked up on this client. Must be on the same unit as vehicle's third load and this visit's load_3.\",\"textTemplate\":\"\",\"startCharIdx\":119864,\"endCharIdx\":123897,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"S+Y7qrrBFVCHLxwaP+mSAlpEW7QXY8Pq2alkfVSuev0=\"}","__type__":"TEXT"},"5a06fe6d-0370-434f-9f31-45c5d95126a2":{"__data__":"{\"id_\":\"5a06fe6d-0370-434f-9f31-45c5d95126a2\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"99bff608-c83a-47a1-883f-e06e6e9f5a23\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5hCYPv0ReMm8pPILY5qMqjIggl8i/56e9F7a9mas8rI=\"},\"NEXT\":{\"nodeId\":\"b91cee73-4e6d-4f24-98cd-7359731b5678\",\"metadata\":{},\"hash\":\"8tJ8Aj2htkChvvWK0K22IJqzvUgYvETjN4qQ1DzgxdE=\"}},\"text\":\"load_2\\nOptional\\nFloat\\nSecondary Load that must be delivered on this client. Must be on the same unit as vehicle's secondary load.\\n\\n\\nload_3\\nOptional\\nFloat\\nThird Load that must be delivered on this client. Must be on the same unit as vehicle's third load.\\n\\n\\npickload\\nOptional\\nFloat\\nLoad that must be picked up on this client. Must be on the same unit as vehicle's load and this visit's load.\\n\\n\\npickload_2\\nOptional\\nFloat\\nSecondary Load that must be picked up on this client. Must be on the same unit as vehicle's secondary load and this visit's load_2.\\n\\n\\npickload_3\\nOptional\\nFloat\\nThird Load that must be picked up on this client. Must be on the same unit as vehicle's third load and this visit's load_3.\\n\\n\\nStop Routing\\n\\nThe visit_joiner object is added to the optimization request and can be used with vrp or big-vrp endpoints.\\nExample Request for \\\"Merging Stops by Distance\\\"\\n\\n{\\n    \\\"visit_joiner\\\": {\\n        \\\"enable_visit_join\\\": true,\\n        \\\"maximum_distance\\\": 0.5,\\n        \\\"match_skills\\\": true,\\n        \\\"match_zones\\\": true,\\n        \\\"match_time_windows\\\": true\\n    }\\n}\\n\\n\\nThe Stop Routing feature allows grouping or merging visits into a single stop based on specific geographical proximity criteria and other client-configurable parameters. The goal of this feature is to optimize routes by reducing the number of individual visits when they share similar conditions in location and restrictions.\\nParameters\\n\\n\\nParameter\\nType\\nDescription\\n\\n\\n\\nenable_visit_join\\nBoolean\\nEnables the stop routing feature when set to true.\\n\\n\\nmaximum_distance\\nNumber\\nMaximum distance (in kilometers) for grouping visits into a stop. Set to 0 to enable merging by exact location.\\n\\n\\nmatch_skills\\nBoolean\\nGroups visits with the same required skills when active.\\n\\n\\nmatch_zones\\nBoolean\\nGroups visits within the same zone when active.\\n\\n\\nmatch_time_windows\\nBoolean\\nGroups visits with the same time window when active.\\n\\n\\nGrouping Visits by Distance\\nThe service processes requests to group visits into a single stop when they meet the following criteria:\\nThey are within a maximum configured distance.\\nThey share the same required skills.\\nThey share the same time window.\\nGrouping Similar Visits by Address (Distance 0)\\n\\nExample Request for \\\"Merging Similar Stops\\\" (Distance 0)\\njson\\n{\\n  \\\"visit_joiner\\\": {\\n    \\\"enable_visit_join\\\": true,\\n    \\\"maximum_distance\\\": 0,\\n    \\\"match_skills\\\": true,\\n    \\\"match_zones\\\": true,\\n    \\\"match_time_windows\\\": true\\n  }\\n}\\n\\nThis option groups visits located at the exact same spot that share:\\n\\n\\nThe same latitude and longitude.\\nThe same required skills.\\nThe same time window.\\n\\nOutput for Both Modes\\n\\nCombined Load: The loads of the individual visits are summed.\\nService Time: The longest service time among the merged visits is assigned.\\n\\nSpecial Conditions and Validations\\n\\nCompatibility with similars_by_priority: When enabled, two visits with the same priority will not be merged.\\nVehicle Capacity Check: If the combined load of merged visits exceeds vehicle capacity, the visits will not be grouped.\\nPrimary Time Window: For visits with the same latitude and longitude but different time windows, the time window of the primary visit (stop) is used.\\n\\n\\nAPI Usage Considerations\\n\\n\\\"Merging Similar Stops\\\" does not validate the address field; only lat and lon are checked.\\nThis functionality is backend-only; do not activate join:true in the frontend.\\n\\n\\nAPI Response\\nTo verify that a visit has been grouped in the optimization response, you can check the attended visits in the parameter order: number. If they have the same order, it indicates that these visits have been grouped into one stop.\\nPick-up and Delivery\\n\\nJob object example: one pick node.\\n\\n{\\n  \\\"jobs\\\": [\\n    {\\n      \\\"pickNodes\\\": [\\n        {\\n          \\\"ident\\\": \\\"OnlyPickUp_1\\\",\\n          \\\"lat\\\": -22.931935311303512,\\n          \\\"lon\\\": -43.39394580787891,\\n          \\\"duration\\\": 11,\\n          \\\"load\\\": 2,\\n          \\\"load_2\\\": 1,\\n          \\\"load_3\\\": 1,\\n          \\\"window_start\\\": \\\"09:00\\\",\\n          \\\"window_end\\\": \\\"23:59\\\",\\n          \\\"skills_required\\\": [],\\n          \\\"skills_optional\\\": [],\\n          \\\"priority_level\\\": 0\\n    }],\\n    \\\"deliveryNodes\\\": [\\n      ]}\\n  ]\\n}\",\"textTemplate\":\"\",\"startCharIdx\":123196,\"endCharIdx\":127308,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"f+wjtu9YwXjgAbq3JqYHcyeiR+a2lMDCm7ska/143ac=\"}","__type__":"TEXT"},"b91cee73-4e6d-4f24-98cd-7359731b5678":{"__data__":"{\"id_\":\"b91cee73-4e6d-4f24-98cd-7359731b5678\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"5a06fe6d-0370-434f-9f31-45c5d95126a2\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"/1snwy2j2BF8N5hFqE974u8k96FU6jvBRx1AfZjJ4K8=\"},\"NEXT\":{\"nodeId\":\"e64a76e8-1bb6-4790-8264-8e3d5783e75c\",\"metadata\":{},\"hash\":\"i5qfSq35O7EoMMhf780JvYMyOm+2NPibOrTBPVfKiac=\"}},\"text\":\"API Response\\nTo verify that a visit has been grouped in the optimization response, you can check the attended visits in the parameter order: number. If they have the same order, it indicates that these visits have been grouped into one stop.\\nPick-up and Delivery\\n\\nJob object example: one pick node.\\n\\n{\\n  \\\"jobs\\\": [\\n    {\\n      \\\"pickNodes\\\": [\\n        {\\n          \\\"ident\\\": \\\"OnlyPickUp_1\\\",\\n          \\\"lat\\\": -22.931935311303512,\\n          \\\"lon\\\": -43.39394580787891,\\n          \\\"duration\\\": 11,\\n          \\\"load\\\": 2,\\n          \\\"load_2\\\": 1,\\n          \\\"load_3\\\": 1,\\n          \\\"window_start\\\": \\\"09:00\\\",\\n          \\\"window_end\\\": \\\"23:59\\\",\\n          \\\"skills_required\\\": [],\\n          \\\"skills_optional\\\": [],\\n          \\\"priority_level\\\": 0\\n    }],\\n    \\\"deliveryNodes\\\": [\\n      ]}\\n  ]\\n}\\n\\n\\nJob object example: one delivery node.\\n\\n{\\n  \\\"jobs\\\": [\\n    {\\n      \\\"pickNodes\\\": [\\n      ],\\n      \\\"deliveryNodes\\\": [\\n        {\\n          \\\"ident\\\": \\\"OnlyDelivery_1\\\",\\n          \\\"lat\\\": -22.928792360672404,\\n          \\\"lon\\\": -43.389912163599,\\n          \\\"duration\\\": 12,\\n          \\\"load\\\": 2,\\n          \\\"load_2\\\": 1,\\n          \\\"load_3\\\": 1,\\n          \\\"window_start\\\": \\\"09:00\\\",\\n          \\\"window_end\\\": \\\"23:59\\\",\\n          \\\"skills_required\\\": [],\\n          \\\"skills_optional\\\": [],\\n          \\\"priority_level\\\": 0\\n    }]}\\n  ]\\n}\\n\\n\\nJob object example: one pick node and one delivery node.\\n\\n{\\n  \\\"jobs\\\": [\\n    {\\n      \\\"pickNodes\\\": [\\n        {\\n          \\\"ident\\\": \\\"PickUp_1\\\",\\n          \\\"lat\\\": -22.92770862905761,\\n          \\\"lon\\\": -43.37154320004268,\\n          \\\"duration\\\": 29,\\n          \\\"load\\\": 2,\\n          \\\"load_2\\\": 1,\\n          \\\"load_3\\\": 1,\\n          \\\"window_start\\\": \\\"09:00\\\",\\n          \\\"window_end\\\": \\\"23:59\\\",\\n          \\\"skills_required\\\": [],\\n          \\\"skills_optional\\\": [],\\n          \\\"priority_level\\\": 0\\n    }],\\n      \\\"deliveryNodes\\\": [\\n        {\\n          \\\"ident\\\": \\\"Delivery_1\\\",\\n          \\\"group\\\":[],\\n          \\\"lat\\\": -22.930334385243487,\\n          \\\"lon\\\": -43.390728465304214,\\n          \\\"duration\\\": 3,\\n          \\\"load\\\": 2,\\n          \\\"load2\\\": 1,\\n          \\\"load3\\\": 1,\\n          \\\"window_start\\\": \\\"09:00\\\",\\n          \\\"window_end\\\": \\\"23:59\\\",\\n          \\\"skills_required\\\": [],\\n          \\\"skills_optional\\\": [],\\n          \\\"priority_level\\\": 0\\n    }]}\\n  ]\\n}\\n\\nOne of the variants supported by the routing algorithm is the Pick-up and Delivery Problem. In this problem, nodes are divided into two categories that serve different goals: picks and deliveries. While a pick is meant to pick up load from a fixed location, a delivery has to take it to its destination.\\nThe fundamental unit of this problem is known as a job, which consists of a group of nodes. Each job falls into one of the following three cases: \\n\\nOne pick node: in this case, after visiting the node, the driver will pick and transport its load in the vehicle until the next depot.\\nOne delivery node: in this case, when the driver arrives at the node, it delivers the load that comes originally from a depot.\\nOne pick node and one delivery node: in this scenario, the driver must first pass through the pick-up node to pick up the load, which consequently must be taken to a specific delivery node.\\n\\nRegarding the capacity constraint, it should be noted that the total load of a vehicle changes dynamically depending on whether it picks up or delivers load during the route.\\nThe optimization input is a JSON object that has a similar structure to the regular optimization case. It is composed of optimization options, a list of vehicles and a list of jobs (instead of nodes). Each job in turn is composed of a list of pick nodes and a list of delivery nodes, to cover the three job cases explained above.  In order to use this mode, the request must be sent to the following endpoint: https://optimizer.simpliroute.com/pd/optimize/sync/. \\nA pickNode or deliveryNode is very similar to the node (delivery) object that was previously defined and is compatible with the following attributes:\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nident\\nMandatory\\nString\\nUnique identifier for the object.\\n\\n\\nlat\\nMandatory\\nFloat\\nLatitude of the pick or delivery's location.\\n\\n\\nlon\\nMandatory\\nFloat\\nLongitude of the pick or delivery's location.\",\"textTemplate\":\"\",\"startCharIdx\":126545,\"endCharIdx\":130661,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"/+nSgzHG7jjzWSGPLL56RMtAqXlwwFVUJXbhWNNOaWE=\"}","__type__":"TEXT"},"e64a76e8-1bb6-4790-8264-8e3d5783e75c":{"__data__":"{\"id_\":\"e64a76e8-1bb6-4790-8264-8e3d5783e75c\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"b91cee73-4e6d-4f24-98cd-7359731b5678\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"8tJ8Aj2htkChvvWK0K22IJqzvUgYvETjN4qQ1DzgxdE=\"},\"NEXT\":{\"nodeId\":\"94f68ca1-f880-4054-a010-7e66275bac2d\",\"metadata\":{},\"hash\":\"JoRygvLuu9CFWxI7pNkZuTYfNTCuRFDrQ5vommTiVFM=\"}},\"text\":\"Attributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nident\\nMandatory\\nString\\nUnique identifier for the object.\\n\\n\\nlat\\nMandatory\\nFloat\\nLatitude of the pick or delivery's location.\\n\\n\\nlon\\nMandatory\\nFloat\\nLongitude of the pick or delivery's location.\\n\\n\\naddress\\nOptional\\nString\\nAddress of the pick or delivery. If there are lat and lon attributes, it will prioritize those fields over this.\\n\\n\\nload\\nOptional\\nFloat\\nLoad of this pick or delivery. Must be on same units as vehicle's load.\\n\\n\\nload_2\\nOptional\\nFloat\\nSecondary load of this pick or delivery. Must be on same units as vehicle's load 2.\\n\\n\\nload_3\\nOptional\\nFloat\\nThird load of this pick or delivery. Must be on same units as vehicle's load 3.\\n\\n\\nwindow_start\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). Minimum time this pick or delivery can be visited.\\n\\n\\nwindow_end\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). Maximum time this pick delivery can be visited.\\n\\n\\nwindow_start_2\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). Secondary minimum time this pick or delivery can be attended. (Ex: I can visit this place from 10:00 to 12:00 and from 15:00 to 19:00)\\n\\n\\nwindow_end_2\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). Secondary maximum time this pick or delivery can be attended.\\n\\n\\nduration\\nOptional\\nInteger\\nMinutes that the vehicle will stay on the pick or delivery.\\n\\n\\nskills_required\\nOptional\\nInteger array\\nSkills this pick or delivery needs to be fulfilled. Only the vehicles who have all of these skills will visit it.\\n\\n\\nskills_optional\\nOptional\\nInteger array\\nSkills this pick or delivery needs to be fulfilled. Only the vehicles who have at least one of these skills will visit it.\\n\\n\\npriority_level\\nOptional\\nInteger\\nUsed to indicate this pick or delivery is more important than others. Possible values are 1: First of the day, 2: Last of its route, 3: High Priority, 4: Medium Priority, 5: Low Priority.\",\"textTemplate\":\"\",\"startCharIdx\":130429,\"endCharIdx\":132283,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"9tA7p0o8A2gW/NPa/lVUYHK/1dAtmBqp1IdzO/isQg0=\"}","__type__":"TEXT"},"94f68ca1-f880-4054-a010-7e66275bac2d":{"__data__":"{\"id_\":\"94f68ca1-f880-4054-a010-7e66275bac2d\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"e64a76e8-1bb6-4790-8264-8e3d5783e75c\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"i5qfSq35O7EoMMhf780JvYMyOm+2NPibOrTBPVfKiac=\"},\"NEXT\":{\"nodeId\":\"00b36492-9006-418b-b76a-e51aacb77932\",\"metadata\":{},\"hash\":\"mKoGqAqvdSnk+vXU9dqYQSr72drD+cNGZgRir84lD6I=\"}},\"text\":\"window_end_2\\nOptional\\nString\\nString \\\"HH:mm\\\" (military time). Secondary maximum time this pick or delivery can be attended.\\n\\n\\nduration\\nOptional\\nInteger\\nMinutes that the vehicle will stay on the pick or delivery.\\n\\n\\nskills_required\\nOptional\\nInteger array\\nSkills this pick or delivery needs to be fulfilled. Only the vehicles who have all of these skills will visit it.\\n\\n\\nskills_optional\\nOptional\\nInteger array\\nSkills this pick or delivery needs to be fulfilled. Only the vehicles who have at least one of these skills will visit it.\\n\\n\\npriority_level\\nOptional\\nInteger\\nUsed to indicate this pick or delivery is more important than others. Possible values are 1: First of the day, 2: Last of its route, 3: High Priority, 4: Medium Priority, 5: Low Priority.\\n\\n\\nRest Time (Routes with a break time)\\n\\nExample of Vehicles Object with rest time\\n\\n{\\n       \\\"vehicles\\\": [\\n        {\\n            \\\"ident\\\": \\\"159331\\\",\\n            \\\"location_start\\\": {\\n                \\\"ident\\\": \\\"vehicle-start-159331\\\",\\n                \\\"lat\\\": -33.405976,\\n                \\\"lon\\\": -70.652035\\n            },\\n            \\\"location_end\\\": {\\n                \\\"ident\\\": \\\"vehicle-end-159331\\\",\\n                \\\"lat\\\": -33.405976,\\n                \\\"lon\\\": -70.652035\\n            },\\n            \\\"capacity\\\": 10.0,\\n            \\\"capacity_2\\\": 1.0,\\n            \\\"capacity_3\\\": 1.0,\\n            \\\"shift_start\\\": \\\"11:00\\\",\\n            \\\"shift_end\\\": \\\"23:00\\\",\\n            \\\"skills\\\": [\\n                \\\"32073\\\",\\n                \\\"32074\\\"\\n            ],\\n            \\\"refill\\\": 0,\\n            \\\"rest_time_start\\\": \\\"12:00\\\",\\n            \\\"rest_time_end\\\": \\\"14:00\\\",\\n            \\\"rest_time_duration\\\": 60\\n        },\\n        {\\n            \\\"ident\\\": \\\"159351\\\",\\n            \\\"location_start\\\": {\\n                \\\"ident\\\": \\\"vehicle-start-159351\\\",\\n                \\\"lat\\\": -33.594771,\\n                \\\"lon\\\": -70.520194\\n            },\\n            \\\"location_end\\\": {\\n                \\\"ident\\\": \\\"vehicle-end-159351\\\",\\n                \\\"lat\\\": -33.594771,\\n                \\\"lon\\\": -70.520194\\n            },\\n            \\\"capacity\\\": 10.0,\\n            \\\"capacity_2\\\": 1.0,\\n            \\\"capacity_3\\\": 1.0,\\n            \\\"shift_start\\\": \\\"08:00\\\",\\n            \\\"shift_end\\\": \\\"14:00\\\",\\n            \\\"skills\\\": [\\n                \\\"32076\\\"\\n            ],\\n            \\\"refill\\\": 0,\\n            \\\"rest_time_start\\\": \\\"12:00\\\",\\n            \\\"rest_time_end\\\": \\\"14:00\\\",\\n            \\\"rest_time_duration\\\": 60\\n        },\\n        {\\n            \\\"ident\\\": \\\"159349\\\",\\n            \\\"location_start\\\": {\\n                \\\"ident\\\": \\\"vehicle-start-159349\\\",\\n                \\\"lat\\\": -33.486415,\\n                \\\"lon\\\": -70.609595\\n            },\\n            \\\"location_end\\\": {\\n                \\\"ident\\\": \\\"vehicle-end-159349\\\",\\n                \\\"lat\\\": -33.486415,\\n                \\\"lon\\\": -70.609595\\n            },\\n            \\\"capacity\\\": 10.0,\\n            \\\"capacity_2\\\": 1.0,\\n            \\\"capacity_3\\\": 1.0,\\n            \\\"shift_start\\\": \\\"08:00\\\",\\n            \\\"shift_end\\\": \\\"14:00\\\",\\n            \\\"skills\\\": [\\n                \\\"32073\\\"\\n            ],\\n            \\\"refill\\\": 0,\\n            \\\"rest_time_start\\\": \\\"12:00\\\",\\n            \\\"rest_time_end\\\": \\\"14:00\\\",\\n            \\\"rest_time_duration\\\": 60\\n        }\\n    ],\\n    \\\"enable_rest_time\\\": true\\n}\\n\\nOur algorithm can consider a defined rest time for each vehicle (driver) in order to take a break in the journey that must be traveled during the day. This feature considers only a pause in the route of a vehicle, at a time defined in the request.\\nIn order to use Rest Time, you must use the same route optimization endpoint that is used for regular optimizations, but adding some optional parameters in the vehicles object for each vehicle. In addition, you must turn on an additional parameter that allows you to use this feature. Only the vehicles that have the additional parameters are considered with a rest time.\\nThese are the new parameters you can add:\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nrest_time_start\\nMandatory\\nString\\nString \\\"HH:mm\\\" (military time). Minimum time in which this vehicle must take the rest period. This time must be less than the shift end attribute.\\n\\n\\nrest_time_end\\nMandatory\\nString\\nString \\\"HH:mm\\\" (military time). Maximum time in which this vehicle must take the rest period. This time must be greater than the shift start attribute.\",\"textTemplate\":\"\",\"startCharIdx\":131532,\"endCharIdx\":135751,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"QXTZW/j7XF48OPdU1IfkIbawXs7WYEkYUmUmpeY+sCQ=\"}","__type__":"TEXT"},"00b36492-9006-418b-b76a-e51aacb77932":{"__data__":"{\"id_\":\"00b36492-9006-418b-b76a-e51aacb77932\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"94f68ca1-f880-4054-a010-7e66275bac2d\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"JoRygvLuu9CFWxI7pNkZuTYfNTCuRFDrQ5vommTiVFM=\"},\"NEXT\":{\"nodeId\":\"614f485a-a470-4a74-b42c-4a25ab8b680f\",\"metadata\":{},\"hash\":\"zQC8qsOyQb81UuseE+YUGSlo9yX8welhDxqjDHjvCXw=\"}},\"text\":\"Attributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nrest_time_start\\nMandatory\\nString\\nString \\\"HH:mm\\\" (military time). Minimum time in which this vehicle must take the rest period. This time must be less than the shift end attribute.\\n\\n\\nrest_time_end\\nMandatory\\nString\\nString \\\"HH:mm\\\" (military time). Maximum time in which this vehicle must take the rest period. This time must be greater than the shift start attribute.\\n\\n\\nrest_time_duration\\nMandatory\\nInteger\\nMinutes that this vehicle will remain in a rest time. This duration must be less than or equal to the time window established to take the break.\\n\\n\\nenable_rest_time\\nOptional\\nBoolean\\nDefault: False. If true, the vehicles considering a rest time on the route, which is defined with the previous parameters.\\n\\n\\nIncremental Routing (Vehicles with previously created routes)\\n\\nExample of Vehicle object with pre-created routes for each vehicle\\n\\n{\\n  \\\"vehicles\\\": [\\n    {\\n      \\\"ident\\\": \\\"7247\\\",\\n      \\\"location_start\\\": {\\n        \\\"ident\\\": \\\"7247\\\",\\n        \\\"lat\\\": -21.6698437,\\n        \\\"lon\\\": -49.7495409\\n      },\\n      \\\"shift_start\\\": \\\"09:12\\\",\\n      \\\"shift_end\\\": \\\"18:00\\\",\\n      \\\"partial_tour\\\": {\\n        \\\"ident\\\": \\\"7247\\\",\\n        \\\"partial_routes\\\": [\\n          {\\n            \\\"nodes\\\": [\\n              \\\"18112000205726\\\",\\n              \\\"10081834157634\\\",\\n              \\\"10089320449243\\\"\\n            ],\\n            \\\"fixed_nodes_number\\\": 2\\n          },\\n          {\\n            \\\"nodes\\\": [\\n              \\\"10089034859206\\\",\\n              \\\"18162900171426\\\",\\n              \\\"18109901985501\\\",\\n              \\\"18162900171339\\\"\\n            ],\\n            \\\"fixed_nodes_number\\\": 3\\n          }\\n        ]\\n      }\\n    }\\n  ],\\n    \\\"incremental_routing\\\": true\\n}\\n\\nIn some scenarios, there are routes already created and it is desired to optimize considering that these routes are not disassembled but integrating new nodes in the same vehicles or in others. This optimization, called incremental routing, allows to optimize considering that there are routes that must remain fixed.\\nThe incremental routing optimization have two sections:\\n\\nPartial Tour: Object indicating that the vehicle has previously created partial routes. It contains an ident that is the same vehicle ident. If you don't want the vehicle to have partial routes then this object should be null.\\nPartial Routes: Array of partial route object. Each partial route object is a pre-created route and contains a list of node idents.\\n\\nIn order to use incremental routing optimization, you must use the same route optimization endpoint that is used for regular optimizations, but adding this sections and some optional parameters in the vehicles object for each vehicle. Only the vehicles that have the additional objects and parameters are considered to have pre-created routes. It is important to consider that both nodes belonging to partial routes and new nodes must be within the deliveries list of the Nodes Object.\\nThese are the new parameters you can add in the partial route object:\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nnodes\\nMandatory\\nString array\\nIdent of the nodes that are part of the route that you want to keep in the vehicle.\\n\\n\\nfixed_nodes_number\\nMandatory\\nInteger\\nFirst n nodes that remain fixed in the vehicle and in the position in this previously created route. If the value is equal to 0, all the nodes can change their position but not the vehicle. If the value is equal to the size of the list of nodes, this partial route remains as it is, no node moves.\\n\\n\\nAdditionally, you must turn on this additional parameter that allows you to use this feature:\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nincremental_routing\\nOptional\\nBoolean\\nDefault: False. If true, the vehicles considering the previouly created routes  which are defined with the previous objetcs and parameters.\",\"textTemplate\":\"\",\"startCharIdx\":135346,\"endCharIdx\":139107,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"67PEGgLYyj6NU8EcpzFTzBrCmVJRAxQSXcyDKTMXReA=\"}","__type__":"TEXT"},"614f485a-a470-4a74-b42c-4a25ab8b680f":{"__data__":"{\"id_\":\"614f485a-a470-4a74-b42c-4a25ab8b680f\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"00b36492-9006-418b-b76a-e51aacb77932\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"mKoGqAqvdSnk+vXU9dqYQSr72drD+cNGZgRir84lD6I=\"},\"NEXT\":{\"nodeId\":\"1387f4bc-119e-4a36-8e9b-60f251758a35\",\"metadata\":{},\"hash\":\"I4NXakY6EZwTledoMwqctzKf+BN8lQihdGJGVRZ9has=\"}},\"text\":\"Attributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nnodes\\nMandatory\\nString array\\nIdent of the nodes that are part of the route that you want to keep in the vehicle.\\n\\n\\nfixed_nodes_number\\nMandatory\\nInteger\\nFirst n nodes that remain fixed in the vehicle and in the position in this previously created route. If the value is equal to 0, all the nodes can change their position but not the vehicle. If the value is equal to the size of the list of nodes, this partial route remains as it is, no node moves.\\n\\n\\nAdditionally, you must turn on this additional parameter that allows you to use this feature:\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nincremental_routing\\nOptional\\nBoolean\\nDefault: False. If true, the vehicles considering the previouly created routes  which are defined with the previous objetcs and parameters.\\n\\n\\nLong Routes\\n\\nExample of Vehicles and Nodes Objects with long routes optimization, where a night route starts at 10:00 p.m. and ends at 7:00 a.m. the following day (equivalent to 31:00 hrs).\\n\\n{\\n  \\\"vehicles\\\": [\\n    {\\n      \\\"ident\\\": \\\"Vehicle 1\\\",\\n      \\\"location_start\\\": {\\n        \\\"ident\\\": \\\"warehouse A\\\",\\n        \\\"lat\\\": -12.101389,\\n        \\\"lon\\\": -77.004534\\n      },\\n      \\\"capacity\\\": 3500,\\n      \\\"shift_start\\\": \\\"22:00\\\",\\n      \\\"shift_end\\\": \\\"31:00\\\"\\n    }\\n  ],\\n  \\\"nodes\\\": [\\n    {\\n      \\\"ident\\\": \\\"Jirón Vesalio 252, San Borja\\\",\\n      \\\"lat\\\": -12.105329,\\n      \\\"lon\\\": -77.005524,\\n      \\\"arrayOfTimeWindows\\\": [\\n        [\\n          \\\"25:00\\\",\\n          \\\"28:00\\\"\\n        ]\\n      ],\\n      \\\"load\\\": 77,\\n      \\\"duration\\\": 10\\n    },\\n    {\\n      \\\"ident\\\": \\\"Jirsón Tasso 423, San Borja\\\",\\n      \\\"lat\\\": -12.098615,\\n      \\\"lon\\\": -77.007240,\\n      \\\"arrayOfTimeWindows\\\": [\\n        [\\n          \\\"26:00\\\",\\n          \\\"30:00\\\"\\n        ]\\n      ],\\n      \\\"load\\\": 77,\\n      \\\"duration\\\": 10\\n    }\\n  ],\\n  \\\"longRoutes\\\": true\\n}\\n\\nOur algorithm extends the creation of routes to perform overnight routing operations, i.e., beyond the 24 hours of a day, called Long Routes Optimization.\\nTo use Long Routes Optimization, you must use the same route optimization endpoint that is used for regular optimizations, but add some optional parameters on all node objects. In addition, you must activate an additional parameter that allows you to use this feature.\\nIt is important to consider that this feature is focused on performing night routing optimizations, but it is possible to make routes of more than one day. However, this feature only supports horizons of no more than 7 days, no more than 10 vehicles and/or 40 nodes per vehicle.\\nThese are the new parameters you can add:\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\narrayOfTimeWindows\\nOptional\\nObject\\nArray of time windows (array of two String in format \\\"HH:mm\\\") to attend the visit.  Times can be set for more than 24 hours. This attribute only works if longRoutes is True.\\n\\n\\nlongRoutes\\nOptional\\nBoolean\\nDefault: False. If true, it allows the vehicle to have a shift_end greater than 24 hours. In the visits the time windows must be sent.\\n\\n\\nRadial Routing\\nThis routing option makes the routing tend to be more radial with respect to the depot. When \\\"radial_routing\\\": 1, the routes will tend to start closer to the depot and end farther away, and in the sequence of visits, each visit will tend to be farther from the depot than the previous one. When \\\"radial_routing\\\": -1, the routes will tend to start farther from the depot and end closer, and in the sequence of visits, each visit will tend to be closer to the depot than the previous one. The effect will be more noticeable and is intended for the case of one route per vehicle (\\\"single_tour\\\": true). It is important to note that, for the purposes of this option, the proximity of visits refers to proximity in travel time, not in distance.\\nTo use Radial Routing, you must turn on the radial_routing parameter (by setting its value to 1 or -1) and one or more of the following conditions should be met:\\n- beauty parameter is turned on (\\\"beauty\\\": true).\\n- min_load parameter has a value greater than 0.\\n- there are more than 800 nodes.\\nEstimated Time Calculation\\n\\nETC Update Endpoint\\n\\n\\nhttps://optimizator.simpliroute.com/etc/sync\",\"textTemplate\":\"\",\"startCharIdx\":138301,\"endCharIdx\":142401,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"vEpjqpOEorbrWoR6LywLS551ByqzhIVUIVjmwqoN6xc=\"}","__type__":"TEXT"},"1387f4bc-119e-4a36-8e9b-60f251758a35":{"__data__":"{\"id_\":\"1387f4bc-119e-4a36-8e9b-60f251758a35\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"614f485a-a470-4a74-b42c-4a25ab8b680f\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"zQC8qsOyQb81UuseE+YUGSlo9yX8welhDxqjDHjvCXw=\"},\"NEXT\":{\"nodeId\":\"46d5c315-bcaa-4eec-8fb2-16aa86f5ed2e\",\"metadata\":{},\"hash\":\"5+0hpuBCuus3wWjLqv66qGI0GFDSiZ4Z8Xryoh+un8g=\"}},\"text\":\"https://optimizator.simpliroute.com/etc/sync\\n\\n\\n\\nJSON input\\n\\n{\\n    \\\"vehicle\\\": {\\n        \\\"vehicle_id\\\": \\\"Vehicle 1\\\",\\n        \\\"lat\\\": -33.45754,\\n        \\\"lon\\\": -70.92697,\\n        \\\"departure_time\\\": \\\"09:00\\\"\\n    },\\n    \\\"tours\\\": [\\n        {\\n            \\\"nodes\\\": [\\n                {\\n                    \\\"id\\\": \\\"id1\\\",\\n                    \\\"lat\\\": -33.45754,\\n                    \\\"lon\\\": -70.62697,\\n                    \\\"service_time\\\": 30.0,\\n                    \\\"order\\\": 0\\n                },\\n                {\\n                    \\\"id\\\": \\\"id2\\\",\\n                    \\\"lat\\\": -33.45744,\\n                    \\\"lon\\\": -70.77532,\\n                    \\\"service_time\\\": 90.0,\\n                    \\\"order\\\": 1\\n                },\\n                {\\n                    \\\"id\\\": \\\"id3\\\",\\n                    \\\"lat\\\": -33.45742,\\n                    \\\"lon\\\": -70.60364,\\n                    \\\"service_time\\\": 90.0,\\n                    \\\"order\\\": 2\\n                }\\n            ]\\n        }\\n    ],\\n    \\\"fmv\\\": 2.0\\n}\\n\\nAfter your vehicle is on route, a lot of things can happen:\\n\\nTraffic jams\\nLonger service times than expected\\nUnexpected street situations\\nNew priorities along the days\\n\\nThen, after a while, the initial calculated ETA is not longer valid and you need to recalculated it. For this cases, we have a dedicated endpoint to solve the issue. A few considerations about this endpoint:\\n\\nYou have to provide the current time to recalculate the ETA (\\\"departure_time\\\")\\nIt only accepts one vehicle with one tour per request\\nIt will maintain the provided order, it will not compute any optimization (VRP or TSP)\\nThe predicted ETA/ETD will be based in our traffic estimations.\\n\\nBelow you can see the input information and their corresponding vehicle's data types:\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nvehicle_id\\nMandatory\\nString\\nThe vehicle id identifier\\n\\n\\nlat\\nMandatory\\nDouble\\nCurrent vehicle's latitude\\n\\n\\nlon\\nMandatory\\nDouble\\nCurrent vehicle's longitude\\n\\n\\ndeparture_time\\nMandatory\\nTime\\nCurrent time to start the ETA recalculation \\\"HH:mm\\\"\\n\\n\\nIn the tours and node side, this is the attributes:\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nid\\nMandatory\\nString\\nVisit identifier\\n\\n\\nlat\\nMandatory\\nDouble\\nVisit latitude\\n\\n\\nlon\\nMandatory\\nDouble\\nVisit longitude\\n\\n\\nservice_time\\nMandatory\\nDouble\\nMinutes to unload deliveries from the vehicle\\n\\n\\norder\\nMandatory\\nInteger\\nOrder of visit inside of the tour.\\n\\n\\nAt the moment there is only support one route per tour. If more than one route is sent it will respond with an error.\\nThe request can also include Traffic factor\\n\\n\\nAttributes\\nMandatory\\nType\\nDescription\\n\\n\\n\\nfmv\\nOptional\\nInteger\\nDefault: 2.0, Speed traffic factor. It could be 1.0 = Low Traffic, 1.5 = Medium Traffic, 2.0 = High Traffic or 3.0 = Intense Traffic.\\n\\n\\nYou can see an example of the response in the right side of this documentation.\\n\\nJSON response:\\n\\n{\\n    \\\"vehicle\\\": {\\n        \\\"vehicle_id\\\": \\\"Vehicle 1\\\",\\n        \\\"lat\\\": -33.45754,\\n        \\\"lon\\\": -70.92697,\\n        \\\"departure_time\\\": \\\"09:00\\\"\\n    },\\n    \\\"tours\\\": [\\n        {\\n            \\\"nodes\\\": [\\n                {\\n                    \\\"id\\\": \\\"id1\\\",\\n                    \\\"lat\\\": -33.45754,\\n                    \\\"lon\\\": -70.62697,\\n                    \\\"service_time\\\": 30,\\n                    \\\"order\\\": 0,\\n                    \\\"arrival\\\": \\\"09:48\\\",\\n                    \\\"departure\\\": \\\"10:18\\\"\\n                },\\n                {\\n                    \\\"id\\\": \\\"id2\\\",\\n                    \\\"lat\\\": -33.45744,\\n                    \\\"lon\\\": -70.77532,\\n                    \\\"service_time\\\": 90,\\n                    \\\"order\\\": 1,\\n                    \\\"arrival\\\": \\\"10:50\\\",\\n                    \\\"departure\\\": \\\"12:20\\\"\\n                },\\n                {\\n                    \\\"id\\\": \\\"id3\\\",\\n                    \\\"lat\\\": -33.45742,\\n                    \\\"lon\\\": -70.60364,\\n                    \\\"service_time\\\": 90,\\n                    \\\"order\\\": 2,\\n                    \\\"arrival\\\": \\\"13:00\\\",\\n                    \\\"departure\\\": \\\"14:30\\\"\\n                }\\n            ]\\n        }\\n    ]\\n}\\nOptimization: Metadata\\nThe Optimization Metadata pretends give to the client information not available in the optimization endpoint,\\nsuch as the vehicle's route planned distances provided by the Optimization Endpoint.    \\nDistance\\nThe distances endpoint offers the estimated kilometers for a previous optimized routes. \\nAn Authorization Header containing a valid Token is required.\\n\\nOptimization Metadata Distances Endpoint\",\"textTemplate\":\"\",\"startCharIdx\":142357,\"endCharIdx\":146705,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"2Om6yVQSv50rE45xEj9pVAXj1M0N5CkA8BCam4P5E/g=\"}","__type__":"TEXT"},"46d5c315-bcaa-4eec-8fb2-16aa86f5ed2e":{"__data__":"{\"id_\":\"46d5c315-bcaa-4eec-8fb2-16aa86f5ed2e\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"1387f4bc-119e-4a36-8e9b-60f251758a35\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"I4NXakY6EZwTledoMwqctzKf+BN8lQihdGJGVRZ9has=\"},\"NEXT\":{\"nodeId\":\"fc7e6539-0d5f-40a1-b7ee-75ae71be1e49\",\"metadata\":{},\"hash\":\"GMYziQFO3jcEClA+lXdofUQwVtSpED8pAhnmw52hwwA=\"}},\"text\":\"https://optimizator.simpliroute.com/v1/optimization/metadata/distance\\n\\nRequest\\nIt respects the structure of the Optimization Response, so it should be easier to build after obtaining an optimization.\\nRoot object:\\n\\n\\nAttributes\\nMandatory\\nData Type\\nDescription\\n\\n\\n\\ncountry\\nYes\\nString\\nISO code referring to the country where the delivery locations are located.\\n\\n\\nvehicles\\nYes\\nObject\\nList of vehicles incurred in the Optimization\\n\\n\\nVehicle object:\\n\\n\\nAttributes\\nMandatory\\nData Type\\nDescription\\n\\n\\n\\nident\\nNo\\nString\\nVehicle's identification string\\n\\n\\ntours\\nYes\\nObject\\nList of tours assigned to the current vehicle\\n\\n\\nTour object:\\n\\n\\nAttributes\\nMandatory\\nData Type\\nDescription\\n\\n\\n\\nnodes\\nYes\\nObject\\nList of nodes that forms the current tour graph.\\n\\n\\nNode object:\\n\\n\\nAttributes\\nMandatory\\nData Type\\nDescription\\n\\n\\n\\nlat\\nYes\\nFloat\\nCoordinate representing the latitude of the visit or depot\\n\\n\\nlon\\nYes\\nFloat\\nCoordinate representing the longitude of the visit or depot\\n\\n\\n\\nExample of Request\\n\\n{\\n    \\\"country\\\": \\\"CL\\\",\\n    \\\"vehicles\\\": [\\n        {\\n            \\\"ident\\\": \\\"123\\\",\\n            \\\"tours\\\": [\\n                {\\n                    \\\"nodes\\\": [\\n                        {\\n                            \\\"lat\\\": -41.319286,\\n                            \\\"lon\\\": -72.995719\\n                        },\\n                        {\\n                            \\\"lat\\\": -41.319081,\\n                            \\\"lon\\\": -72.989037\\n                        }\\n                    ]\\n                },\\n                {\\n                    \\\"nodes\\\": [\\n                        {\\n                            \\\"lat\\\": -41.317910,\\n                            \\\"lon\\\": -73.006348\\n                        },\\n                        {\\n                            \\\"lat\\\": -41.317449, \\n                            \\\"lon\\\": -72.981885\\n                        }\\n                    ]\\n                }\\n            ]\\n        },\\n        {\\n            \\\"ident\\\": \\\"456\\\",\\n            \\\"tours\\\": [\\n                {\\n                    \\\"nodes\\\": [\\n                        {\\n                            \\\"lat\\\": -42.319286,\\n                            \\\"lon\\\": -73.995719\\n                        },\\n                        {\\n                            \\\"lat\\\": -42.319081,\\n                            \\\"lon\\\": -73.989037\\n                        }\\n                    ]\\n                },\\n                {\\n                    \\\"nodes\\\": [\\n                        {\\n                            \\\"lat\\\": -42.317910,\\n                            \\\"lon\\\": -73.006348\\n                        },\\n                        {\\n                            \\\"lat\\\": -42.317449, \\n                            \\\"lon\\\": -73.981885\\n                        }\\n                    ]\\n                }\\n            ]\\n        }\\n    ]\\n}\\nResponse\\n200\\nIt will return 200 when the request is successful. It will follow the same object structure than the request.\\n\\n200 response example\\n\\n{\\n    \\\"vehicles\\\": [\\n        {\\n            \\\"ident\\\": \\\"123\\\",\\n            \\\"tours\\\": [\\n                {\\n                    \\\"distance\\\": 899.5,\\n                    \\\"metric\\\": \\\"meters\\\"\\n                },\\n                {\\n                    \\\"distance\\\": 2200.6,\\n                    \\\"metric\\\": \\\"meters\\\"\\n                }\\n            ]\\n        },\\n        {\\n            \\\"ident\\\": \\\"456\\\",\\n            \\\"tours\\\": [\\n                {\\n                    \\\"distance\\\": 899.5,\\n                    \\\"metric\\\": \\\"meters\\\"\\n                },\\n                {\\n                    \\\"distance\\\": 2200.6,\\n                    \\\"metric\\\": \\\"meters\\\"\\n                }\\n            ]\\n        }\\n    ]\\n}\\n\\n\\n400 response example\\n\\n{\\n    \\\"statusCode\\\": 400,\\n    \\\"message\\\": \\\"Country value is required\\\"\\n}5XX reponse example\\n\\n{\\n    \\\"errors\\\": [\\n        {\\n            \\\"code\\\": \\\"E5000\\\",\\n            \\\"message\\\": \\\"Internal server error\\\",\\n            \\\"metadata\\\": {\\n                \\\"code\\\": \\\"E5000\\\"\\n            }\\n        }\\n    ]\\n}\\nValidate Incompatibilities\\nThe validation process involves iterating through each visit and checking against each vehicle for any type of incompatibility based on required skills, optional skills, loads, time windows, or zones constraints.This process is only supported for VRP-type problems and is carried out in the optimizer at the beginning of the process, just before the problem is processed.Visits that are found to be incompatible will be filtered out and will not be considered in the optimization process.Since a visit can have different incompatibilities for each vehicle, it's challenging to specify a single cause.In such cases, a summary description will be provided, listing the categories that are incompatible with the visit.\",\"textTemplate\":\"\",\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"FFwz47yMfJx0aZiMeqBJaiAxOuTHi5ttgWKha+4d/WI=\"}","__type__":"TEXT"},"fc7e6539-0d5f-40a1-b7ee-75ae71be1e49":{"__data__":"{\"id_\":\"fc7e6539-0d5f-40a1-b7ee-75ae71be1e49\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"46d5c315-bcaa-4eec-8fb2-16aa86f5ed2e\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5+0hpuBCuus3wWjLqv66qGI0GFDSiZ4Z8Xryoh+un8g=\"},\"NEXT\":{\"nodeId\":\"d6fd016b-a46f-4887-bd1d-2c3d0ba8e122\",\"metadata\":{},\"hash\":\"XH38n2EfL2gWvMtRAe3dHUoYWj0sfm2u3ikF79hfR6E=\"}},\"text\":\"5XX reponse example\\n\\n{\\n    \\\"errors\\\": [\\n        {\\n            \\\"code\\\": \\\"E5000\\\",\\n            \\\"message\\\": \\\"Internal server error\\\",\\n            \\\"metadata\\\": {\\n                \\\"code\\\": \\\"E5000\\\"\\n            }\\n        }\\n    ]\\n}\\nValidate Incompatibilities\\nThe validation process involves iterating through each visit and checking against each vehicle for any type of incompatibility based on required skills, optional skills, loads, time windows, or zones constraints.This process is only supported for VRP-type problems and is carried out in the optimizer at the beginning of the process, just before the problem is processed.Visits that are found to be incompatible will be filtered out and will not be considered in the optimization process.Since a visit can have different incompatibilities for each vehicle, it's challenging to specify a single cause.In such cases, a summary description will be provided, listing the categories that are incompatible with the visit.Example\\nHere's an example of a problem response that contains 1 visit and 3 vehicles, where neither vehicle meets the visit requirements:\\n\\nJSON response:\\n\\n{\\n  \\\"filteredClientsNodes\\\": [\\n    {\\n      \\\"ident\\\": \\\"Visit\\\",\\n      \\\"cause\\\": {\\n        \\\"description\\\": \\\"No vehicles matching: required skills, optional skills, time windows, zone, load\\\",\\n        \\\"codes\\\": [\\n          \\\"W02002\\\",\\n          \\\"W02102\\\",\\n          \\\"W03002\\\",\\n          \\\"W04002\\\",\\n          \\\"W01001\\\"\\n        ],\\n        \\\"details\\\": [\\n          {\\n            \\\"code\\\": \\\"W02002\\\",\\n            \\\"category\\\": \\\"required skills\\\",\\n            \\\"description\\\": \\\"None Vehicles has the required skills for this visit.\\\",\\n            \\\"count\\\": 3\\n          },\\n          {\\n            \\\"code\\\": \\\"W02102\\\",\\n            \\\"category\\\": \\\"optional skills\\\",\\n            \\\"description\\\": \\\"None Vehicles has the optional skill for this visit.\\\",\\n            \\\"count\\\": 3\\n          },\\n          {\\n            \\\"code\\\": \\\"W03002\\\",\\n            \\\"category\\\": \\\"time windows\\\",\\n            \\\"description\\\": \\\"The visit's time window falls out outside the working hours of all vehicles.\\\",\\n            \\\"count\\\": 3\\n          },\\n          {\\n            \\\"code\\\": \\\"W04002\\\",\\n            \\\"category\\\": \\\"zone\\\",\\n            \\\"description\\\": \\\"None vehicle has been assigned to the visit's zone\\\",\\n            \\\"count\\\": 3\\n          },\\n          {\\n            \\\"code\\\": \\\"W01001\\\",\\n            \\\"category\\\": \\\"load\\\",\\n            \\\"description\\\": \\\"Some vehicles has not the required capacity for this visit.\\\",\\n            \\\"count\\\": 2\\n          }\\n        ]\\n      }\\n    }\\n  ]\\n}\\n\\nWhile the description informs us that there are incompatibilities in the 5 categories (load, required skills, optional skills, time windows, zone), in the \\\"details\\\" attribute, we can observe a \\\"counter\\\" attribute that indicates the number of vehicles that are not compatible in each category.The causes are ordered in descending order based on the number of incompatible vehicles.List of Codes\\nBelow is the code description and the list of supported incompatibility causes.Structure\\n<Initial Letter><Problem Category><Specific Number>\\nInitial Letter:\\n\\nW: Indicates an Alert or warning related to a poorly created visit.Primary Incompatibility Codes\\n\\nW00001: Undefined.W01002: No vehicles have the required capacity for this visit.W02002: No vehicles have the required skills for this visit.W02102: No vehicles have the optional skill for this visit.W03002: The visit's time window falls outside the working hours of all vehicles.W04002: No vehicle has been assigned to the visit's zone.Secondary Incompatibility Codes\\n\\nW01001: Some vehicles do not have the required capacity for this visit.W02001: Some vehicles do not have the required skills for this visit.W02101: Some vehicles do not have the optional skill for this visit.W03001: The visit's time window falls outside the working hours of some vehicles.W04001: Some vehicle has not been assigned to the visit's zone.Invoices\\nTo use this API, your account must have the Accounting AddOn activated, please contact your on-boarding specialist.Note: this API is constantly adding fields or making small adjustments.The information presented may change.\",\"textTemplate\":\"\",\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"wSMdb35ZV0FMamDQVpNusi/xbGkb6Rkm7H//ushGJ6Q=\"}","__type__":"TEXT"},"d6fd016b-a46f-4887-bd1d-2c3d0ba8e122":{"__data__":"{\"id_\":\"d6fd016b-a46f-4887-bd1d-2c3d0ba8e122\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"fc7e6539-0d5f-40a1-b7ee-75ae71be1e49\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"GMYziQFO3jcEClA+lXdofUQwVtSpED8pAhnmw52hwwA=\"},\"NEXT\":{\"nodeId\":\"b91a0be1-bd55-4df4-86a3-795d62f426c6\",\"metadata\":{},\"hash\":\"5YCp3th5WkU+z1bJcmGrObdv1Lkjflf1Qqn8NpC2+A4=\"}},\"text\":\"W02002: No vehicles have the required skills for this visit.W02102: No vehicles have the optional skill for this visit.W03002: The visit's time window falls outside the working hours of all vehicles.W04002: No vehicle has been assigned to the visit's zone.Secondary Incompatibility Codes\\n\\nW01001: Some vehicles do not have the required capacity for this visit.W02001: Some vehicles do not have the required skills for this visit.W02101: Some vehicles do not have the optional skill for this visit.W03001: The visit's time window falls outside the working hours of some vehicles.W04001: Some vehicle has not been assigned to the visit's zone.Invoices\\nTo use this API, your account must have the Accounting AddOn activated, please contact your on-boarding specialist.Note: this API is constantly adding fields or making small adjustments.The information presented may change.Invoice\\nMain entity representing a financial document, such as an invoice, receipt, delivery note, etc. \\nWe formally use this definition:\\nInvoice: a time-stamped commercial document that itemizes and records a transaction between a buyer and a seller\\n\\nInvoice creation cURL (minimal payload)\\n\\ncurl --location --request POST 'http://api.simpliroute.com/v1/accounting/invoices/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n    \\\"reference\\\" : \\\"external identifier\\\",\\n    \\\"currency\\\": \\\"CLP\\\",\\n    \\\"type\\\": \\\"bill\\\",\\n    \\\"visit\\\": 15081986\\n}'\\n\\n\\nInvoice creation cURL (full payload)\\n\\ncurl --location --request POST 'http://api.simpliroute.com/v1/accounting/invoices/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n    \\\"reference\\\" : \\\"external_id 1234\\\",\\n    \\\"currency\\\": \\\"USD\\\",\\n    \\\"visit\\\": 185202350,\\n    \\\"payment_method\\\": \\\"transfer\\\",\\n    \\\"type\\\": \\\"bill\\\",\\n    \\\"status\\\": \\\"payed\\\",\\n    \\\"label\\\": \\\"custom_title\\\",\\n    \\\"items\\\": [{\\n        \\\"title\\\": \\\"inline item\\\",\\n        \\\"type\\\": \\\"paquete\\\"\\n    }]\\n}'\\n\\n\\nInvoice update cURL\\n\\ncurl --location --request PATCH 'http://api.simpliroute.com/v1/accounting/invoices/<invoice_id>/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n    \\\"reference\\\" : \\\"external_id\\\",\\n    \\\"currency\\\": \\\"CLP\\\",\\n    \\\"visit\\\": 15081986\\n}'\\n\\n\\nInvoice delete cURL\\n\\ncurl --location --request DELETE 'http://api.simpliroute.com/v1/accounting/invoices/<invoice_id>/' \\\\\\n--header 'Authorization: Token <your_token>'\\n\\nAn Invoice exists decoupled fom Visit, although it relates to it. \\nIts minimum and mandatory properties are:\\n\\n\\nName\\nType\\nDescription\\n\\n\\n\\nreference\\nstring\\nexternal identifier for the invoice\\n\\n\\ncurrency\\nstring\\nmoney currency for items prices. Following the ALPHA-3 convention described in the ISO 3166 international standard. Ex: CLP\\n\\n\\nvisit\\nint\\nvisit id to which the invoice relates to\\n\\n\\ntype\\nstring\\nthe type of Invoice. Currently supported: ('bill', 'credit_note', 'delivery_note', 'debit_note')\\n\\n\\nAn Invoice is created using the service\\nhttps://api.simpliroute.com/v1/accounting/invoices/\\n(a cURL example is shown at the right panel 👉)\\nOther available fields for Invoice are:\\n\\n\\nName\\nType\\nDefault\\nDescription\\n\\n\\n\\npayment_method\\nstring\\n'cash'\\nthe payment method declared for the Invoice. One of ('cash', 'check', 'credit_card', 'debit_card', 'transfer', 'dated_check', 'credit')\\n\\n\\npayment_method_details\\nstring\\nnone\\navailable to store extra information about payment method\\n\\n\\nstatus\\nstring\\n'pending'\\nthe invoice status. One of ('pending', 'payed', 'overdue', 'canceled', 'partial', 'completed')\\n\\n\\nitems\\nlist of InvoiceItem\\n[]\\nlist of items in invoice. Can be initialized with a list of dictionaries like: [{ \\\"title\\\": \\\"item title\\\", \\\"type\\\": \\\"item type\\\"}]\\n\\n\\ndelivery_issue\\none of the available DeliveryIssue for the account\\nnull\\nindicates if Invoice had a delivery issue, and which one.\\n\\n\\nlabel\\nstring\\nnull\\ncustom field to store a name or title for the Invoice\",\"textTemplate\":\"\",\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"PxyV5uw/jY/8HwfCvB5QHnKKhasqtW16+f0m1j6xo/I=\"}","__type__":"TEXT"},"b91a0be1-bd55-4df4-86a3-795d62f426c6":{"__data__":"{\"id_\":\"b91a0be1-bd55-4df4-86a3-795d62f426c6\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"d6fd016b-a46f-4887-bd1d-2c3d0ba8e122\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"XH38n2EfL2gWvMtRAe3dHUoYWj0sfm2u3ikF79hfR6E=\"},\"NEXT\":{\"nodeId\":\"7eb9ae6b-eb5c-4abb-8f1a-9e4a0d0add72\",\"metadata\":{},\"hash\":\"hgOGdDeK4pZVM1dNGtRjs/9sh5hsCHGTKVs9AXcCTs0=\"}},\"text\":\"Name\\nType\\nDefault\\nDescription\\n\\n\\n\\npayment_method\\nstring\\n'cash'\\nthe payment method declared for the Invoice. One of ('cash', 'check', 'credit_card', 'debit_card', 'transfer', 'dated_check', 'credit')\\n\\n\\npayment_method_details\\nstring\\nnone\\navailable to store extra information about payment method\\n\\n\\nstatus\\nstring\\n'pending'\\nthe invoice status. One of ('pending', 'payed', 'overdue', 'canceled', 'partial', 'completed')\\n\\n\\nitems\\nlist of InvoiceItem\\n[]\\nlist of items in invoice. Can be initialized with a list of dictionaries like: [{ \\\"title\\\": \\\"item title\\\", \\\"type\\\": \\\"item type\\\"}]\\n\\n\\ndelivery_issue\\none of the available DeliveryIssue for the account\\nnull\\nindicates if Invoice had a delivery issue, and which one.\\n\\n\\nlabel\\nstring\\nnull\\ncustom field to store a name or title for the Invoice\\n\\n\\nThe services for retrieval, update, and deletion are as follows:\\nGET http://api.simrpliroute.com/v1/accounting/invoices/<invoice_id>/\\nPATCH http://api.simrpliroute.com/v1/accounting/invoices/<invoice_id>/\\nDELETE http://api.simrpliroute.com/v1/accounting/invoices/<invoice_id>/\\nRetrieval service support two query-params: route_id and planned_date\\nroute_id to query for the Invoices associated with visits from a given route. Ex.:\\nGET http://api.simrpliroute.com/v1/accounting/invoices/?route_id=abs-qq2-asas\\nplanned_date to query for invoices associated with visits from a certain planned date. Ex.:\\nGET http://api.simrpliroute.com/v1/accounting/invoices/?planned_date=2024-02-26\\nInvoiceItem\\n\\nInvoiceItem creation or update cURL\\n\\ncurl --location --request POST 'http://api.simpliroute.com/v1/accounting/invoices/<invoice_id>/items/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '[\\n    {\\n        \\\"title\\\": \\\"a good iteam\\\"\\n    },\\n    {\\n        \\\"reference\\\": \\\"new reference\\\",\\n        \\\"title\\\": \\\"a not so good item\\\"\\n    }\\n]'\\n\\n\\nInvoiceItem deletion cURL\\n\\ncurl --location --request DELETE 'http://api.simpliroute.com/v1/accounting/invoices/a947125d-da24-447f-8db4-01ab0b5c4bf9/items/1' \\\\\\n--header 'Authorization: Token <your_token>'\\n\\nInvoiceItem represents an item within an Invoice and can be declared at the time of creating the Invoice, or afterward. The properties of an InvoiceItem are:\\n\\n\\nName\\nType\\nMandatory\\nDescription\\n\\n\\n\\ntitle\\nstring\\nyes\\nname or title for the item\\n\\n\\nreference\\nstring\\nyes\\nexternal identifier for this item\\n\\n\\nsku\\nstring\\nno\\nitem’s SKU\\n\\n\\nunit_price\\nfloat\\nno\\nitem unitary price\\n\\n\\nplanned_units\\nfloat\\nno\\nnumber of units expected to be delivered\\n\\n\\ndelivered_units\\nfloat\\nno\\nnumber of units actually delivered\\n\\n\\ndelivery_issue\\none of the available DeliveryIssue for the account\\nno\\nindicates if item had a delivery issue, and which one.\\n\\n\\ntype\\nstring\\nno\\nitem type\\n\\n\\nproduct\\nstring\\nno\\noptional Product identifier\\n\\n\\nInvoiceItems only exist within an Invoice. An InvoiceItems is created using the service:\\nPOST http://api.simpliroute.com/v1/accounting/invoices/<invoice_id>/items/\\nexamples of creation, deletion and update of InvoiceItem can be found at the right panel 👉 \\nDeliveryIssue\\n\\nDeliveryIssue creation cURL\\n\\ncurl --location --request POST 'http://api.simpliroute.com/v1/accounting/invoices/delivery-issues/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n\\\"title\\\": \\\"issue title\\\",\\n\\\"description\\\": \\\"dog does not allow entrance\\\"\\n}'\\n\\n\\nDeliveryIssue update cURL\\n\\ncurl --location --request PATCH 'http://api.simpliroute.com/v1/accounting/invoices/delivery-issues/<delivery_issue_id>/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\\"title\\\":\\\"delivery issue - new title\\\"}'\\n\\n\\nDeliveryIssue delete cURL\\n\\ncurl --location --request DELETE 'http://api.simpliroute.com/v1/accounting/invoices/delivery-issues/<delivery_issue_id>/' \\\\\\n--header 'Authorization: Token <your_token>'\\n\\na DeliveryIssue represents a reason for non-delivery or an issue at the time of delivery. The available values are defined by each account. The properties of a DeliveryIssue are:\",\"textTemplate\":\"\",\"startCharIdx\":156708,\"endCharIdx\":160717,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"GBNZT8MZbGApdYExI074neI9n1DTIK+ZA5tpb9rpIe0=\"}","__type__":"TEXT"},"7eb9ae6b-eb5c-4abb-8f1a-9e4a0d0add72":{"__data__":"{\"id_\":\"7eb9ae6b-eb5c-4abb-8f1a-9e4a0d0add72\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"b91a0be1-bd55-4df4-86a3-795d62f426c6\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5YCp3th5WkU+z1bJcmGrObdv1Lkjflf1Qqn8NpC2+A4=\"},\"NEXT\":{\"nodeId\":\"726564ed-ffc0-41e1-936a-953a31f4253f\",\"metadata\":{},\"hash\":\"3yk6xFR9KzelVJfagd2DqFI9KKtx1N9h2XX2mh+d4tA=\"}},\"text\":\"DeliveryIssue update cURL\\n\\ncurl --location --request PATCH 'http://api.simpliroute.com/v1/accounting/invoices/delivery-issues/<delivery_issue_id>/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\\"title\\\":\\\"delivery issue - new title\\\"}'\\n\\n\\nDeliveryIssue delete cURL\\n\\ncurl --location --request DELETE 'http://api.simpliroute.com/v1/accounting/invoices/delivery-issues/<delivery_issue_id>/' \\\\\\n--header 'Authorization: Token <your_token>'\\n\\na DeliveryIssue represents a reason for non-delivery or an issue at the time of delivery. The available values are defined by each account. The properties of a DeliveryIssue are:\\n\\n\\nName\\nType\\nMandatory\\nDescription\\n\\n\\n\\ntitle\\nstring\\nyes\\nissue name or title\\n\\n\\ndescription\\nstring\\nno\\nissue description\\n\\n\\ntype\\nstring\\nno\\nis this issue available for items or invoices. Expects one of ('item', 'invoice')\\n\\n\\nreference\\nstring\\nno\\nexternal identifier for this DeliveryIssue\\n\\n\\nexamples of creation, deletion and update of DeliveryIssue can be found at the right panel 👉\\nProducts and ProductCategory\\n\\nProduct creation cURL\\n\\ncurl --location --request POST 'https://api.simpliroute.com/v1/accounting/products/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '[{\\n\\\"title\\\": \\\"title\\\",\\n\\\"sku\\\": \\\"13231323\\\",\\n\\\"category\\\": 1\\n}]'\\n\\n\\nProduct update cURL\\n\\ncurl --location --request PATCH 'https://api.simpliroute.com/v1/accounting/products/ae5e625c-a1ec-413b-9a3f-abe3c2825e4d/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n    \\\"title\\\": \\\"new title\\\"\\n}'\\n\\n\\nProduct delete cURL\\n\\ncurl --location --request DELETE 'https://api.simpliroute.com/v1/accounting/products/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '[{\\n\\\"title\\\": \\\"title\\\",\\n\\\"sku\\\": \\\"13231323\\\"\\n}]'\\n\\nGiven the need for an InvoiceItem to be described from a \\\"class\\\", a \\\"template\\\", or a pre-existing definition, the Product entity was modeled.\\nSo then an InvoiceItem can be associated with a Product optionally.\\nA Product has the following properties:\\n\\n\\nName\\nType\\nMandatory\\nDescription\\n\\n\\n\\ntitle\\nstring\\nyes\\nProduct name or title\\n\\n\\nsku\\nstring\\nyes\\nstock keeping unit (SKU) of the Product\\n\\n\\nprice\\nfloat\\nno\\nprice per 1 unit of this Product\\n\\n\\ncategories\\nlist\\nyes\\nID of corresponding ProductCategory’s ID\\n\\n\\nA ProductCategory allows relating several Products in the same group or category.\\nA Product may or may not define a category, category is an optional property for Product.\\nThe properties of a ProductCategory are:\\n\\n\\nName\\nType\\nMandatory\\nDescription\\n\\n\\n\\nname\\nstring\\nyes\\nProductCategory name\\n\\n\\nparent\\nint\\nno\\nwhen dealing with hierarchy, parent represents the ProductCategory where this ProductCategory belongs.\\n\\n\\nThere are creation (POST), retrieval (GET), update (PATCH), and deletion (DELETE) services for Product and ProductCategory at the following endpoints\\nProduct - http://api.simpliroute.com/v1/accounting/products/\\nProductCategory - http://api.simpliroute.com/v1/accounting/product-categories/\\nexamples of creation, deletion and update of Product can be found at the right panel 👉\\nThe Checkout Process\\nThe full checkout operation is a composition of multiples services:\\n1) start the route\\n2) checkout a visit\\n3) store extra-field-values\\n4) store pictures\\n5) trigger notifications\\n1. Start the route\\nPerforming this action allow the system to recognize the start time of the route and update visit's ETA accordingly.\\n\\nstart a route cURL\\n\\ncurl --location --request POST 'https://api.simpliroute.com/v1/events/register/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n    \\\"date_time\\\": \\\"2024-04-24T14:20:45.446Z\\\", \\n    \\\"latitude\\\": \\\"-0.346644\\\", \\n    \\\"longitude\\\": \\\"-78.455834\\\", \\n    \\\"route_id\\\": \\\"24b87d96-813e-4176-a85b-d72171160000\\\", \\n    \\\"type\\\": \\\"ROUTE_STARTED\\\" \\n  }'\\n\\n\\n\\nParameter\\ntype\\ndescription\\n\\n\\n\\ndate_time\\nstring\\ndate and hour of start following the ISO 8601 standard (required)\",\"textTemplate\":\"\",\"startCharIdx\":160047,\"endCharIdx\":164077,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"tzFwpjUEbTnym0lSW0meBYWsltBPAXZAzXvNkEBkd8I=\"}","__type__":"TEXT"},"726564ed-ffc0-41e1-936a-953a31f4253f":{"__data__":"{\"id_\":\"726564ed-ffc0-41e1-936a-953a31f4253f\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"7eb9ae6b-eb5c-4abb-8f1a-9e4a0d0add72\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"hgOGdDeK4pZVM1dNGtRjs/9sh5hsCHGTKVs9AXcCTs0=\"},\"NEXT\":{\"nodeId\":\"6a4606be-d919-4949-944c-ecd2c5f99695\",\"metadata\":{},\"hash\":\"pjIJDXZSuzbgJVPv2THxhZW+6aPy2pUibnb9sQ+k0WA=\"}},\"text\":\"Parameter\\ntype\\ndescription\\n\\n\\n\\ndate_time\\nstring\\ndate and hour of start following the ISO 8601 standard (required)\\n\\n\\nlatitude\\nstring\\nlatitude at the point of route start\\n\\n\\nlongitude\\nstring\\nlongitude at the point of route start\\n\\n\\nroute_id\\nstring\\nidentifier or the route to start (required)\\n\\n\\ntype\\nstring\\nindicates the event, for this case value must be ROUTE_STARTED (required)\\n\\n\\n2. Checkout a visit\\nChecking out a visit allows the system to register the action and display data accordingly in our frontend applications\\n\\nVisit checkout (minimal payload) cURL\\n\\ncurl --location --request POST 'https://api.simpliroute.com/v1/mobile/visit/<visit_id>/checkout/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n    \\\"status\\\": \\\"completed\\\", \\n    \\\"checkout_time\\\": \\\"2024-04-24 13:24:53\\\", \\n    \\\"checkout_latitude\\\": -12.105513, \\n    \\\"checkout_longitude\\\": -76.965618, \\n    \\\"checkout_comment\\\": \\\"everything was OK\\\" \\n  }'\\n\\nMandatory fields are the following:\\n\\n\\nParameter\\ntype\\ndescription\\n\\n\\n\\nstatus\\nstring\\none of the following statuses: pending, completed, failed\\n\\n\\ncheckout_time\\nstring\\ndate and hour of checkout following the  ISO 8601 standard\\n\\n\\ncheckout_latitude\\nfloat\\nlatitude at the point of delivery\\n\\n\\ncheckout_longitude\\nfloat\\nlongitude at the point of delivery\\n\\n\\ncheckout_comment\\nstring\\noptional comment\\n\\n\\nOther available parameters are:\\n\\n\\nParameter\\ntype\\ndescription\\n\\n\\n\\ncheckout_user_id\\nint\\nby default the system will register the user asociated with the token as the performer of the checkout action. In case the user is different, use this field to provide the user id\\n\\n\\nsignature\\nstring\\nbase64 representation of the signature image as proof of delivery\\n\\n\\n3. Store extra-field-values\\n\\nStore extrafields values cURL\\n\\ncurl --location --request POST 'https://api.simpliroute.com/v1/routes/visits/multiple/extra-field-values' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '{\\n    \\\"json\\\": '{\\\\\\\"operation_nice\\\\\\\":true, \\\\\\\"other_extrafield\\\\\\\":\\\\\\\"a value\\\\\\\" }', \\\\\\\"visits\\\\\\\": [123, 456, 789]}'\\n\\nin case extrafields are defined to the given Visit, then extrafield values can be declared using this service\\nhttps://api.simpliroute.com/v1/routes/visits/multiple/extra-field-values\\nexpected payload example:\\n{'json': '{\\\"georeferencia_incorrecta\\\":false}', 'visits': [01407818]}\\nplease note that an extrafield value can be assigned to multiples visits.\\nalso note that extrafield_name (georeferencia_incorrecta in the example) must correponds to one of the available extrafields for the account.\\nvalue for an extrafield can be bool, int or string, depending on the extrafield definition.\\nAn example is available at the right panel 👉\\n4. Store pictures\\n\\nstore picture cURL\\n\\ncurl --location --request POST 'https://api.simpliroute.com/v1/routes/visits/multiple/pictures/' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--form 'visits=\\\"[12, 34, 56]\\\"' \\\\\\n--form 'image=@\\\"/path/to/image/picture.png\\\"'\\n\\nIn case you need to attach pictures to the checking out visit use this service:\\nhttps://api.simpliroute.com/v1/routes/visits/multiple/pictures/\\nExpected parameters are:\\n\\n\\nParameter\\ndescription\\n\\n\\n\\nimage\\npath to file using form request\\n\\n\\nvisits\\narray of visit_id to associate image to\\n\\n\\n5. Trigger notifications\\n\\nTrigger notifications cURL\\n\\ncurl --location --request POST 'https://api.simpliroute.com/v1/routes/visits/multiple/extra-field-values' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '\\n    {\\\"checkout_time\\\": \\\"2024-04-24T16:39:53.076Z\\\", \\\"visits\\\": [407726472]} '\\n\\nIn order to trigger sms, whatsapp, email and live-tracking notification, a final request must be executed using the service\\nhttps://api.simpliroute.com/v1/mobile/visit/multiple/checkout/notify\\nExpected parameters are:\\n\\n\\nParameter\\ndescription\\n\\n\\n\\ncheckout_time\\ndate and hour of checkout following the  ISO 8601 standard\\n\\n\\nvisits\\narray of visit_id to trigger notification of\",\"textTemplate\":\"\",\"startCharIdx\":163965,\"endCharIdx\":167943,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"oTjfgcJuanOe7XnrG1JVLciIhiQeGMEuEJukqT/ZVCE=\"}","__type__":"TEXT"},"6a4606be-d919-4949-944c-ecd2c5f99695":{"__data__":"{\"id_\":\"6a4606be-d919-4949-944c-ecd2c5f99695\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"726564ed-ffc0-41e1-936a-953a31f4253f\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"3yk6xFR9KzelVJfagd2DqFI9KKtx1N9h2XX2mh+d4tA=\"},\"NEXT\":{\"nodeId\":\"fe0587b8-dc43-4ce1-80c4-35e971cd190f\",\"metadata\":{},\"hash\":\"Da5w9iDR28veF7uaxY9aZ/uyHNt4/k/PYkR37bnZH9A=\"}},\"text\":\"image\\npath to file using form request\\n\\n\\nvisits\\narray of visit_id to associate image to\\n\\n\\n5. Trigger notifications\\n\\nTrigger notifications cURL\\n\\ncurl --location --request POST 'https://api.simpliroute.com/v1/routes/visits/multiple/extra-field-values' \\\\\\n--header 'Authorization: Token <your_token>' \\\\\\n--header 'Content-Type: application/json' \\\\\\n--data-raw '\\n    {\\\"checkout_time\\\": \\\"2024-04-24T16:39:53.076Z\\\", \\\"visits\\\": [407726472]} '\\n\\nIn order to trigger sms, whatsapp, email and live-tracking notification, a final request must be executed using the service\\nhttps://api.simpliroute.com/v1/mobile/visit/multiple/checkout/notify\\nExpected parameters are:\\n\\n\\nParameter\\ndescription\\n\\n\\n\\ncheckout_time\\ndate and hour of checkout following the  ISO 8601 standard\\n\\n\\nvisits\\narray of visit_id to trigger notification of\\n\\n\\nTMS: Transportation provider\\nIMPORTANT: This Service is only available for the clients that has contracted it.\\nThe following actions are provided for managing the entity Transportation Provider.\\nAn Authorization Header containing a valid Token is required.\\nFor accessing this resource the following URL is required: https://api-gateway.simpliroute.com/tms/api/v1\\nCreation Request\\nCreate a Transportation Provider in the system.\\n\\nBasic Request\\n\\n{\\n    \\\"trade_name\\\": \\\"FEDEX\\\",\\n    \\\"status\\\": \\\"active\\\",\\n    \\\"contact_person\\\": \\\"Doe Dawson\\\"\\n}\\n\\nHTTP method: POST\\nResource's path: /transportation-providers\\nBody:\\n\\n\\nAttributes\\nMandatory\\nData Type\\nDefault\\nDescription\\n\\n\\n\\ntrade_name\\nYes\\nString\\n\\nCommercial name for the provider\\n\\n\\nlegal_name\\nNo\\nString\\n\\nRegistered name in administrative institutions\\n\\n\\naccount_id\\nYes\\nInteger\\n\\nAccount’s id corresponding to the Token\\n\\n\\nstatus\\nNo\\nString\\nactive\\nRegistered name in administrative institutions\\n\\n\\ncontact_person\\nYes\\nString\\n\\nRepresentative person for contact purposes\\n\\n\\ncontact_email\\nNo\\nString\\n\\n\\n\\n\\nphone_number\\nNo\\nString\\n\\n\\n\\n\\naddress\\nNo\\nString\\n\\n\\n\\n\\ntax_id_number\\nNo\\nString\\n\\nLegal identification number\\n\\n\\nreference\\nNo\\nString\\n\\nIdentification code used by our clients for this entity\\n\\n\\nResponses\\n\\n\\nCode\\nDescription\\n\\n\\n\\n201\\nSuccessful creation\\n\\n\\n422\\nPayload has formatting errors\\n\\n\\n500\\nServer error\\n\\n\\nList Request\\nList all Transportation Providers.\\nHTTP method: GET\\nResource's path: /transportation-providers\\nBody: empty\\nResponses\\n\\n\\nCode\\nDescription\\n\\n\\n\\n200\\nSuccessful creation\\n\\n\\n500\\nServer error\\n\\n\\nRetrieve resource Request\\nObtaining an specific Transportation Provider.\\nHTTP method: GET\\nResource's path: /transportation-providers/{id}\\nBody: empty\\nNOTE: The desired resource id is specified in the path.\\nResponses\\n\\n\\nCode\\nDescription\\n\\n\\n\\n200\\nSuccessful creation\\n\\n\\n404\\nResource doesn't exist\\n\\n\\n500\\nServer error\\n\\n\\nUpdate Request\\nChange an specific Transportation Provider.\\nHTTP method: GET\\nResource's path: /transportation-providers/{id}\\nBody: Same as presented in Creation Request.\\nNOTE: The desired resource id is specified in the path.\\nResponses\\n\\n\\nCode\\nDescription\\n\\n\\n\\n200\\nSuccessful update\\n\\n\\n400\\nWrong request\\n\\n\\n403\\nUser without authorization\\n\\n\\n404\\nResource doesn't exist\\n\\n\\n422\\nPayoad has formatting errors\\n\\n\\n500\\nServer error\\n\\n\\nDelete Request\\nDeletes an specific Transportation Provider.\\nHTTP method: GET\\nResource's path: /transportation-providers/{id}\\nBody: empty\\nNOTE: The desired resource id is specified in the path.\\nResponses\\n\\n\\nCode\\nDescription\\n\\n\\n\\n204\\nSuccessful deletion\\n\\n\\n400\\nWrong request\\n\\n\\n403\\nUser without authorization\\n\\n\\n404\\nResource doesn't exist\\n\\n\\n500\\nServer error\\n\\n\\nAssign Transportation Provider to Vehicle with Transportation Provider Request\\nAssign transportation provider to a vehicle, creating a relation between them.\\nThis endpoint allows to assign several transportation providers in one request.\\n\\nBasic Request\\n\\n[\\n  {\\n    \\\"vehicle_id\\\": 2,\\n    \\\"transportation_provider_id\\\": \\\"14383454-keur-64f7-232e-901434a8f5ga\\\"\\n  },\\n  {\\n    \\\"vehicle_id\\\": 3,\\n    \\\"transportation_provider_id\\\": \\\"42383454-ba4a-4ff7-b52e-90544e8f5e44\\\"\\n  }\\n]\\n\\nHTTP method: POST\\nResource's path: /vehicles/transportation-providers\\nBody: Array of objects\\n\\n\\nAttributes\\nMandatory\\nData Type\\nDescription\\n\\n\\n\\nvehicle_id\\nYes\\nInteger\\nCommercial name for the provider\\n\\n\\ntransportation_provider_id\\nYes\\nUUID\\nRegistered name in administrative institutions\\n\\n\\nResponses\\n\\n\\nCode\\nDescription\\n\\n\\n\\n200\\nSuccessful request\\n\\n\\n404\\nResource doesn't exist\\n\\n\\n500\\nServer error\",\"textTemplate\":\"\",\"startCharIdx\":167141,\"endCharIdx\":171396,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"TAiz9g/O5VSPe8tYqe7Y+LQ6QY1qaISr0eICb2Sw9DQ=\"}","__type__":"TEXT"},"fe0587b8-dc43-4ce1-80c4-35e971cd190f":{"__data__":"{\"id_\":\"fe0587b8-dc43-4ce1-80c4-35e971cd190f\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"6a4606be-d919-4949-944c-ecd2c5f99695\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"pjIJDXZSuzbgJVPv2THxhZW+6aPy2pUibnb9sQ+k0WA=\"},\"NEXT\":{\"nodeId\":\"9b273e7d-4b36-4c17-a71a-2d2f156cc527\",\"metadata\":{},\"hash\":\"pIyXOQdr6oiRkPK67vltv2t7iLE0LubEJlSoOyYHC+w=\"}},\"text\":\"Attributes\\nMandatory\\nData Type\\nDescription\\n\\n\\n\\nvehicle_id\\nYes\\nInteger\\nCommercial name for the provider\\n\\n\\ntransportation_provider_id\\nYes\\nUUID\\nRegistered name in administrative institutions\\n\\n\\nResponses\\n\\n\\nCode\\nDescription\\n\\n\\n\\n200\\nSuccessful request\\n\\n\\n404\\nResource doesn't exist\\n\\n\\n500\\nServer error\\n\\n\\nGPS Integration\\nSimpliroute is able to integrate with your GPS in order to obtain important data \\n\\nPlease contact our Profesional services team to obtain technical details on how to set up this integracion at contact@simpliroute.com\\n\\nFrequency for sending data\\nIt is recommended to send a maximum of 1 data per vehicle every 20 seconds. for fleets\\nmore than 20 vehicles, 1 data per minute/vehicle, optimal frequency for a layout correct of the routes on the map.\\nLoss of signal and sending of stored local data\\nIn the event that one or more vehicles circulate in areas outside the satellite range or\\nbefore any factor that generates a loss of signal in the installed devices, recommends the use of “queues” (or “queues”) for data that could not be sent because of the above reason, and thus be able to send them later, when the signal is\\nreset. When the latter occurs, the system could send data\\naccumulated in the queue, and send them with a maximum time of 10 seconds between each one,\\nuntil sending all the saved objects.\\nImportant: It should be considered that the range of 10 seconds applies only to\\ndata stored locally as a result of signal loss. The range for\\nvehicles that are within satellite coverage maintain the recommended at the beginning of this\\ndocument.\\nAdditionally, the data must be sent independently, an arrangement with all\\nobjects can cause errors in the communication of the call.\\n\\nExample Input\\n\\n{\\n\\\"latitude\\\":-33.4311548,\\n\\\"longitude\\\":-70.5701852 ,\\n\\\"timestamp\\\":\\\"2019-02-20 10:35:00-00”,\\n\\\"vehicleId”: \\\"JKCT-81\\\",\\n\\\"providerName”: \\\"LOCALIZAGPS_AGROSUPER”,\\n}\\nIntegration of GPS and variable data with SimpliRoute\\nFor the integration of GPS data and additional variables with SimpliRoute (such as temperature or\\nhumidity), the following information must be sent, by POST method, to the endpoint\\n\\nPlease contact our Profesional services team to obtain technical details on how to set up this integracion at contact@simpliroute.com\\n\\nPayload details\\n\\n\\nAttributes\\nDescription\\n\\n\\n\\n\\n\\nlatitude\\nDecimal number up to 6 decimal digits.\\n\\n\\n\\n\\nlongitude\\nDecimal number up to 6 decimal digits.\\n\\n\\n\\n\\ntimestamp\\nDate and time in UTC with format YYYY-MM-DD HH:II:SS-00 Example: 2019-02-20 10:35:00-00\\n\\n\\n\\n\\nvehicleId\\nVehicle ID in SimpliRoute system.\\n\\n\\n\\n\\ntemperature\\nTemperature data, see “temperature” object. (backwards compatible but deprecated, it is recommended to send the temperature information in the alert object)\\n\\n\\n\\n\\nalert\\nAlert data, see “alert” object\\n\\n\\n\\n\\nproviderName\\nName of the vehicle GPS information provider.\\n\\n\\n\\n\\nTemperature object\\n\\n\\nAttributes\\nDescription\\n\\n\\n\\n\\n\\nvalue\\nDecimal number with the temperature in degrees Celsius.\\n\\n\\n\\n\\nalert_type\\nAlert type, “min” when the temperature is below the limit set or “max” when greater.\\n\\n\\n\\n\\nalert_message\\nMessage to be sent to the supervisor in charge of the trucks and the transport of refrigerated cargo.\\n\\n\\n\\n\\nAlert Object\\n\\n\\nAttributes\\nDescription\\n\\n\\n\\n\\n\\nname\\nAlert type identifier.\\n\\n\\n\\n\\ntype\\nalert type\\n\\n\\n\\n\\nvalue\\nAlert Value\\n\\n\\n\\n\\nmessage\\nMessage to be sent to the supervisor in charge of the trucks.\\n\\n\\n\\n\\nAlerts\\nIt is possible to send additional variables through an array of objects that maintain the\\nfollowing structure:\\n\\n\\nAttributes\\nDescription\\n\\n\\n\\n\\n\\nname\\nAlert type identifier.\\n\\n\\n\\n\\ntype\\nalert type\\n\\n\\n\\n\\nvalue\\nAlert Value\\n\\n\\n\\n\\nmessage\\nMessage to be sent to the supervisor in charge of the trucks.\\n\\n\\n\\n\\nAvailable alerts\\n\\n\\nNames\\n\\n\\n\\n\\n\\n\\ntemperature\\n\\n\\n\\n\\n\\ngeofence\\n\\n\\n\\n\\n\\nspeed\\n\\n\\n\\n\\n\\nhumidity\\n\\n\\n\\n\\n\\ndoor\\n\\n\\n\\n\\n\\nestado\\n\\n\\n\\n\\n\\nbrake\\n\\n\\n\\n\\n\\ntemperature_2\\n\\n\\n\\n\\n\\ntemperature_3\\n\\n\\n\\n\\n\\njamming\\n\\n\\n\\n\\n\\ntiredness\\n\\n\\n\\n\\n\\nfuel_cap\\n\\n\\n\\n\\n\\nfuel_variation\\n\\n\\n\\n\\n\\ndriver_door_open\\n\\n\\n\\n\\n\\nspeeding\\n\\n\\n\\n\\n\\nloss_of_load\\n\\n\\n\\n\\n\\nno_smoking o smoking\\n\\n\\n\\n\\n\\nDemurrage\",\"textTemplate\":\"\",\"startCharIdx\":171105,\"endCharIdx\":175057,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"JZY0D1y8Pt1OD2BKC3KCfkX1mqnkUhet353TfwbL6GI=\"}","__type__":"TEXT"},"9b273e7d-4b36-4c17-a71a-2d2f156cc527":{"__data__":"{\"id_\":\"9b273e7d-4b36-4c17-a71a-2d2f156cc527\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"fe0587b8-dc43-4ce1-80c4-35e971cd190f\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"Da5w9iDR28veF7uaxY9aZ/uyHNt4/k/PYkR37bnZH9A=\"},\"NEXT\":{\"nodeId\":\"f84b6a16-7807-4832-964a-fb329530a5e6\",\"metadata\":{},\"hash\":\"8jCT5QFug9EFJbJNCFq1z6F5Djs7rtyCzSkwl/br+D0=\"}},\"text\":\"Alert Object\\n\\n\\nAttributes\\nDescription\\n\\n\\n\\n\\n\\nname\\nAlert type identifier.\\n\\n\\n\\n\\ntype\\nalert type\\n\\n\\n\\n\\nvalue\\nAlert Value\\n\\n\\n\\n\\nmessage\\nMessage to be sent to the supervisor in charge of the trucks.\\n\\n\\n\\n\\nAlerts\\nIt is possible to send additional variables through an array of objects that maintain the\\nfollowing structure:\\n\\n\\nAttributes\\nDescription\\n\\n\\n\\n\\n\\nname\\nAlert type identifier.\\n\\n\\n\\n\\ntype\\nalert type\\n\\n\\n\\n\\nvalue\\nAlert Value\\n\\n\\n\\n\\nmessage\\nMessage to be sent to the supervisor in charge of the trucks.\\n\\n\\n\\n\\nAvailable alerts\\n\\n\\nNames\\n\\n\\n\\n\\n\\n\\ntemperature\\n\\n\\n\\n\\n\\ngeofence\\n\\n\\n\\n\\n\\nspeed\\n\\n\\n\\n\\n\\nhumidity\\n\\n\\n\\n\\n\\ndoor\\n\\n\\n\\n\\n\\nestado\\n\\n\\n\\n\\n\\nbrake\\n\\n\\n\\n\\n\\ntemperature_2\\n\\n\\n\\n\\n\\ntemperature_3\\n\\n\\n\\n\\n\\njamming\\n\\n\\n\\n\\n\\ntiredness\\n\\n\\n\\n\\n\\nfuel_cap\\n\\n\\n\\n\\n\\nfuel_variation\\n\\n\\n\\n\\n\\ndriver_door_open\\n\\n\\n\\n\\n\\nspeeding\\n\\n\\n\\n\\n\\nloss_of_load\\n\\n\\n\\n\\n\\nno_smoking o smoking\\n\\n\\n\\n\\n\\nDemurrage\\n\\n\\n\\n\\n\\n\\nInput example\\n\\n[\\n    {\\n\\\"latitude\\\": -33.4311548,\\n\\\"longitude\\\": -70.5701852,\\n\\\"timestamp\\\": \\\"2017-10-19 09:12:02-00\\\",\\n\\\"vehicleId\\\": \\\"<<vehicle_id>>\\\",\\n\\\"temperature\\\": {\\n\\\"value\\\": 2.4,\\n\\\"alert_type\\\": null,\\n\\\"alert_message\\\": null\\n},\\n\\\"alert\\\": {\\n\\\"name\\\": “door”,\\n\\\"type\\\": “open”,\\n\\\"value\\\": true,\\n“message”: “open door alert”\\n},\\n“alerts”: [\\n{\\n\\\"name\\\": “general”,\\n\\\"type\\\": “ºC”,\\n\\\"value\\\" 4,\\n“message”: “temperature is lower than 5 degress”\\n},\\n...\\n],\\n\\\"providerName\\\": \\\"<<provider>>\\\"\\n}\\n\\n\\nResponse example\\n\\n{\\n\\\"status\\\": \\\"Tracked\\\",\\n\\\"id\\\": \\\"2408269119724499\\\",\\n\\\"daily_status\\\": \\\"Updated\\\"\\n4\\n}\\n\\n\\nAPI response when exist one or more invalid alerts\\n``` json\\n\\n{\\n\\\"status\\\": \\\"Tracked\\\",\\n\\\"id\\\": \\\"2408269119724499\\\",\\n\\\"daily_status\\\": \\\"Updated\\\",\\n\\\"invalid_alerts\\\": []\\n\\\"invalid_alert\\\": []\\n}\\n```\\nFrequency for sending data\\nIt is recommended to send a maximum of 1 data per vehicle every 20 seconds. for fleets\\nmore than 20 vehicles, 1 data per minute/vehicle, optimal frequency for a layout\\ncorrect of the routes on the map.\\nLoss of signal and sending of stored local data\\nIn the event that one or more vehicles circulate in areas outside the satellite range or\\nbefore any factor that generates a loss of signal in the installed devices,\\nrecommends the use of “queues” (or “queues”) for data that could not be sent\\nbecause of the above reason, and thus be able to send them later, when the signal is\\nreset. When the latter occurs, the system could send data\\naccumulated in the queue, and send them with a maximum time of 10 seconds between each one,\\nuntil sending all the saved objects.\\nImportant: It should be considered that the range of 10 seconds applies only to\\ndata stored locally as a result of signal loss. The range for\\nvehicles that are within satellite coverage maintain the recommended at the beginning of this\\ndocument.\\nAdditionally, the data must be sent independently, an arrangement with all\\nobjects can cause errors in the communication of the call.\\nErrors\\nThe SimpliRoute API uses the following error codes:\\n\\n\\nError Code\\nMeaning\\n\\n\\n\\n400\\nBad Request -- Your request is invalid. Review the data type and information sent.\\n\\n\\n401\\nUnauthorized -- You are using the wrong API key to request the information.\\n\\n\\n404\\nNot Found -- The request didn't found results.\\n\\n\\n405\\nMethod Not Allowed -- You tried to access to the endpoint with an invalid method.\\n\\n\\n406\\nNot Acceptable -- You requested a format that isn't json.\\n\\n\\n500\\nInternal Server Error -- We had a problem with our server. Try again later.\\n\\n\\n503\\nService Unavailable -- We're temporarily offline for maintenance. Please try again later.\",\"textTemplate\":\"\",\"startCharIdx\":174261,\"endCharIdx\":177614,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"49Tw/l/I3SAFuvjin8PQ3329p/Rys2Sdd0koNrPq1KQ=\"}","__type__":"TEXT"},"f84b6a16-7807-4832-964a-fb329530a5e6":{"__data__":"{\"id_\":\"f84b6a16-7807-4832-964a-fb329530a5e6\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"9b273e7d-4b36-4c17-a71a-2d2f156cc527\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"pIyXOQdr6oiRkPK67vltv2t7iLE0LubEJlSoOyYHC+w=\"},\"NEXT\":{\"nodeId\":\"62b51027-5df2-4437-b91a-969441e8985f\",\"metadata\":{},\"hash\":\"unIlCUcWeyW+nrnClonITy68Xg3Gl8KZzOlqOW9b3vc=\"}},\"text\":\"Error Code\\nMeaning\\n\\n\\n\\n400\\nBad Request -- Your request is invalid. Review the data type and information sent.\\n\\n\\n401\\nUnauthorized -- You are using the wrong API key to request the information.\\n\\n\\n404\\nNot Found -- The request didn't found results.\\n\\n\\n405\\nMethod Not Allowed -- You tried to access to the endpoint with an invalid method.\\n\\n\\n406\\nNot Acceptable -- You requested a format that isn't json.\\n\\n\\n500\\nInternal Server Error -- We had a problem with our server. Try again later.\\n\\n\\n503\\nService Unavailable -- We're temporarily offline for maintenance. Please try again later.\\n\\n\\nDatamart\\nDatarmat is a REST API for data querying. To use this API, you will need a token that you can obtain from Customer Support.\\nThis API is located at https://api-gateway.simpliroute.com/datamart\\ncurl --location 'https://api-gateway.simpliroute.com/datamart/v1/visits' \\\\\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiZG9jdW1lbnRhdGlvbl9leGFtcGxlIiwiZXhwIjoxOTA2Mzg0MjY1LjB9.f2jx7t95gcZPNhUh31XIVv_9nXN5fYa04Om76U29iu4'\\n\\nAn Authorization header is expected with a Bearer token.\\nAs an example, the cURL at the right panel requests Visits data 👉\\nHow does pagination work?\\nDatamart delivers a maximum of 500 results per page. To request the next page, use the query parameter offset. For example, to request the second page of Visits, you would use /datamart/v1/visits?offset=500\\nIt is also possible to request pages with fewer than 500 results using the limit query parameter. For example:\\n/datamart/v1/visits?limit=10&offset=20\\nThe response headers always include Content-Range, which indicates the page size and the total number of results. For cases when the number of results is higher the 100.000 the total won't be provided unless you requested with the header: Prefer: count=estimated\\nWhat data is available in Datamart?\\nHere's a list of currently available services:\\n\\n/v1/visits: provides access to Visits. For more information about a Visit properties check here\\n/v1/plans: provide access to Plans.For more information about a Plan properties check here\\n/v1/routes: provide access to Plans.For more information about a Plan properties check here\\n/v1/extrafielddefinitions: an extrafield allows checkout forms customization.\\n/v1/extrafieldoptions: if an extrafield uses prefined options, they can be found in this service.\\n/v1/vehicles: provides access to Vehicles. For more information about a Vehicle properties check here\\n/v1/vehicles_skills: list of Skills asociated to a Vehicle.\\n/v1/fleets: a fleet represents a groupt of Vehicles.\\n/v1/vehicles_fleets: relationship between Fleet and Vehicles.\\n/v1/fleets_users: designed User (usually of rol driver) asociated with a given fleet.\\n/v1/observations: during the checkout an Observation can be attached to the Visit. This service provices access to those observations.\\n/v1/skills: list the available skills. For more details check here\\n/v1/tags: one or more Tags can be attached to a Visit. Here is the list of available Tags.\\n/v1/zones: a Zone represents a geographical area. Here the list of Zones defined for your account(s).\\n/v1/vehicles_zones: relationship between Vehicle and Zones.\\n/v1/visits_skills_optional: list of optional Skills defined for a Visit.\\n/v1/visits_skills_required: list of requiered Skills defined for a Visit.\\n/v1/visits_tags: list of Tags attached to a Visit.\\n/v1/visits_extrafieldvalues: list the values given to Extrafields during the Checkout, for a Visit.\\n/v1/visititems: access Visit Items, representing products or services tied to a visit. For more information about a Visit Item's properties, check here.\\n/v1/accounts: provides access to Accounts related to the Datamart role. It includes information about the account and its associated organization.\\n/v1/users: list of Users in your account. Web users, admins, monitors and drivers can be found here.\\n/v1/invoices: access Invoices, which represent financial documents. For more information about an Invoice's properties, check here.\\n/v1/invoiceitems: access Invoice Items, representing products or services listed in an Invoice. For more information about an Invoice Item's properties, check here.\\n\\nWhat filtering and sorting options does Datamart offer?Basic filtering\\nThis filter allows to query especific properties, for example:\\n/v1/visits?select=id,address\\nWill result in responses with id and address properties only\\nConditional filtering\\nGive a condition to query for especific values. For example:\\n/v1/visits?visit_type_id=eq.5335\\nWill responde with Visit on which visit_type_id is equal to 5335.\\nAside from eq operator, gt or lt are available too.\",\"textTemplate\":\"\",\"startCharIdx\":177041,\"endCharIdx\":181658,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"crienPxIob/B2WpkM7y3pqP583dZE04OCAAmKgo4tbA=\"}","__type__":"TEXT"},"62b51027-5df2-4437-b91a-969441e8985f":{"__data__":"{\"id_\":\"62b51027-5df2-4437-b91a-969441e8985f\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"0ac2fc43-bffa-4b53-b0a4-6cef636a9070\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4=\"},\"PREVIOUS\":{\"nodeId\":\"f84b6a16-7807-4832-964a-fb329530a5e6\",\"metadata\":{\"url\":\"https://documentation.simpliroute.com\"},\"hash\":\"8jCT5QFug9EFJbJNCFq1z6F5Djs7rtyCzSkwl/br+D0=\"}},\"text\":\"shell\\njava\\njavascript\",\"textTemplate\":\"\",\"startCharIdx\":169,\"endCharIdx\":190,\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"tsQPSWltHKfRpO8aTXSVbk0BAPGVk39DZoeBwbQBbJ8=\"}","__type__":"TEXT"}},"docstore/metadata":{"0ac2fc43-bffa-4b53-b0a4-6cef636a9070":{"docHash":"5DLnP06PN9RNGL6lDxK5sFgZ1qKgutihYp1ehbh4nN4="},"50703085-0045-435b-ba16-43efb2828bcf":{"docHash":"zqigCMYsyU8v+4TLKkN5l5v6gqez/WuA7t0Do+6svLU=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"8d3a9a51-58e0-4edc-bbe5-180e3bcb7af5":{"docHash":"Q9nUiisKEHSUdjV3srGsBQC4AHKpi2B9CJNrCswc91g=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"059ada05-b1e8-4963-88b5-096cf239b50b":{"docHash":"0PbzQ1tCzWn8V46gFhuttN4pGagEnf4+dO1HRWHMVa4=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"025b083e-7e17-4dac-897a-55e1f2f5886a":{"docHash":"a2JSUQEAR5v+p4utcb7WmT8JqUyBl2BsV4Oya8RFaiA=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"9a349394-68ef-42dd-be00-bac3c8ff9572":{"docHash":"rquknsUaQurCvG3g6VpaVITcExvZDBuVXrStCsbkClY=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"ef8c2087-edf4-4a48-af0f-6e7d3c970e42":{"docHash":"xfycK0plKFfnnG+q8G2z3gHq3h9YPPi3mnyElWRttOI=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"9eb5b284-4965-4636-a196-891351a37834":{"docHash":"oGgUcJoHLXtUg2oQBxHR8MsxpWfx1FzFFtziVOzSKQY=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"17e733ec-d45c-4c08-b029-d7d9b13f6d2c":{"docHash":"sy0nuKYuNDzMiI5Z87JLxkslaRIlcEozrREZjl9pYjo=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"f85ebe9b-b4d8-4eac-aa88-f8959c5ba152":{"docHash":"M7IlFtmpfidkWplfuYCKDegiwGLdyxWxIjgnG2Oc73k=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"9413b118-b97d-43c3-90ae-128e2e8265c8":{"docHash":"iUZmdbqEvDn9QTFoGKhc9SaRydy7AxgjQeDAQICWPCE=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"46b7329b-c235-4720-8847-e9a6029a6d7f":{"docHash":"aQjYHdYt6bXlP0Gl3Y8kFOhJ3lkbo1LpTVDKwT3t/ZU=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"c7bdf3cb-9f14-4352-a864-b1fd93726d3e":{"docHash":"2zhk9xFQt/tTC+TOXRKkpqiCFHvYttCmiSqRmncDvcc=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"8d7ce7f2-3fac-4aed-bde0-7615a488b708":{"docHash":"xsy37qqS9LNLBfuJksC8auH/DO/I4elg9LTTnt/U89U=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"f1c54ec4-d3ea-4bd7-b961-a130ab92d47a":{"docHash":"fWjiDcmGxeXb0atPGOePTkmuqx2Z9hkIudXieVSZ6EU=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"9e6deb85-62b5-42ac-bf53-804998bbf036":{"docHash":"IyFeYy8m+CgiL1fDQxpiLe+uBQS/o+25PDF4SoZ7ypE=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"bd1ccc8d-3e79-4bca-b5a8-556d1201da9d":{"docHash":"hodbaLuoFFKySt0sOIopeh2YnF5K173RjTL3rgKgfrk=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"27dd6a24-29a7-4175-906d-9fb3a4029f54":{"docHash":"Eek2kFAhUy2PeLrWwWRbjJgqkNmolbS6ZzuJOuqXC1I=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"b6936783-985a-4f9b-ac52-d933edd029d1":{"docHash":"Hc86ryOrXsXsgNTExBMdga9E+Rk72y4jnaHq0B1OkBQ=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"1bab20c5-8b68-4c5c-b73e-4ab935c16b48":{"docHash":"pyDM9cKeQHn/Wmx07TQwwbGXPh4ubcPk/cIK4VuegM8=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"aac21bef-e5a5-4fec-b153-1b9d876226f3":{"docHash":"sJdxZKbxS2S4fDFVjrWBZee0I9GtAp5+zMMuKf6R3jM=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"ec030761-b893-4286-8695-eb965e074cc7":{"docHash":"XfLA6hBh4h2j4DGBDG72pj711OxucCELml/ZYqkJ4uo=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"a9102445-618e-4f9e-a8d0-425ad49406a4":{"docHash":"g8dWP/xehMKf5gQey/Qx2OkJFBw02G/AhnZt3JMFBS4=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"cf191b37-b4d9-4ed0-8050-8f05a0aceb42":{"docHash":"4W2O0qy8Js3kpmd+nZKll9hKlyPxUSsEhu+XkcP24So=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"4e066f8e-d8dc-4936-812a-f2c6c0719fec":{"docHash":"G/7FpIX7haMEFDk/xQhkyWNmoPOpZ0RZYLk6iGm6K7A=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"213300e1-d1f8-470a-9626-80acf0324812":{"docHash":"AylI44I71G6Y7nMuQoHUBVyF2bwcodVqV8ogFuXhdII=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"6523073d-159c-4ec9-9b91-8901c7e92984":{"docHash":"GkDT6dKgBAKKLmT7oerwiwK1la5zq1x+rhXValc0l1U=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"3f4f10f1-fd26-49c5-9f33-d5e516a6124f":{"docHash":"w6yZuXRpG7+vFz0OzuWlDauexjbdd/KPdKkmPmuA6dM=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"22945d11-69ba-44a4-8e12-51923bea646a":{"docHash":"cFTWyI2FvLK7x571mByFzBoyheNSb4Nn5O0ntX7INkw=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"63999dc7-7f62-4d32-b48b-7c8407f2cd08":{"docHash":"D7R7wpuYm/dqZT3U3Ct5tDb0JMAfdUMGI2PiUcCymd8=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"623d600c-3e0a-42f1-a8f7-71a4553651a0":{"docHash":"Y405jqsDH1uT16l4+E24q9tUjMpm44r/INM3ckL8rH8=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"9b7f3fda-9dba-4e75-af02-bde07e67668b":{"docHash":"dOUVG64n4bU6loIcmJNRe/eqOXGpiPi4XqEf4OlXikk=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"7a80b17a-41c4-4f6b-9238-55eece0d1b2f":{"docHash":"zfd87M+mMh8ESfAeOmC33tq+wkBBYDg0HB+YLI4zV4g=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"2862ce31-b7e8-4df7-b5cb-3da960e40cea":{"docHash":"qYUTtJXfPMU0XznLMCQseU87EJcbrdrJfBsO0xhuQ+s=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"8ad4bdc4-5df2-4c4a-a16b-726b486ff52e":{"docHash":"u2g/coEBtYNS84PqbsX7YUpQAj5Fs7111/rh//bKQE4=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"17c12363-b442-4b35-a812-5cf7119ff3ac":{"docHash":"thnbIsix6s2hhDij5oSb9/wm1Tx9yBZVxRZIQj9RZ8I=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"54577f93-6199-443d-9136-3fc8d7f535ad":{"docHash":"iSRTinszAEcoFwGHsxUM/4FRo4xBRSu0eKnk22ResHM=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"17f58786-3ba7-4397-a48a-bc9515e83d38":{"docHash":"imCsQ62HDGdcG1rMhzp5KW6r/dnNgn+bsDYfhhmaRls=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"4da54db5-e3ba-42a5-aec4-c8ff04b2bb1a":{"docHash":"5CJ3CYcd9gV/AQsYLMnODWhyC4lUmWOM4rG33AcwZ6k=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"e8185390-5aaf-44a6-82f2-7d4fae5711ed":{"docHash":"RiqfT/83VL+WyUbuGwzsmlyk2SIn0U3J4i/GitTyXwU=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"32c383a8-80f3-466d-8e41-ee4261e0acbd":{"docHash":"wWlUCqqSD/AG2IsS35qTRfHVjCfGh53jI7ZtyqXpDkI=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"b0a58491-2146-471e-a2c3-8af7de790370":{"docHash":"VSyW57E39bQKgQA+OntnsDao67SitxhRC5CJzptgbN4=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"2f82f283-18bb-45c5-b648-f34680029790":{"docHash":"KVpD3tzIcetZs10ljg96WJUCxMtMIl+7pEG4gR02gQI=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"3396de2e-c4b0-42c9-8a5e-c41651ecc243":{"docHash":"aVmJRozCZN/DDJQB2iuKpBZCgnIBrg6TVbQxG/R9voc=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"06ef87cf-65a1-476f-873a-06f53ba34af2":{"docHash":"ZGZAqXmAWzAZTiJx146xnQWOLrdZeOFE0wzUTLk4zNg=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"53095075-7106-48f6-94f8-ef9c474416bf":{"docHash":"bYT49dSdffAIqm6rbxqGhpn6y2/+kc8+vbjyUqc4Hfc=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"99bff608-c83a-47a1-883f-e06e6e9f5a23":{"docHash":"S+Y7qrrBFVCHLxwaP+mSAlpEW7QXY8Pq2alkfVSuev0=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"5a06fe6d-0370-434f-9f31-45c5d95126a2":{"docHash":"f+wjtu9YwXjgAbq3JqYHcyeiR+a2lMDCm7ska/143ac=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"b91cee73-4e6d-4f24-98cd-7359731b5678":{"docHash":"/+nSgzHG7jjzWSGPLL56RMtAqXlwwFVUJXbhWNNOaWE=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"e64a76e8-1bb6-4790-8264-8e3d5783e75c":{"docHash":"9tA7p0o8A2gW/NPa/lVUYHK/1dAtmBqp1IdzO/isQg0=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"94f68ca1-f880-4054-a010-7e66275bac2d":{"docHash":"QXTZW/j7XF48OPdU1IfkIbawXs7WYEkYUmUmpeY+sCQ=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"00b36492-9006-418b-b76a-e51aacb77932":{"docHash":"67PEGgLYyj6NU8EcpzFTzBrCmVJRAxQSXcyDKTMXReA=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"614f485a-a470-4a74-b42c-4a25ab8b680f":{"docHash":"vEpjqpOEorbrWoR6LywLS551ByqzhIVUIVjmwqoN6xc=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"1387f4bc-119e-4a36-8e9b-60f251758a35":{"docHash":"2Om6yVQSv50rE45xEj9pVAXj1M0N5CkA8BCam4P5E/g=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"46d5c315-bcaa-4eec-8fb2-16aa86f5ed2e":{"docHash":"FFwz47yMfJx0aZiMeqBJaiAxOuTHi5ttgWKha+4d/WI=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"fc7e6539-0d5f-40a1-b7ee-75ae71be1e49":{"docHash":"wSMdb35ZV0FMamDQVpNusi/xbGkb6Rkm7H//ushGJ6Q=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"d6fd016b-a46f-4887-bd1d-2c3d0ba8e122":{"docHash":"PxyV5uw/jY/8HwfCvB5QHnKKhasqtW16+f0m1j6xo/I=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"b91a0be1-bd55-4df4-86a3-795d62f426c6":{"docHash":"GBNZT8MZbGApdYExI074neI9n1DTIK+ZA5tpb9rpIe0=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"7eb9ae6b-eb5c-4abb-8f1a-9e4a0d0add72":{"docHash":"tzFwpjUEbTnym0lSW0meBYWsltBPAXZAzXvNkEBkd8I=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"726564ed-ffc0-41e1-936a-953a31f4253f":{"docHash":"oTjfgcJuanOe7XnrG1JVLciIhiQeGMEuEJukqT/ZVCE=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"6a4606be-d919-4949-944c-ecd2c5f99695":{"docHash":"TAiz9g/O5VSPe8tYqe7Y+LQ6QY1qaISr0eICb2Sw9DQ=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"fe0587b8-dc43-4ce1-80c4-35e971cd190f":{"docHash":"JZY0D1y8Pt1OD2BKC3KCfkX1mqnkUhet353TfwbL6GI=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"9b273e7d-4b36-4c17-a71a-2d2f156cc527":{"docHash":"49Tw/l/I3SAFuvjin8PQ3329p/Rys2Sdd0koNrPq1KQ=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"f84b6a16-7807-4832-964a-fb329530a5e6":{"docHash":"crienPxIob/B2WpkM7y3pqP583dZE04OCAAmKgo4tbA=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"},"62b51027-5df2-4437-b91a-969441e8985f":{"docHash":"tsQPSWltHKfRpO8aTXSVbk0BAPGVk39DZoeBwbQBbJ8=","refDocId":"0ac2fc43-bffa-4b53-b0a4-6cef636a9070"}},"docstore/ref_doc_info":{"0ac2fc43-bffa-4b53-b0a4-6cef636a9070":{"nodeIds":["50703085-0045-435b-ba16-43efb2828bcf","8d3a9a51-58e0-4edc-bbe5-180e3bcb7af5","059ada05-b1e8-4963-88b5-096cf239b50b","025b083e-7e17-4dac-897a-55e1f2f5886a","9a349394-68ef-42dd-be00-bac3c8ff9572","ef8c2087-edf4-4a48-af0f-6e7d3c970e42","9eb5b284-4965-4636-a196-891351a37834","17e733ec-d45c-4c08-b029-d7d9b13f6d2c","f85ebe9b-b4d8-4eac-aa88-f8959c5ba152","9413b118-b97d-43c3-90ae-128e2e8265c8","46b7329b-c235-4720-8847-e9a6029a6d7f","c7bdf3cb-9f14-4352-a864-b1fd93726d3e","8d7ce7f2-3fac-4aed-bde0-7615a488b708","f1c54ec4-d3ea-4bd7-b961-a130ab92d47a","9e6deb85-62b5-42ac-bf53-804998bbf036","bd1ccc8d-3e79-4bca-b5a8-556d1201da9d","27dd6a24-29a7-4175-906d-9fb3a4029f54","b6936783-985a-4f9b-ac52-d933edd029d1","1bab20c5-8b68-4c5c-b73e-4ab935c16b48","aac21bef-e5a5-4fec-b153-1b9d876226f3","ec030761-b893-4286-8695-eb965e074cc7","a9102445-618e-4f9e-a8d0-425ad49406a4","cf191b37-b4d9-4ed0-8050-8f05a0aceb42","4e066f8e-d8dc-4936-812a-f2c6c0719fec","213300e1-d1f8-470a-9626-80acf0324812","6523073d-159c-4ec9-9b91-8901c7e92984","3f4f10f1-fd26-49c5-9f33-d5e516a6124f","22945d11-69ba-44a4-8e12-51923bea646a","63999dc7-7f62-4d32-b48b-7c8407f2cd08","623d600c-3e0a-42f1-a8f7-71a4553651a0","9b7f3fda-9dba-4e75-af02-bde07e67668b","7a80b17a-41c4-4f6b-9238-55eece0d1b2f","2862ce31-b7e8-4df7-b5cb-3da960e40cea","8ad4bdc4-5df2-4c4a-a16b-726b486ff52e","17c12363-b442-4b35-a812-5cf7119ff3ac","54577f93-6199-443d-9136-3fc8d7f535ad","17f58786-3ba7-4397-a48a-bc9515e83d38","4da54db5-e3ba-42a5-aec4-c8ff04b2bb1a","e8185390-5aaf-44a6-82f2-7d4fae5711ed","32c383a8-80f3-466d-8e41-ee4261e0acbd","b0a58491-2146-471e-a2c3-8af7de790370","2f82f283-18bb-45c5-b648-f34680029790","3396de2e-c4b0-42c9-8a5e-c41651ecc243","06ef87cf-65a1-476f-873a-06f53ba34af2","53095075-7106-48f6-94f8-ef9c474416bf","99bff608-c83a-47a1-883f-e06e6e9f5a23","5a06fe6d-0370-434f-9f31-45c5d95126a2","b91cee73-4e6d-4f24-98cd-7359731b5678","e64a76e8-1bb6-4790-8264-8e3d5783e75c","94f68ca1-f880-4054-a010-7e66275bac2d","00b36492-9006-418b-b76a-e51aacb77932","614f485a-a470-4a74-b42c-4a25ab8b680f","1387f4bc-119e-4a36-8e9b-60f251758a35","46d5c315-bcaa-4eec-8fb2-16aa86f5ed2e","fc7e6539-0d5f-40a1-b7ee-75ae71be1e49","d6fd016b-a46f-4887-bd1d-2c3d0ba8e122","b91a0be1-bd55-4df4-86a3-795d62f426c6","7eb9ae6b-eb5c-4abb-8f1a-9e4a0d0add72","726564ed-ffc0-41e1-936a-953a31f4253f","6a4606be-d919-4949-944c-ecd2c5f99695","fe0587b8-dc43-4ce1-80c4-35e971cd190f","9b273e7d-4b36-4c17-a71a-2d2f156cc527","f84b6a16-7807-4832-964a-fb329530a5e6","62b51027-5df2-4437-b91a-969441e8985f"],"extraInfo":{}}}}