{"docstore/data":{"d6449528-d076-4101-9b93-8de75747f453":{"indexId":"d6449528-d076-4101-9b93-8de75747f453","nodesDict":{"66c81fcf-d9ca-425a-89c4-be4ee6f1a650":{"id_":"66c81fcf-d9ca-425a-89c4-be4ee6f1a650","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"NEXT":{"nodeId":"843c8592-d937-4a32-b554-6688eb05a013","metadata":{},"hash":"xHkerWeG9T3d/M4ujQ2gXQaZ5ajDJOCS3lGYwgqQVJY="}},"text":"Greenscreens.ai Connect API documentation\n\n\n\n\n\n\n\n\n\n\n\nAuthenticationDirect link integration with greenscreens.aiServices and endpointsAuthAuthpostAuth tokenanalyticsAnalyticsgetTop carriersbidsBidspostSave bidgetGet current user bidspatchUpdate biddelDelete bidgetSearch carrierspostAccept bidpostSend bid requestgetGet ten most recent bids for a lanegetGet bid information by keydatalakeDatalakepostDatalake historymarketintelligenceMarketIntelligencepostList of GreenScreens indicesgetNegotiation advice for provided lanepredictionPredictionpostLane rate predictionpostBatch lane rate predictiongetLane rate prediction historypostLane rate prediction feedbackpostLane network rate predictionpostBatch lane network rate predictionpricingPricingpostCreate a priority rulegetGet priority rulesgetGet a priority ruleputUpdate a priority ruledelDelete a priority rulepostCreate a combination rulegetGet combination rulesgetGet a combination ruleputUpdate a combination ruledelDelete a combination rulepostCalculate pricing, based on TPL datapostGet sell rates of partner brokersprofilesProfilesgetGet brokerspostCreate brokerquotesQuotesgetGet quotespostImport a quotepostImport quotes in a batchtmsconnectorTMSpostImport loadpostImport load in to the provided companypostImports loads in batchespostImports loads in batches in to the provided companypostImport carrierpostImport carrier in to the provided companypostImport carriers in batchespostImport shipperpostImport a shipper in to the provided companypostImport shippers in batchesAPI docs by Redoclygreenscreens.ai Connect (1.3.3)API Support: support@greenscreens.ai URL: https://connect.greenscreens.ai Terms of Servicegreenscreens.ai platformAuthenticationgreenscreens.ai API offers OAuth2 Bearer JWT token based authentication.\nOAuth2 - an open protocol to allow secure authorization in a simple \nand standard method from web, mobile and desktop applications.\nDirect link integration with greenscreens.aiOne of the simplest ways to integrate greenscreens.ai in to your app is by using the \ndirect link method.\nLink format:\nhttps://app.greenscreens.ai/rates?originZip={}&destinationZip={}&transportType={}\n\n\noriginZip - 5 digit USA ZIP code of the origin point\n\ndestinationZip - 5 digit USA ZIP code of the destination point\n\ntransportType - one of supported equipment types VAN, REEFER or FLATBED\n\nOPTIONAL: pickupDate - pickup date string in ISO format e.g. \"2022-04-06T08:00:00.000+03:00\" when not encoded\n\nOPTIONAL: originCityState - city and state separated by a space symbol, signifying the origin point. \nCan be used instead of originZip if you do not have a zip code of the location. \nShould not be used together with originZip.\n\nOPTIONAL: destinationCityState - city and state separated by a space, signifying the destination point. \nCan be used instead of destinationZip if you do not have a zip code of the location. \nShould not be used together with destinationZip.\n\nOPTIONAL: customer - name of the customer company\n\nOPTIONAL: commodity - description of the transported commodity\n\nOPTIONAL: weight - weight of the load in lbs\n\nOPTIONAL: deliveryDate - delivery date string in ISO format e.g. \"2022-04-06T08:00:00.000+03:00\" when not encoded\n\nOPTIONAL: extraStops - any extra stops between origin and destination. Value is an array of strings with up to 10 elements\nin the format of {order}_{type}_{country}_{address} \ntypes are {numbers 0-9}_{CITY or ZIP}_{US or CA}_{if ZIP then 5+ digits, if CITY then city state string separated by space}Examples (don't forget to encode the url):\nhttps://app.greenscreens.ai/rates?originZip=12345&destinationZip=62345&transportType=VAN\n\nhttps://app.greenscreens.ai/rates?originCityState=Wausau%20WI&destinationCityState=Evansville%20IN&transportType=VAN\n\nhttps://app.greenscreens.ai/rates?originZip=12345&destinationCityState=Evansville%20IN&transportType=VAN\n\nhttps://app.greenscreens.ai/rates?originZip=12345&destinationZip=62345&extraStops=0_ZIP_US_28086&extraStops=1_CITY_US_Portland%20OR&transportType=VAN\n\nExample usage:\n<button\n  onclick=\"location.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"5P89JL0ltPz806OP/aqqE5Lj7cG6OHefoelp0ra9gHc="},"843c8592-d937-4a32-b554-6688eb05a013":{"id_":"843c8592-d937-4a32-b554-6688eb05a013","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"66c81fcf-d9ca-425a-89c4-be4ee6f1a650","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"5P89JL0ltPz806OP/aqqE5Lj7cG6OHefoelp0ra9gHc="},"NEXT":{"nodeId":"e4c0432b-c538-4f3a-8897-51a92b822561","metadata":{},"hash":"H56EgVOo1VJDBFw9AXfvWRaOSDA9EHN2EZjbfmMiHWg="}},"text":"Examples (don't forget to encode the url):\nhttps://app.greenscreens.ai/rates?originZip=12345&destinationZip=62345&transportType=VAN\n\nhttps://app.greenscreens.ai/rates?originCityState=Wausau%20WI&destinationCityState=Evansville%20IN&transportType=VAN\n\nhttps://app.greenscreens.ai/rates?originZip=12345&destinationCityState=Evansville%20IN&transportType=VAN\n\nhttps://app.greenscreens.ai/rates?originZip=12345&destinationZip=62345&extraStops=0_ZIP_US_28086&extraStops=1_CITY_US_Portland%20OR&transportType=VAN\n\nExample usage:\n<button\n  onclick=\"location.href='https://app.greenscreens.ai/rates?destinationZip=62345&originZip=12345&transportType=VAN'\"\n  type=\"button\">Quote new lane\n<button>\n\nServices and endpointsThe most versatile (and involving the most work) way of integration is by using our API directly.Below you can find a list of servises and endpoints available for usage.AuthAuthentication service\nAuth token The request for the access token should look like this.curl -X POST \"https://api.greenscreens.ai/v1/auth/token\" -H \"accept: application/json\" \\\n-H \"Content-Type: application/x-www-form-urlencoded\" \\\n-d \"grant_type=client_credentials&client_id=external-app&client_secret=78aaff56-7b86-4c92-9a1d-355f167c0619\"\n\nYou should replace client_id and client_secret with id and secret provided to you by greenscreens.If an access_token that you use expires, or you receive an unauthenticated error,\nyour application will need to obtain a new access_token.Request Body schema: application/x-www-form-urlencodedgrant_typerequiredstring Value: \"client_credentials\"  Type of authorization flow, in this case should always be client_credentials\nclient_idrequiredstring Client id provided by greenscreens\nclient_secretrequiredstring Client secret provided by greenscreens\nResponses200 OK\n401 Authorization information is missing or invalid\npost/auth/tokenSandbox server\nhttps://sandboxapi.greenscreens.ai/v1/auth/tokenTesting server\nhttps://testapi.greenscreens.ai/v1/auth/tokenProduction server (uses live data)\nhttps://api.greenscreens.ai/v1/auth/token Request samples PayloadContent typeapplication/x-www-form-urlencodedCopygrant_type=client_credentials&client_id=external-app&client_secret=78aaff56-7b86-4c92-9a1d-355f167c0619 Response samples 200Content typeapplication/jsonCopy{\"access_token\": \"eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI3cmFncld0MlJuVjZaeFdZa2JLZDktOGZYV202UlRCU3Q0WE1IYWdpZFQwIn0.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"cJMq45FLl9F/yFmGf0q1L2Zprk3AXYgfFHqVcwYX6nw="},"e4c0432b-c538-4f3a-8897-51a92b822561":{"id_":"e4c0432b-c538-4f3a-8897-51a92b822561","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"843c8592-d937-4a32-b554-6688eb05a013","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"xHkerWeG9T3d/M4ujQ2gXQaZ5ajDJOCS3lGYwgqQVJY="},"NEXT":{"nodeId":"2c08febe-6bb1-4799-8133-4382f1df240b","metadata":{},"hash":"isEAjPpwnVgUmbuKM8R2il11IGP1MnSEe/OeUOE4ypU="}},"text":"eyJqdGkiOiIyM2VjNzg3Ny0yMzBjLTRkODktYmYyNy0zMWFmZWQ5MDMyYjciLCJleHAiOjE1NzU0ODEwMTMsIm5iZiI6MCwiaWF0IjoxNTc1NDc3NDEzLCJpc3MiOiJodHRwOi8vdGVzdGluZy5rZXkuY2FyZ2dvLmludC9hdXRoL3JlYWxtcy9DYXJnZ29TZWN1cml0eVJlYWxtIiwiYXVkIjoiYWNjb3VudCIsInN1YiI6IjhhYzNjYjljLTA1MGQtNDUzZS1hNGRhLTEzOGE5MmZlZmExNCIsInR5cCI6IkJlYXJlciIsImF6cCI6ImNhcmdnby1tZG0tYXBwIiwiYXV0aF90aW1lIjowLCJzZXNzaW9uX3N0YXRlIjoiN2Q4YmFhMTAtNWQwNy00ZTZmLWE3OTctOTAzMzZjOGY4MWRiIiwiYWNyIjoiMSIsImFsbG93ZWQtb3JpZ2lucyI6WyIqIl0sInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJUcGxNYW5hZ2VyIiwib2ZmbGluZV9hY2Nlc3MiLCJTaGlwcGVyTWFuYWdlciIsInVtYV9hdXRob3JpemF0aW9uIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiIiLCJwcmltYXJ5Um9sZSI6IlRwbE1hbmFnZXIiLCJjb21wYW55SWQiOiIxNWNlM2Q3Yi1kYjA3LTRkOTgtYmE3Zi1hNGYxYWNmMWY3ODIiLCJjaGlsZHJlbkNvbXBhbmllcyI6WyI3NDYyOGNkZS1jMzc0LTRmOTctYThiYS1lZDFjMGIzOTdhYzQiLCI2M2Y1MWM3ZC0yYjg1LTQwMWEtYWYwMS02NTQ3YzY3ZTlkOWIiLCI3YWY0MzRmZS00Mzg5LTQ5ZDQtYTM1Ni02NjlkZGNiMDIwMDgiXSwidXNlcklkIjoiZDMzMWVhZTEtMjU4Ni00YmFlLTgxODMtN2QyZmY5ZTJmYzQ2In0.","textTemplate":"","startCharIdx":5936,"endCharIdx":7040,"metadataSeparator":"\n","type":"TEXT","hash":"OYLR9pEIf7zzwHyqJNJv6mtnA7SXBcVG8vTwXHD39e0="},"2c08febe-6bb1-4799-8133-4382f1df240b":{"id_":"2c08febe-6bb1-4799-8133-4382f1df240b","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"e4c0432b-c538-4f3a-8897-51a92b822561","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"H56EgVOo1VJDBFw9AXfvWRaOSDA9EHN2EZjbfmMiHWg="},"NEXT":{"nodeId":"5f7278b1-11f9-46ba-a5a0-228eccdf4e88","metadata":{},"hash":"FsdJmZVJxAkYMWt24ex8u9T0/KsHUNOMeBb6ircpNEI="}},"text":"ngQ15qlArqFyQ-fRJZcHGBFZQBWsG2oXgJqsOpY8ECpQN5-VgX2zlWPATZ469qXEmFEdwGfsadk62T6fu7Qxf1elTFSw5OqXHAWKPs1myB3E-wxDe9zRZdnFm72G5uoVHyLhPwbInWTTZNzCrISQVUQq1UbcQ5K0OZxQSThTgh232qPNjl6J1KekjvAkottMTCugv0Rl1MxvCnLyyYPyKl2EACCJShJ0-xjLaU1sH68Jnt7kPC8HCfqvZUj2c9YtBKwBTkOhriPQWHEQLC8g0GMSV3Q19_fCuAkqo9qd2spLyi7K9hNI1PNSESOSPBVNPqVmip712YdtlEUE8OQ0wQ\",\"expires_in\": 3600,\"refresh_expires_in\": 0,\"token_type\": \"Bearer\",\"not-before-policy\": 1631698006,\"scope\": \"\"}AnalyticsAnalytics service v1\nView separately\nTry it in swagger\nTop carriers Returns a list of top carriers for a provided lane\nAuthorizations:query ParameterstransportTyperequiredstring Enum: \"VAN\" \"REEFER\" \"FLATBED\"   Example:  transportType=VANTransport type\noriginCountrystring  Example:  originCountry=USOrigin country.Two letter country code in ISO 3166-1 alpha-2 format\noriginStaterequiredstring  Example:  originState=NYOrigin state\noriginCityrequiredstring  Example:  originCity=SchenectadyOrigin city\noriginZiprequiredstring  Example:  originZip=12345Origin area zip\ndestinationCountrystring  Example:  destinationCountry=USDestination country.Two letter country code in ISO 3166-1 alpha-2 format\ndestinationStaterequiredstring  Example:  destinationState=ILDestination state\ndestinationCityrequiredstring  Example:  destinationCity=ChicagoDestination city\ndestinationZiprequiredstring  Example:  destinationZip=60636Destination area zip\nhasExtraStopsboolean Default:  false  Example:  hasExtraStops=trueSignifies whether the requested lane has extra stops or not.If true, multistop loads will be included during calculations.dateFromrequiredstring <date>   Example:  dateFrom=2019-09-30Start date of a period for which you want to calculate top carriers.In ISO format (YYYY-MM-DD).End date of this period is the current date.regionrequiredstring Enum: \"CITY\" \"CITY_ZIP\" \"ZIP_CITY\" \"ZIP\" \"3DZIP\" \"KMA\"   Example:  region=ZIPDetermines the size of the area around the origin and destination points, \nthat will be searched for the related data.CITY - narrow, city wide, area\nZIP - narrow, five digit zip, area\n3DZIP - medium, short zip, area\nKMA - big, market wide, area\nCITY_ZIP - a special option that sets origin area to CITY and destination area to ZIP\nZIP_CITY - a special option that sets origin area to ZIP and destination area to CITY\n\ncurrencystring  Example:  currency=USDCode of the currency that you want the response to be in.Format is ISO 4217.If not provided, defaults to the currency set in the profile of currently authenticated user.sortArray of strings Sorting descriptor in format ?sort={field},{asc|desc}.Multiple sort parameters are allowed and should look like this \n?sort=name,asc&sort=email,desc.If multiple sort parameters are passed, the results will be sorted by all of them, \nwith priority decreasing from left to right.So in case of ?sort=name,asc&sort=volume,desc results will be first sorted by \nname in ascending order, and in cases where names are equal \nresults will be sorted by volume in descending order.By default carriers are sorted like this: \nnumberOfLoads,desc & lastShippedDate,desc.These response fields support sorting:\ncarrierName\ncarrierPhone\ncarrierEmail\ncarrierMC\ncarrierDOT\ncarrierSCAC\nnumberOfLoads\nlastShippedDate\naverageCarrierRate\nminCarrierRate\nmaxCarrierRate\naverageCarrierFlatRate\nminCarrierFlatRate\nmaxCarrierFlatRate\naverageCarrierMarginPercent\n\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n422 Unprocessable Entity with multiple errors.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"mCrLDJZkTP+ZUulbqhiUXBgIulpHNTxU3Epov4gulzo="},"5f7278b1-11f9-46ba-a5a0-228eccdf4e88":{"id_":"5f7278b1-11f9-46ba-a5a0-228eccdf4e88","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"2c08febe-6bb1-4799-8133-4382f1df240b","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"isEAjPpwnVgUmbuKM8R2il11IGP1MnSEe/OeUOE4ypU="},"NEXT":{"nodeId":"6afee97d-ce9e-4842-95e7-159d9bda7619","metadata":{},"hash":"poqZbd+Dq6yPE/7l0SMdSWV1O38Qsnx7o3jRf9qqTKw="}},"text":"sort=name,asc&sort=email,desc.If multiple sort parameters are passed, the results will be sorted by all of them, \nwith priority decreasing from left to right.So in case of ?sort=name,asc&sort=volume,desc results will be first sorted by \nname in ascending order, and in cases where names are equal \nresults will be sorted by volume in descending order.By default carriers are sorted like this: \nnumberOfLoads,desc & lastShippedDate,desc.These response fields support sorting:\ncarrierName\ncarrierPhone\ncarrierEmail\ncarrierMC\ncarrierDOT\ncarrierSCAC\nnumberOfLoads\nlastShippedDate\naverageCarrierRate\nminCarrierRate\nmaxCarrierRate\naverageCarrierFlatRate\nminCarrierFlatRate\nmaxCarrierFlatRate\naverageCarrierMarginPercent\n\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n422 Unprocessable Entity with multiple errors.429 Too Many Requests\n500 Unhandled server error\nget/analytics/lane-top-carriersSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/analytics/lane-top-carriersTesting server\nhttps://testapi.greenscreens.ai/v1/analytics/lane-top-carriersProduction server (uses live data)\nhttps://api.greenscreens.ai/v1/analytics/lane-top-carriers Request samples Node + RequestPython + RequestsPhp + CurlCopyconst request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://sandboxapi.greenscreens.ai/v1/analytics/lane-top-carriers',\n  qs: {\n    transportType: 'VAN',\n    originCountry: 'US',\n    originState: 'NY',\n    originCity: 'Schenectady',\n    originZip: '12345',\n    destinationCountry: 'US',\n    destinationState: 'IL',\n    destinationCity: 'Chicago',\n    destinationZip: '60636',\n    hasExtraStops: 'true',\n    dateFrom: '2019-09-30',\n    region: 'ZIP',\n    currency: 'USD',\n    sort: 'SOME_ARRAY_VALUE'\n  },\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"mj3s905vVSx4MgTnDXIVLOPU0JFUPbj6sSLm09MKgf8="},"6afee97d-ce9e-4842-95e7-159d9bda7619":{"id_":"6afee97d-ce9e-4842-95e7-159d9bda7619","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"5f7278b1-11f9-46ba-a5a0-228eccdf4e88","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"FsdJmZVJxAkYMWt24ex8u9T0/KsHUNOMeBb6ircpNEI="},"NEXT":{"nodeId":"93a1fb87-2291-4241-aad7-69bca324bba6","metadata":{},"hash":"TZicB716mDSSzR3CYmA7l27IDPQX5YV9UeEoQbSPg7I="}},"text":"log(body);\n});\n Response samples 200400403404422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"items\": [{\"carrierName\": \"Eagle One Delivery\",\"carrierPhone\": \"121331343\",\"carrierEmail\": \"test@carrier.com\",\"carrierMC\": \"MC00334234\",\"carrierDOT\": \"USDOT33136\",\"carrierSCAC\": \"MAEU\",\"numberOfLoads\": 41,\"lastShippedDate\": \"2019-09-30\",\"carriedMultistopLoadsBefore\": false,\"lastCarrierRate\": 2.1254,\"averageCarrierRate\": 2.1254,\"minCarrierRate\": 2.1254,\"maxCarrierRate\": 2.1254,\"lastCarrierFlatRate\": 1340,\"averageCarrierFlatRate\": 1250,\"minCarrierFlatRate\": 1200,\"maxCarrierFlatRate\": 1350,\"averageCarrierMarginPercent\": 15,\"currency\": \"USD\"}]}BidsCarrier bids service v1\nView separately\nTry it in swagger\nSave bid Save bid\nAuthorizations:Request Body schema: application/jsonuserEmailstring Email of the user who will be the owner/creator of the bid\ncarrierNamerequiredstring Carrier company name\ncarrierMCstring Carrier MC number\ncarrierDOTstring Carrier DOT number\ncarrierEmailstring or null User email\ncarrierPhonestring or null Carrier contact phone number\noriginrequiredobject (Bids_Address)  Location specified by country, city, state and zip code\ndestinationrequiredobject (Bids_Address)  Location specified by country, city, state and zip code\nextraStopsArray of objects (Bids_StopsInput)  Stops list\ntransportTyperequiredstring (Bids_TransportType)  Enum: \"VAN\" \"REEFER\" \"FLATBED\"  Transport type\npickupDateTimestring or null <date-time>  Pick up date with time in time zone of origin\ndeliveredDateTimestring or null <date-time>  Delivered date with time in time zone of origin\nbidDateTimestring or null <date-time>  Bid save date with time in time zone of origin\nbidCostrequirednumber Bid rate\nloadProNumberstring or null Internal load pro number\nweightnumber or null <float>  Total cargo weight in lb\ncommoditystring or null Commodity description in free form\nbrokerCommentstring or null Comment for carrier\ncarrierCommentstring or null Comment from carrier\ncurrencystring (Bids_Currency)  Enum: \"USD\" \"CAD\"  Currency code in ISO 4217 format (three letter code, e.g.USD)\nIf not provided, defaults to the currency set in the profile \nof currently authenticated user (or currently authenticated company \nif there is no user or user profile setting)\nResponses201 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.429 Too Many Requests\n500 Unhandled server error\npost/bidsSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/bidsTesting server\nhttps://testapi.greenscreens.ai/v1/bidsProduction server (uses live data)\nhttps://api.greenscreens.ai/v1/bids Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"userEmail\": \"buddy@greenscreens.ai\",\"carrierName\": \"CarrierCompany\",\"carrierMC\": \"888015\",\"carrierDOT\": \"87650005\",\"carrierEmail\": \"carrier@mail.com\",\"carrierPhone\": \"4112228888\",\"origin\": {\"country\": \"US\",\"state\": \"NY\",\"city\": \"Schenectady\",\"zip\": \"12345\",\"type\": \"ZIP\"},\"destination\": {\"country\": \"US\",\"state\": \"NY\",\"city\": \"Schenectady\",\"zip\": \"12345\",\"type\": \"ZIP\"},\"extraStops\": [{\"order\": 0,\"address\": {\"country\": \"US\",\"zip\": \"96080\"},\"type\": \"LOAD\",\"appointmentDateTime\": \"2020-10-14T16:00:00Z\"},{\"order\": 1,\"address\": {\"country\": \"US\",\"city\": \"Redding\",\"state\": \"CA\"},\"type\": \"UNLOAD\",\"appointmentDateTime\": \"2020-10-15T16:00:00Z\"}],\"transportType\": \"VAN\",\"pickupDateTime\": \"2020-10-13T16:00:00Z\",\"deliveredDateTime\": \"2020-10-13T16:00:00Z\",\"bidDateTime\": \"2020-10-11T16:00:00Z\",\"bidCost\": 1000.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"4ZfXoLaPLoWqnj7UrrwhBnTspqEzpIKnLlohcPxfEws="},"93a1fb87-2291-4241-aad7-69bca324bba6":{"id_":"93a1fb87-2291-4241-aad7-69bca324bba6","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"6afee97d-ce9e-4842-95e7-159d9bda7619","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"poqZbd+Dq6yPE/7l0SMdSWV1O38Qsnx7o3jRf9qqTKw="},"NEXT":{"nodeId":"5d33a66e-84e2-4528-982b-309ffd02afbb","metadata":{},"hash":"1dv7VWsL5s9J+DCgNYqXx3fVsFvQJpZASmBIhZ3tshs="}},"text":"5,\"loadProNumber\": \"Pro#111111\",\"weight\": 20000,\"commodity\": \"Steel racks\",\"brokerComment\": \"Something a broker would comment\",\"carrierComment\": \"Looks good\",\"currency\": \"USD\"} Response samples 201400403422429500Content typeapplication/jsonCopy{\"id\": 12345,\"key\": \"deedc41f-7eb2-4c36-9d35-fb6958a43771\"}Get current user bids Get current user bids\nAuthorizations:query ParameterscreatedDateFromrequiredstring <date>   Example:  createdDateFrom=2019-09-30bid created date >= value\ncreatedDateTostring <date>   Example:  createdDateTo=2019-12-30bid created date <= value\ncurrencystring Enum: \"USD\" \"CAD\"   Example:  currency=USDCurrency code in ISO 4217 format (three letter code, e.g.USD)\nIf not provided, defaults to the currency set in the profile \nof currently authenticated user (or currently authenticated company \nif there is no user or user profile setting)\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n422 Unprocessable Entity with multiple errors.429 Too Many Requests\n500 Unhandled server error\nget/bidsSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/bidsTesting server\nhttps://testapi.greenscreens.ai/v1/bidsProduction server (uses live data)\nhttps://api.greenscreens.ai/v1/bids Request samples Node + RequestPython + RequestsPhp + CurlCopyconst request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://sandboxapi.greenscreens.ai/v1/bids',\n  qs: {createdDateFrom: '2019-09-30', createdDateTo: '2019-12-30', currency: 'USD'},\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n Response samples 200400403404422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"items\": [{\"id\": 23456,\"userEmail\": \"buddy@greenscreens.ai\",\"pickupDateTime\": \"2020-09-14T16:00:00Z\",\"deliveredDateTime\": \"2020-09-14T16:00:00Z\",\"createdDate\": \"2020-09-14T16:00:00Z\",\"bidStatus\": \"SENT\",\"bidCost\": 1000.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"X1WTScA5wN5+DrjCShVtW7yRGmWnMt1pVxTOjL8Bph4="},"5d33a66e-84e2-4528-982b-309ffd02afbb":{"id_":"5d33a66e-84e2-4528-982b-309ffd02afbb","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"93a1fb87-2291-4241-aad7-69bca324bba6","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"TZicB716mDSSzR3CYmA7l27IDPQX5YV9UeEoQbSPg7I="},"NEXT":{"nodeId":"bf9d678b-127e-4b8b-8908-30b4647ae603","metadata":{},"hash":"w7tMWcC2l6zT+/TN+WaFh3IWMd1Luc+oiN0I8xY/ILs="}},"text":"log(body);\n});\n Response samples 200400403404422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"items\": [{\"id\": 23456,\"userEmail\": \"buddy@greenscreens.ai\",\"pickupDateTime\": \"2020-09-14T16:00:00Z\",\"deliveredDateTime\": \"2020-09-14T16:00:00Z\",\"createdDate\": \"2020-09-14T16:00:00Z\",\"bidStatus\": \"SENT\",\"bidCost\": 1000.5,\"wasViewed\": false,\"carrierName\": \"Carrierr Transportation\",\"carrierMC\": \"888015\",\"carrierPhone\": \"4112228888\",\"carrierEmail\": \"test@greenscreens.ai\",\"transportType\": \"VAN\",\"origin\": {\"country\": \"US\",\"state\": \"NY\",\"city\": \"Schenectady\",\"zip\": \"12345\",\"type\": \"ZIP\"},\"destination\": {\"country\": \"US\",\"state\": \"NY\",\"city\": \"Schenectady\",\"zip\": \"12345\",\"type\": \"ZIP\"},\"extraStops\": [{\"order\": 0,\"address\": {\"country\": \"US\",\"city\": \"Red Bluff\",\"state\": \"CA\",\"zip\": \"96080\",\"type\": \"ZIP\"},\"type\": \"LOAD\",\"appointmentDateTime\": \"2020-10-14T16:00:00Z\"},{\"order\": 1,\"address\": {\"country\": \"US\",\"city\": \"Redding\",\"state\": \"CA\",\"zip\": \"96002\",\"type\": \"CITY\"},\"type\": \"UNLOAD\",\"appointmentDateTime\": \"2020-10-15T16:00:00Z\"}],\"loadProNumber\": \"string\",\"weight\": 20000,\"commodity\": \"Very important load\",\"brokerComment\": \"Please, be carefully with my load\",\"carrierComment\": \"Looks good\",\"currency\": \"USD\"}]}Update bid Update bid\nAuthorizations:path ParametersbidIdrequiredinteger <int64>   Example:  12345Id of the bid that you want updated\nRequest Body schema: application/jsoncarrierNamerequiredstring Carrier company name\ncarrierMCstring Carrier MC number\ncarrierEmailstring or null User email\ncarrierPhonestring or null Carrier contact phone number\noriginrequiredobject (Bids_Address)  Location specified by country, city, state and zip code\ndestinationrequiredobject (Bids_Address)  Location specified by country, city, state and zip code\nextraStopsArray of objects (Bids_StopsInput)  Stops list\ntransportTyperequiredstring (Bids_TransportType)  Enum: \"VAN\" \"REEFER\" \"FLATBED\"  Transport type\npickupDateTimestring or null <date-time>  Pick up date with time in time zone of origin\ndeliveredDateTimestring or null <date-time>  Delivered date with time in time zone of origin\nbidDateTimestring or null <date-time>  Bid save date with time in time zone of origin\nbidCostrequirednumber Bid rate\nloadProNumberstring or null Internal load pro number\nweightnumber or null <float>  Total cargo weight in lb\ncommoditystring or null Commodity description in free form\nbrokerCommentstring or null Comment for carrier\ncarrierCommentstring or null Comment from carrier\nwasViewedboolean States whether the bid was viewed by the broker after being accepted by carrier\ncurrencystring (Bids_Currency)  Enum: \"USD\" \"CAD\"  Currency code in ISO 4217 format (three letter code, e.g.USD)\nIf not provided, defaults to the currency set in the profile \nof currently authenticated user (or currently authenticated company \nif there is no user or user profile setting)\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n422 Unprocessable Entity with multiple errors.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"8S9BMDfuUytJfhTRhJKYtxsyeU8ybDnNFl+lmv+Yef0="},"bf9d678b-127e-4b8b-8908-30b4647ae603":{"id_":"bf9d678b-127e-4b8b-8908-30b4647ae603","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"5d33a66e-84e2-4528-982b-309ffd02afbb","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"1dv7VWsL5s9J+DCgNYqXx3fVsFvQJpZASmBIhZ3tshs="},"NEXT":{"nodeId":"8fc2cfa3-7a5b-450a-881a-c7902d474203","metadata":{},"hash":"heZOuhICQ5E5vmFwRCyeBvf/p5q78yV8wR86P7pYBZo="}},"text":"g.USD)\nIf not provided, defaults to the currency set in the profile \nof currently authenticated user (or currently authenticated company \nif there is no user or user profile setting)\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n422 Unprocessable Entity with multiple errors.429 Too Many Requests\n500 Unhandled server error\npatch/bids/{bidId}Sandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/bids/{bidId}Testing server\nhttps://testapi.greenscreens.ai/v1/bids/{bidId}Production server (uses live data)\nhttps://api.greenscreens.ai/v1/bids/{bidId} Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"carrierName\": \"CarrierCompany\",\"carrierMC\": \"888015\",\"carrierEmail\": \"carrier@mail.com\",\"carrierPhone\": \"4112228888\",\"origin\": {\"country\": \"US\",\"state\": \"NY\",\"city\": \"Schenectady\",\"zip\": \"12345\",\"type\": \"ZIP\"},\"destination\": {\"country\": \"US\",\"state\": \"NY\",\"city\": \"Schenectady\",\"zip\": \"12345\",\"type\": \"ZIP\"},\"extraStops\": [{\"order\": 0,\"address\": {\"country\": \"US\",\"zip\": \"96080\"},\"type\": \"LOAD\",\"appointmentDateTime\": \"2020-10-14T16:00:00Z\"},{\"order\": 1,\"address\": {\"country\": \"US\",\"city\": \"Redding\",\"state\": \"CA\"},\"type\": \"UNLOAD\",\"appointmentDateTime\": \"2020-10-15T16:00:00Z\"}],\"transportType\": \"VAN\",\"pickupDateTime\": \"2020-10-13T16:00:00Z\",\"deliveredDateTime\": \"2020-10-13T16:00:00Z\",\"bidDateTime\": \"2020-10-11T16:00:00Z\",\"bidCost\": 1000.5,\"loadProNumber\": \"Pro#111111\",\"weight\": 20000,\"commodity\": \"Steel racks\",\"brokerComment\": \"Something a broker would comment\",\"carrierComment\": \"Looks good\",\"wasViewed\": false,\"currency\": \"USD\"} Response samples 200400403404422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"id\": 23456,\"userEmail\": \"buddy@greenscreens.ai\",\"pickupDateTime\": \"2020-09-14T16:00:00Z\",\"deliveredDateTime\": \"2020-09-14T16:00:00Z\",\"createdDate\": \"2020-09-14T16:00:00Z\",\"bidStatus\": \"SENT\",\"bidCost\": 1000.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"+pZswHT5Do1yGiDH+vObNzkOfN712s/LYVLxzQapOCU="},"8fc2cfa3-7a5b-450a-881a-c7902d474203":{"id_":"8fc2cfa3-7a5b-450a-881a-c7902d474203","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"bf9d678b-127e-4b8b-8908-30b4647ae603","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"w7tMWcC2l6zT+/TN+WaFh3IWMd1Luc+oiN0I8xY/ILs="},"NEXT":{"nodeId":"d49db785-14e3-4607-8199-6d09f1af8430","metadata":{},"hash":"57CjA95xdfANS5slFa78e110GHrsR+mHfIGilzDvKls="}},"text":"5,\"loadProNumber\": \"Pro#111111\",\"weight\": 20000,\"commodity\": \"Steel racks\",\"brokerComment\": \"Something a broker would comment\",\"carrierComment\": \"Looks good\",\"wasViewed\": false,\"currency\": \"USD\"} Response samples 200400403404422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"id\": 23456,\"userEmail\": \"buddy@greenscreens.ai\",\"pickupDateTime\": \"2020-09-14T16:00:00Z\",\"deliveredDateTime\": \"2020-09-14T16:00:00Z\",\"createdDate\": \"2020-09-14T16:00:00Z\",\"bidStatus\": \"SENT\",\"bidCost\": 1000.5,\"wasViewed\": false,\"carrierName\": \"Carrierr Transportation\",\"carrierMC\": \"888015\",\"carrierPhone\": \"4112228888\",\"carrierEmail\": \"test@greenscreens.ai\",\"transportType\": \"VAN\",\"origin\": {\"country\": \"US\",\"state\": \"NY\",\"city\": \"Schenectady\",\"zip\": \"12345\",\"type\": \"ZIP\"},\"destination\": {\"country\": \"US\",\"state\": \"NY\",\"city\": \"Schenectady\",\"zip\": \"12345\",\"type\": \"ZIP\"},\"extraStops\": [{\"order\": 0,\"address\": {\"country\": \"US\",\"city\": \"Red Bluff\",\"state\": \"CA\",\"zip\": \"96080\",\"type\": \"ZIP\"},\"type\": \"LOAD\",\"appointmentDateTime\": \"2020-10-14T16:00:00Z\"},{\"order\": 1,\"address\": {\"country\": \"US\",\"city\": \"Redding\",\"state\": \"CA\",\"zip\": \"96002\",\"type\": \"CITY\"},\"type\": \"UNLOAD\",\"appointmentDateTime\": \"2020-10-15T16:00:00Z\"}],\"loadProNumber\": \"string\",\"weight\": 20000,\"commodity\": \"Very important load\",\"brokerComment\": \"Please, be carefully with my load\",\"carrierComment\": \"Looks good\",\"currency\": \"USD\"}Delete bid Delete bid\nAuthorizations:path ParametersbidIdrequiredinteger <int64>   Example:  12345Id of the bid that you want deleted\nResponses204 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n429 Too Many Requests\n500 Unhandled server error\ndelete/bids/{bidId}Sandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/bids/{bidId}Testing server\nhttps://testapi.greenscreens.ai/v1/bids/{bidId}Production server (uses live data)\nhttps://api.greenscreens.ai/v1/bids/{bidId} Request samples Node + RequestPython + RequestsPhp + CurlCopyconst request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://sandboxapi.greenscreens.ai/v1/bids/%7BbidId%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n Response samples 400403404429500Content typeapplication/jsonCopy{\"code\": \"missing_required_parameter\",\"message\": \"Your request was missing a {par_name} parameter\"}Search carriers Search carriers\nAuthorizations:query Parametersquerystring  Example:  query=JoeQuery string.Names are first checked using case insensitive startsWith  and then case insensitive contains.Responses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n422 Unprocessable Entity with multiple errors.429 Too Many Requests\n500 Unhandled server error\nget/bids/carriersSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/bids/carriersTesting server\nhttps://testapi.greenscreens.ai/v1/bids/carriersProduction server (uses live data)\nhttps://api.greenscreens.ai/v1/bids/carriers Request samples Node + RequestPython + RequestsPhp + CurlCopyconst request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://sandboxapi.greenscreens.ai/v1/bids/carriers',\n  qs: {query: 'Joe'},\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"N6ZEpDkC4WW0S33ufpVGajOvsmYY5j2dP4GuxfSjWGM="},"d49db785-14e3-4607-8199-6d09f1af8430":{"id_":"d49db785-14e3-4607-8199-6d09f1af8430","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"8fc2cfa3-7a5b-450a-881a-c7902d474203","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"heZOuhICQ5E5vmFwRCyeBvf/p5q78yV8wR86P7pYBZo="},"NEXT":{"nodeId":"4742644e-6ff8-4c4f-9590-56b4439ebbb6","metadata":{},"hash":"Svjl4M88NANun9lRnTLkmcRekMIZJB/AH5AgtAo9bJM="}},"text":"429 Too Many Requests\n500 Unhandled server error\nget/bids/carriersSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/bids/carriersTesting server\nhttps://testapi.greenscreens.ai/v1/bids/carriersProduction server (uses live data)\nhttps://api.greenscreens.ai/v1/bids/carriers Request samples Node + RequestPython + RequestsPhp + CurlCopyconst request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://sandboxapi.greenscreens.ai/v1/bids/carriers',\n  qs: {query: 'Joe'},\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n Response samples 200400403404422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"items\": [{\"companyName\": \"Carrier Company\",\"email\": \"test@greenscreens.ai\",\"phoneNumber\": \"4112228888\"}]}Accept bid Accept bid\nRequest Body schema: application/jsonkeyrequiredstring Key of the bid which you want to accept\nbidCostrequirednumber Bid rate from user\ncarrierNamerequiredstring Carrier company name\ncarrierMCstring Carrier MC number\ncarrierCommentstring Comment for broker\ncurrencystring (Bids_Currency)  Enum: \"USD\" \"CAD\"  Currency code in ISO 4217 format (three letter code, e.g.USD)\nIf not provided, defaults to the currency set in the profile \nof currently authenticated user (or currently authenticated company \nif there is no user or user profile setting)\nResponses204 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n422 Unprocessable Entity with multiple errors.429 Too Many Requests\n500 Unhandled server error\npost/bids/acceptSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/bids/acceptTesting server\nhttps://testapi.greenscreens.ai/v1/bids/acceptProduction server (uses live data)\nhttps://api.greenscreens.ai/v1/bids/accept Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy{\"key\": \"c5d1cfa8-228b-11eb-adc1-0242ac120002\",\"bidCost\": 1000.5,\"carrierName\": \"Carrierr Transportation\",\"carrierMC\": \"888015\",\"carrierComment\": \"Looks good\",\"currency\": \"USD\"} Response samples 400403404422429500Content typeapplication/jsonCopy{\"code\": \"missing_required_parameter\",\"message\": \"Your request was missing a {par_name} parameter\"}Send bid request Send bid request to a carrier\nAuthorizations:Request Body schema: application/jsonuserEmailstring Email of the user who will be the owner/creator of the bid\ncarriersArray of objects (Bids_BidsSendRequestCarrier)  List of carriers to whom the bid request should be sent to\ncarrierEmailListArray of strings or null  [ 0 ..500 ] items  Deprecated  List of emails that the bid request should be sent to\nDeprecated: use carriers field instead\ncarrierPhoneListArray of strings or null  [ 0 ..500 ] items  Deprecated  List of phone numbers that the bid request should be sent to as a message.This feature only works if you have 'TextLocate' integration enabled for your company.Valid phone number is a string with ten digits in it.Deprecated: use carriers field instead\noriginrequiredobject (Bids_Address)  Location specified by country, city, state and zip code\ndestinationrequiredobject (Bids_Address)  Location specified by country, city, state and zip code\nextraStopsArray of objects (Bids_StopsInput)  Stops list\npickupDateTimestring <date-time>  Pick up date with time in time zone of origin\ndeliveredDateTimestring <date-time>  Delivered date with time in time zone of origin\nloadProNumberstring Internal load pro number\nweightnumber <float>  Total cargo weight in lb\ncommoditystring commodity description in free form\nbrokerCommentstring Comment for carrier\ntransportTyperequiredstring (Bids_TransportType)  Enum: \"VAN\" \"REEFER\" \"FLATBED\"  Transport type\nResponses204 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n422 Unprocessable Entity with multiple errors.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"ALaYGGl/gB8zDP1hebKnYM3W65jmgL3iBvmD6kqRSS0="},"4742644e-6ff8-4c4f-9590-56b4439ebbb6":{"id_":"4742644e-6ff8-4c4f-9590-56b4439ebbb6","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"d49db785-14e3-4607-8199-6d09f1af8430","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"57CjA95xdfANS5slFa78e110GHrsR+mHfIGilzDvKls="},"NEXT":{"nodeId":"37dbba37-1e84-4b11-bc1a-9d79b2008e8f","metadata":{},"hash":"rd6Uca9kKM1fVu+PddDjZfwI8tGX+MidqszaqnhGWSc="}},"text":"429 Too Many Requests\n500 Unhandled server error\npost/bids/sendSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/bids/sendTesting server\nhttps://testapi.greenscreens.ai/v1/bids/sendProduction server (uses live data)\nhttps://api.greenscreens.ai/v1/bids/send Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"userEmail\": \"buddy@greenscreens.ai\",\"carriers\": [{\"carrierInfo\": {\"name\": \"CarrierCompany\",\"mc\": \"888015\",\"dot\": \"87650005\",\"phone\": \"4112228888\",\"email\": \"carrier@mail.com\"},\"carrierInfoSource\": \"HIGHWAY\",\"sendRequestTo\": [\"CARRIER_INFO_EMAIL\"]}],\"carrierEmailList\": [\"carrier1@mail.com\",\"carrier2@mail.com\",\"carrier3@mail.com\"],\"carrierPhoneList\": [\"8456951387\",\"7456951583\",\"2458951391\"],\"origin\": {\"country\": \"US\",\"state\": \"NY\",\"city\": \"Schenectady\",\"zip\": \"12345\",\"type\": \"ZIP\"},\"destination\": {\"country\": \"US\",\"state\": \"NY\",\"city\": \"Schenectady\",\"zip\": \"12345\",\"type\": \"ZIP\"},\"extraStops\": [{\"order\": 0,\"address\": {\"country\": \"US\",\"zip\": \"96080\"},\"type\": \"LOAD\",\"appointmentDateTime\": \"2020-10-14T16:00:00Z\"},{\"order\": 1,\"address\": {\"country\": \"US\",\"city\": \"Redding\",\"state\": \"CA\"},\"type\": \"UNLOAD\",\"appointmentDateTime\": \"2020-10-15T16:00:00Z\"}],\"pickupDateTime\": \"2020-10-13T16:00:00Z\",\"deliveredDateTime\": \"2020-10-13T16:00:00Z\",\"loadProNumber\": \"Pro#111111\",\"weight\": 20000,\"commodity\": \"Steel racks\",\"brokerComment\": \"Please, be carefully with my load\",\"transportType\": \"VAN\"} Response samples 400403404422429500Content typeapplication/jsonCopy{\"code\": \"missing_required_parameter\",\"message\": \"Your request was missing a {par_name} parameter\"}Get ten most recent bids for a lane Get ten most recent bids for a lane\nAuthorizations:query ParameterstransportTyperequiredstring Enum: \"VAN\" \"REEFER\" \"FLATBED\"   Example:  transportType=VANTransport type\noriginCountrystring  Example:  originCountry=USOrigin country.Two letter country code in ISO 3166-1 alpha-2 format\noriginStatestring  Example:  originState=NYOrigin state\noriginCitystring  Example:  originCity=SchenectadyOrigin city\noriginZiprequiredstring  Example:  originZip=12345Origin area zip\ndestinationCountrystring  Example:  destinationCountry=USDestination country.Two letter country code in ISO 3166-1 alpha-2 format\ndestinationStatestring  Example:  destinationState=ILDestination state\ndestinationCitystring  Example:  destinationCity=ChicagoDestination city\ndestinationZiprequiredstring  Example:  destinationZip=60636Destination area zip\nhasExtraStopsboolean Default:  false  Example:  hasExtraStops=trueSignifies whether the requested lane has extra stops or not.If true, multistop loads will be included during calculations.dateFromrequiredstring <date>   Example:  dateFrom=2019-09-30Date range for bids created from\nregionrequiredstring Enum: \"CITY\" \"CITY_ZIP\" \"ZIP_CITY\" \"ZIP\" \"3DZIP\" \"KMA\"   Example:  region=ZIPDetermines the size of the area around the origin and destination points, \nthat will be searched for the related data.CITY - narrow, city wide, area\nZIP - narrow, five digit zip, area\n3DZIP - medium, short zip, area\nKMA - big, market wide, area\nCITY_ZIP - a special option that sets origin area to CITY and destination area to ZIP\nZIP_CITY - a special option that sets origin area to ZIP and destination area to CITY\n\ncurrencystring Enum: \"USD\" \"CAD\"   Example:  currency=USDCurrency code in ISO 4217 format (three letter code, e.g.USD)\nIf not provided, defaults to the currency set in the profile \nof currently authenticated user (or currently authenticated company \nif there is no user or user profile setting)\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n422 Unprocessable Entity with multiple errors.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"18OiHLmgCSYMNkuwjojkRA0/OGcjHUVt2EhJFXdK6fE="},"37dbba37-1e84-4b11-bc1a-9d79b2008e8f":{"id_":"37dbba37-1e84-4b11-bc1a-9d79b2008e8f","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"4742644e-6ff8-4c4f-9590-56b4439ebbb6","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"Svjl4M88NANun9lRnTLkmcRekMIZJB/AH5AgtAo9bJM="},"NEXT":{"nodeId":"69feb0aa-2c5a-4cbc-a3bb-29bea9e19b6e","metadata":{},"hash":"9a0oRS6D5lbhyranoBOWBT0JVlvDZ45+/+nWUcuzspg="}},"text":"CITY - narrow, city wide, area\nZIP - narrow, five digit zip, area\n3DZIP - medium, short zip, area\nKMA - big, market wide, area\nCITY_ZIP - a special option that sets origin area to CITY and destination area to ZIP\nZIP_CITY - a special option that sets origin area to ZIP and destination area to CITY\n\ncurrencystring Enum: \"USD\" \"CAD\"   Example:  currency=USDCurrency code in ISO 4217 format (three letter code, e.g.USD)\nIf not provided, defaults to the currency set in the profile \nof currently authenticated user (or currently authenticated company \nif there is no user or user profile setting)\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n422 Unprocessable Entity with multiple errors.429 Too Many Requests\n500 Unhandled server error\nget/bids/recentSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/bids/recentTesting server\nhttps://testapi.greenscreens.ai/v1/bids/recentProduction server (uses live data)\nhttps://api.greenscreens.ai/v1/bids/recent Request samples Node + RequestPython + RequestsPhp + CurlCopyconst request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://sandboxapi.greenscreens.ai/v1/bids/recent',\n  qs: {\n    transportType: 'VAN',\n    originCountry: 'US',\n    originState: 'NY',\n    originCity: 'Schenectady',\n    originZip: '12345',\n    destinationCountry: 'US',\n    destinationState: 'IL',\n    destinationCity: 'Chicago',\n    destinationZip: '60636',\n    hasExtraStops: 'true',\n    dateFrom: '2019-09-30',\n    region: 'ZIP',\n    currency: 'USD'\n  },\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n Response samples 200400403404422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"items\": [{\"id\": 23456,\"userEmail\": \"buddy@greenscreens.ai\",\"pickupDateTime\": \"2020-09-14T16:00:00Z\",\"deliveredDateTime\": \"2020-09-14T16:00:00Z\",\"createdDate\": \"2020-09-14T16:00:00Z\",\"bidStatus\": \"SENT\",\"bidCost\": 1000.5,\"wasViewed\": false,\"carrierName\": \"Carrierr Transportation\",\"carrierMC\": \"888015\",\"carrierPhone\": \"4112228888\",\"carrierEmail\": \"test@greenscreens.ai\",\"transportType\": \"VAN\",\"origin\": {\"country\": \"US\",\"state\": \"NY\",\"city\": \"Schenectady\",\"zip\": \"12345\",\"type\": \"ZIP\"},\"destination\": {\"country\": \"US\",\"state\": \"NY\",\"city\": \"Schenectady\",\"zip\": \"12345\",\"type\": \"ZIP\"},\"extraStops\": [{\"order\": 0,\"address\": {\"country\": \"US\",\"city\": \"Red Bluff\",\"state\": \"CA\",\"zip\": \"96080\",\"type\": \"ZIP\"},\"type\": \"LOAD\",\"appointmentDateTime\": \"2020-10-14T16:00:00Z\"},{\"order\": 1,\"address\": {\"country\": \"US\",\"city\": \"Redding\",\"state\": \"CA\",\"zip\": \"96002\",\"type\": \"CITY\"},\"type\": \"UNLOAD\",\"appointmentDateTime\": \"2020-10-15T16:00:00Z\"}],\"loadProNumber\": \"string\",\"weight\": 20000,\"commodity\": \"Very important load\",\"brokerComment\": \"Please, be carefully with my load\",\"carrierComment\": \"Looks good\",\"currency\": \"USD\"}]}Get bid information by key Get bid information by key\npath Parameterskeyrequiredstring  Example:  69bb0a85-f0d0-4d40-abb5-b0e6d82cd234Key of the requested bid\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n422 Unprocessable Entity with multiple errors.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"JPt9hwr1JTCuFk8TxnJkYmm/Ysc9lBWOOOIXC5rjE7w="},"69feb0aa-2c5a-4cbc-a3bb-29bea9e19b6e":{"id_":"69feb0aa-2c5a-4cbc-a3bb-29bea9e19b6e","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"37dbba37-1e84-4b11-bc1a-9d79b2008e8f","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"rd6Uca9kKM1fVu+PddDjZfwI8tGX+MidqszaqnhGWSc="},"NEXT":{"nodeId":"5c17ab71-ec3e-40ea-a53b-8dbc878c7aba","metadata":{},"hash":"5y8QfSK7sk+2+sCCRtf/I8YEvy1BR3H+fpRz2D9IuPU="}},"text":"429 Too Many Requests\n500 Unhandled server error\nget/bids/by-key/{key}Sandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/bids/by-key/{key}Testing server\nhttps://testapi.greenscreens.ai/v1/bids/by-key/{key}Production server (uses live data)\nhttps://api.greenscreens.ai/v1/bids/by-key/{key} Request samples Node + RequestPython + RequestsPhp + CurlCopyconst request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://sandboxapi.greenscreens.ai/v1/bids/by-key/%7Bkey%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n Response samples 200400403404422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"distance\": 289,\"id\": 23456,\"userEmail\": \"buddy@greenscreens.ai\",\"pickupDateTime\": \"2020-09-14T16:00:00Z\",\"deliveredDateTime\": \"2020-09-14T16:00:00Z\",\"createdDate\": \"2020-09-14T16:00:00Z\",\"bidStatus\": \"SENT\",\"bidCost\": 1000.5,\"wasViewed\": false,\"carrierName\": \"Carrierr Transportation\",\"carrierMC\": \"888015\",\"carrierPhone\": \"4112228888\",\"carrierEmail\": \"test@greenscreens.ai\",\"transportType\": \"VAN\",\"origin\": {\"country\": \"US\",\"state\": \"NY\",\"city\": \"Schenectady\",\"zip\": \"12345\",\"type\": \"ZIP\"},\"destination\": {\"country\": \"US\",\"state\": \"NY\",\"city\": \"Schenectady\",\"zip\": \"12345\",\"type\": \"ZIP\"},\"extraStops\": [{\"order\": 0,\"address\": {\"country\": \"US\",\"city\": \"Red Bluff\",\"state\": \"CA\",\"zip\": \"96080\",\"type\": \"ZIP\"},\"type\": \"LOAD\",\"appointmentDateTime\": \"2020-10-14T16:00:00Z\"},{\"order\": 1,\"address\": {\"country\": \"US\",\"city\": \"Redding\",\"state\": \"CA\",\"zip\": \"96002\",\"type\": \"CITY\"},\"type\": \"UNLOAD\",\"appointmentDateTime\": \"2020-10-15T16:00:00Z\"}],\"loadProNumber\": \"string\",\"weight\": 20000,\"commodity\": \"Very important load\",\"brokerComment\": \"Please, be carefully with my load\",\"carrierComment\": \"Looks good\",\"currency\": \"USD\"}DatalakeDatalake service v1\nView separately\nTry it in swagger\nDatalake history Returns loads matching the search criteria\nAuthorizations:Request Body schema: application/jsonoriginCountrystring Origin country.Two letter country code in ISO 3166-1 alpha-2 format\noriginStatestring Origin state\noriginCitystring Origin city\noriginZiprequiredstring Origin zip\ndestinationCountrystring Destination country.Two letter country code in ISO 3166-1 alpha-2 format\ndestinationStatestring Destination state\ndestinationCitystring Destination city\ndestinationZiprequiredstring Destination zip\nextraStopsArray of objects or null (DataLake_StopsInput)  Extra stops between origin and destination\ndateFromrequiredstring <date>  Pickup date range start date\ndateTorequiredstring <date>  Pickup date range end date\ntransportTyperequiredstring (DataLake_TransportType)  Enum: \"VAN\" \"REEFER\" \"FLATBED\"  Transport type\nregionrequiredstring (DataLake_Region)  Enum: \"CITY\" \"CITY_ZIP\" \"ZIP_CITY\" \"ZIP\" \"3DZIP\" \"KMA\"  Determines the size of the area around the origin and destination points, \nthat will be searched for the related data.CITY - narrow, city wide, area\nZIP - narrow, five digit zip, area\n3DZIP - medium, short zip, area\nKMA - big, market wide, area\nCITY_ZIP - a special option that sets origin area to CITY and destination area to ZIP\nZIP_CITY - a special option that sets origin area to ZIP and destination area to CITY\n\ncurrencystring Code of the currency that you want the response to be in.Format is ISO 4217.If not provided, defaults to the currency set in the profile of currently authenticated user.Responses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"1P44VSqGy0r4tfsm9jPvFGAYP6eUaNxA9yCFU8fTQug="},"5c17ab71-ec3e-40ea-a53b-8dbc878c7aba":{"id_":"5c17ab71-ec3e-40ea-a53b-8dbc878c7aba","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"69feb0aa-2c5a-4cbc-a3bb-29bea9e19b6e","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"9a0oRS6D5lbhyranoBOWBT0JVlvDZ45+/+nWUcuzspg="},"NEXT":{"nodeId":"e1ed20a4-6ec0-470f-ac44-2154674f4d1e","metadata":{},"hash":"FlzSlDtdtd/MD0QTVuf1cRYZ8tZiq35A8V4tikz94ok="}},"text":"CITY - narrow, city wide, area\nZIP - narrow, five digit zip, area\n3DZIP - medium, short zip, area\nKMA - big, market wide, area\nCITY_ZIP - a special option that sets origin area to CITY and destination area to ZIP\nZIP_CITY - a special option that sets origin area to ZIP and destination area to CITY\n\ncurrencystring Code of the currency that you want the response to be in.Format is ISO 4217.If not provided, defaults to the currency set in the profile of currently authenticated user.Responses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity.429 Too Many Requests\n500 Unhandled server error\npost/datalake/historySandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/datalake/historyTesting server\nhttps://testapi.greenscreens.ai/v1/datalake/historyProduction server (uses live data)\nhttps://api.greenscreens.ai/v1/datalake/history Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"originCountry\": \"US\",\"originState\": \"NY\",\"originCity\": \"Schenectady\",\"originZip\": \"12345\",\"destinationCountry\": \"US\",\"destinationState\": \"IL\",\"destinationCity\": \"Chicago\",\"destinationZip\": \"12345\",\"extraStops\": [{\"order\": 0,\"type\": \"LOAD\",\"address\": {\"country\": \"US\",\"city\": \"Red Bluff\",\"state\": \"CA\",\"zip\": \"96080\"}},{\"order\": 1,\"type\": \"UNLOAD\",\"address\": {\"country\": \"US\",\"city\": \"Redding\",\"state\": \"CA\",\"zip\": \"96002\"}}],\"dateFrom\": \"2020-07-21\",\"dateTo\": \"2020-07-21\",\"transportType\": \"VAN\",\"region\": \"ZIP\",\"currency\": \"USD\"} Response samples 200400403422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"items\": [{\"totalCarrierCost\": 1765.13,\"totalCarrierRate\": 2.58,\"loadPickupDate\": \"2020-07-21\",\"pickupDateTime\": \"2020-07-21T16:00:00Z\",\"deliveredDateTime\": \"2020-10-14T16:00:00Z\",\"transportTypeTms\": \"VR\",\"distance\": 689,\"weight\": 22000,\"commodity\": \"Racks\",\"originCountry\": \"US\",\"originState\": \"IL\",\"originCity\": \"Chicago\",\"originZip\": \"60636\",\"destinationCountry\": \"US\",\"destinationState\": \"TX\",\"destinationCity\": \"Houston\",\"destinationZip\": \"73264\",\"extraStops\": [{\"order\": 0,\"type\": \"LOAD\",\"address\": {\"country\": \"US\",\"city\": \"Red Bluff\",\"state\": \"CA\",\"zip\": \"96080\"},\"appointmentDateTime\": \"2020-10-13T16:00:00Z\"},{\"order\": 1,\"type\": \"UNLOAD\",\"address\": {\"country\": \"US\",\"city\": \"Redding\",\"state\": \"CA\",\"zip\": \"96002\"},\"appointmentDateTime\": \"2020-10-14T16:00:00Z\"}],\"carrierName\": \"JB Hunt\",\"carrierPhoneNumber\": \"121331343\",\"carrierEmail\": \"my@carrieremail.com\",\"customerName\": \"BP\",\"customerPhoneNumber\": \"121331343\",\"customerEmail\": \"my@customeremail.com\",\"sellRate\": 1900.5,\"buySideRep\": \"Jon Johnson\",\"sellSideRep\": \"Deny Williams\",\"loadProNumber\": \"0-5428\",\"currency\": \"USD\"}],\"outlierItems\": [{\"totalCarrierCost\": 1765.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"hYWsnIHDCNChxCYDd26swZ9AsmVuCthLeqkwR2WrmbE="},"e1ed20a4-6ec0-470f-ac44-2154674f4d1e":{"id_":"e1ed20a4-6ec0-470f-ac44-2154674f4d1e","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"5c17ab71-ec3e-40ea-a53b-8dbc878c7aba","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"5y8QfSK7sk+2+sCCRtf/I8YEvy1BR3H+fpRz2D9IuPU="},"NEXT":{"nodeId":"dd59e70e-80bc-4b5a-a720-db1ab219ad62","metadata":{},"hash":"x5drBbrnPoQBhsKn/Yo+gEt32S4XcU/EBmOjlZEhV1M="}},"text":"5,\"buySideRep\": \"Jon Johnson\",\"sellSideRep\": \"Deny Williams\",\"loadProNumber\": \"0-5428\",\"currency\": \"USD\"}],\"outlierItems\": [{\"totalCarrierCost\": 1765.13,\"totalCarrierRate\": 2.58,\"loadPickupDate\": \"2020-07-21\",\"pickupDateTime\": \"2020-07-21T16:00:00Z\",\"deliveredDateTime\": \"2020-10-14T16:00:00Z\",\"transportTypeTms\": \"VR\",\"distance\": 689,\"weight\": 22000,\"commodity\": \"Racks\",\"originCountry\": \"US\",\"originState\": \"IL\",\"originCity\": \"Chicago\",\"originZip\": \"60636\",\"destinationCountry\": \"US\",\"destinationState\": \"TX\",\"destinationCity\": \"Houston\",\"destinationZip\": \"73264\",\"extraStops\": [{\"order\": 0,\"type\": \"LOAD\",\"address\": {\"country\": \"US\",\"city\": \"Red Bluff\",\"state\": \"CA\",\"zip\": \"96080\"},\"appointmentDateTime\": \"2020-10-13T16:00:00Z\"},{\"order\": 1,\"type\": \"UNLOAD\",\"address\": {\"country\": \"US\",\"city\": \"Redding\",\"state\": \"CA\",\"zip\": \"96002\"},\"appointmentDateTime\": \"2020-10-14T16:00:00Z\"}],\"carrierName\": \"JB Hunt\",\"carrierPhoneNumber\": \"121331343\",\"carrierEmail\": \"my@carrieremail.com\",\"customerName\": \"BP\",\"customerPhoneNumber\": \"121331343\",\"customerEmail\": \"my@customeremail.com\",\"sellRate\": 1900.5,\"buySideRep\": \"Jon Johnson\",\"sellSideRep\": \"Deny Williams\",\"loadProNumber\": \"0-5428\",\"currency\": \"USD\"}]}MarketIntelligenceMarket Intelligence service v1\nView separately\nTry it in swagger\nList of GreenScreens indices Provides lists of GreenScreen indices for a particular area\nAuthorizations:Request Body schema: application/jsonrequest\nziprequiredstring Area identifyed by zip\ndaterequiredstring <date>  Date in ISO format YYYY-MM-DD\nlocationrequiredstring Enum: \"ORIGIN\" \"DESTINATION\"  Location type for influence calculation\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n422 Unprocessable Entity with multiple errors.429 Too Many Requests\n500 Unhandled server error\npost/marketintelligence/greenscreensSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/marketintelligence/greenscreensTesting server\nhttps://testapi.greenscreens.ai/v1/marketintelligence/greenscreensProduction server (uses live data)\nhttps://api.greenscreens.ai/v1/marketintelligence/greenscreens Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy{\"zip\": \"60636\",\"date\": \"2019-09-18\",\"location\": \"ORIGIN\"} Response samples 200400403404422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"inboundLoadFlow\": {\"instant\": 56,\"derivative\": 19,\"trend\": \"UP\",\"trendOutcome\": \"POSITIVE\"},\"outboundLoadFlow\": {\"instant\": 56,\"derivative\": 19,\"trend\": \"UP\",\"trendOutcome\": \"POSITIVE\"}}Negotiation advice for provided lane Negotiation advice for provided lane\nParameter notes:\n\nregion - defaults to ZIP if not provided\n\nAuthorizations:query ParameterstransportTyperequiredstring Enum: \"VAN\" \"REEFER\" \"FLATBED\"   Example:  transportType=VANTransport type\noriginCountrystring  Example:  originCountry=USOrigin country.Two letter country code in ISO 3166-1 alpha-2 format\noriginStatestring  Example:  originState=NYOrigin state\noriginCitystring  Example:  originCity=SchenectadyOrigin city\noriginZiprequiredstring  Example:  originZip=12345Origin area zip\ndestinationCountrystring  Example:  destinationCountry=USDestination country.Two letter country code in ISO 3166-1 alpha-2 format\ndestinationStatestring  Example:  destinationState=ILDestination state\ndestinationCitystring  Example:  destinationCity=ChicagoDestination city\ndestinationZiprequiredstring  Example:  destinationZip=60636Destination area zip\nhasExtraStopsboolean Default:  false  Example:  hasExtraStops=trueSignifies whether the requested lane has extra stops or not.If true, multistop loads will be included during calculations.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"APazE/4y+ImuKsNUZt1uzbIyoE8AQuIwpMTlBCAO5CY="},"dd59e70e-80bc-4b5a-a720-db1ab219ad62":{"id_":"dd59e70e-80bc-4b5a-a720-db1ab219ad62","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"e1ed20a4-6ec0-470f-ac44-2154674f4d1e","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"FlzSlDtdtd/MD0QTVuf1cRYZ8tZiq35A8V4tikz94ok="},"NEXT":{"nodeId":"bf98f25b-436a-4a44-91f7-7540e018935d","metadata":{},"hash":"8DtWfDkfriq5DGuv+rxFCsS5oNP9aMBuCBDLL/x9v+0="}},"text":"Two letter country code in ISO 3166-1 alpha-2 format\noriginStatestring  Example:  originState=NYOrigin state\noriginCitystring  Example:  originCity=SchenectadyOrigin city\noriginZiprequiredstring  Example:  originZip=12345Origin area zip\ndestinationCountrystring  Example:  destinationCountry=USDestination country.Two letter country code in ISO 3166-1 alpha-2 format\ndestinationStatestring  Example:  destinationState=ILDestination state\ndestinationCitystring  Example:  destinationCity=ChicagoDestination city\ndestinationZiprequiredstring  Example:  destinationZip=60636Destination area zip\nhasExtraStopsboolean Default:  false  Example:  hasExtraStops=trueSignifies whether the requested lane has extra stops or not.If true, multistop loads will be included during calculations.pickUpDateTimestring <date-time>   Example:  pickUpDateTime=2020-01-11T16:00:00ZPickUp date time\ncurrencystring  Example:  currency=USDCode of the currency that you want the response to be in.Format is ISO 4217\nregionstring Enum: \"CITY\" \"CITY_ZIP\" \"ZIP_CITY\" \"ZIP\" \"3DZIP\" \"KMA\"   Example:  region=ZIPDetermines the size of the area around the origin and destination points, \nthat will be searched for the related data.CITY - narrow, city wide, area\nZIP - narrow, five digit zip, area\n3DZIP - medium, short zip, area\nKMA - big, market wide, area\nCITY_ZIP - a special option that sets origin area to CITY and destination area to ZIP\nZIP_CITY - a special option that sets origin area to ZIP and destination area to CITY\n\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n429 Too Many Requests\n500 Unhandled server error\nget/marketintelligence/negotiation-adviceSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/marketintelligence/negotiation-adviceTesting server\nhttps://testapi.greenscreens.ai/v1/marketintelligence/negotiation-adviceProduction server (uses live data)\nhttps://api.greenscreens.ai/v1/marketintelligence/negotiation-advice Request samples Node + RequestPython + RequestsPhp + CurlCopyconst request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://sandboxapi.greenscreens.ai/v1/marketintelligence/negotiation-advice',\n  qs: {\n    transportType: 'VAN',\n    originCountry: 'US',\n    originState: 'NY',\n    originCity: 'Schenectady',\n    originZip: '12345',\n    destinationCountry: 'US',\n    destinationState: 'IL',\n    destinationCity: 'Chicago',\n    destinationZip: '60636',\n    hasExtraStops: 'true',\n    pickUpDateTime: '2020-01-11T16:00:00Z',\n    currency: 'USD',\n    region: 'ZIP'\n  },\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n Response samples 200400403404429500Content typeapplication/jsonCopy Expand all  Collapse all {\"lastPaid\": {\"amount\": 12345.67,\"date\": \"2020-01-13T16:00:00Z\",\"days\": 30,\"carrier\": \"Horns and hooves trucks\"},\"minPaid\": {\"amount\": 12345.67,\"date\": \"2020-01-13T16:00:00Z\",\"days\": 30},\"maxPaid\": {\"amount\": 12345.67,\"date\": \"2020-01-13T16:00:00Z\",\"days\": 30},\"avgShipperCost\": {\"amount\": 12345.67,\"days\": 30},\"rateDiff\": {\"diff\": 12345.67,\"days\": 30},\"laneLoadCount\": {\"loadCount\": 12345,\"averageFlatRate\": 12345.67,\"days\": 30},\"destinationNearHotMarket\": {\"distance\": 12345.67},\"destinationNearCarrierDomicile\": {\"distance\": 12345.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"SBwY9MoD2LQfAeGupF0J8woUsOBln3zLZ3qMCQfw5Dc="},"bf98f25b-436a-4a44-91f7-7540e018935d":{"id_":"bf98f25b-436a-4a44-91f7-7540e018935d","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"dd59e70e-80bc-4b5a-a720-db1ab219ad62","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"x5drBbrnPoQBhsKn/Yo+gEt32S4XcU/EBmOjlZEhV1M="},"NEXT":{"nodeId":"1a7e8a64-7588-453f-ade1-62d62c7fc7ba","metadata":{},"hash":"vAwKrNNg69hFackd2rx/T8AUbNBUJ5iUCj4hrMgxAdM="}},"text":"67,\"date\": \"2020-01-13T16:00:00Z\",\"days\": 30,\"carrier\": \"Horns and hooves trucks\"},\"minPaid\": {\"amount\": 12345.67,\"date\": \"2020-01-13T16:00:00Z\",\"days\": 30},\"maxPaid\": {\"amount\": 12345.67,\"date\": \"2020-01-13T16:00:00Z\",\"days\": 30},\"avgShipperCost\": {\"amount\": 12345.67,\"days\": 30},\"rateDiff\": {\"diff\": 12345.67,\"days\": 30},\"laneLoadCount\": {\"loadCount\": 12345,\"averageFlatRate\": 12345.67,\"days\": 30},\"destinationNearHotMarket\": {\"distance\": 12345.67},\"destinationNearCarrierDomicile\": {\"distance\": 12345.67},\"nearTheEndOfThePeriod\": {\"period\": \"YEAR\"},\"irregularBussinesHours\": {\"pickUptime\": 43200},\"holidayIsComing\": {\"days\": 3,\"holiday\": \"CHRISTMAS\"},\"inspectionWeeks\": {\"name\": \"BRAKE_SAFETY_WEEK\"},\"originLtrLow\": {\"ltr\": 12345.67},\"destinationLtrHigh\": {\"ltr\": 12345.67},\"currency\": \"USD\"}PredictionPrediction service v3\nView separately\nTry it in swagger\nOlder version of this api exists.View v2 here\nLane rate prediction Used to request lane rate prediction\nAuthorizations:header ParametersX-GS-Userstring  Example:  kalex@greenscreens.aiCurrently logged in user.Used in cases where this information is \nnot available in the token e.g.web-portable, api integration, etc.\nRequest Body schema: application/jsonpickupDateTimerequiredstring <date-time>  Load pick up date and time in ISO date format.Time zone is ignored.Earliest allowed pickup date is 2015-01-01T00:00:00Z.transportTyperequiredstring (Prediction_TransportType)  Enum: \"VAN\" \"REEFER\" \"FLATBED\"  Transport type\nstopsrequiredArray of objects (Prediction_RateStopArray)   >= 2 items  List of load stops\ncommoditystring Commodity description in free form\ntagstring An optional parameter that can be used to identify the prediction response\ncurrencystring Code of the currency that you want the response to be in.Format is ISO 4217.If not provided, defaults to the currency set in the profile of currently authenticated user.Responses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.424 Failed Dependency.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"dE3b/OL9FxEMlRyJnNChRAX9m9cDVKrf7C1A5mRfgps="},"1a7e8a64-7588-453f-ade1-62d62c7fc7ba":{"id_":"1a7e8a64-7588-453f-ade1-62d62c7fc7ba","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"bf98f25b-436a-4a44-91f7-7540e018935d","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"8DtWfDkfriq5DGuv+rxFCsS5oNP9aMBuCBDLL/x9v+0="},"NEXT":{"nodeId":"b6910a7c-903c-4343-bf81-8d9dc74ae2aa","metadata":{},"hash":"YvEDjtSXMAPFWxVhM2NNG5zO/BA6bNxKEmBcFYiBSv4="}},"text":"Time zone is ignored.Earliest allowed pickup date is 2015-01-01T00:00:00Z.transportTyperequiredstring (Prediction_TransportType)  Enum: \"VAN\" \"REEFER\" \"FLATBED\"  Transport type\nstopsrequiredArray of objects (Prediction_RateStopArray)   >= 2 items  List of load stops\ncommoditystring Commodity description in free form\ntagstring An optional parameter that can be used to identify the prediction response\ncurrencystring Code of the currency that you want the response to be in.Format is ISO 4217.If not provided, defaults to the currency set in the profile of currently authenticated user.Responses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.424 Failed Dependency.429 Too Many Requests\n500 Unhandled server error\npost/prediction/ratesSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v3/prediction/ratesTesting server\nhttps://testapi.greenscreens.ai/v3/prediction/ratesProduction server (uses live data)\nhttps://api.greenscreens.ai/v3/prediction/rates Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"pickupDateTime\": \"2021-09-21T13:00:00Z\",\"transportType\": \"VAN\",\"stops\": [{\"order\": 0,\"country\": \"US\",\"city\": \"Chicago\",\"state\": \"IL\",\"zip\": \"60611\"},{\"order\": 1,\"country\": \"US\",\"city\": \"Dallas\",\"state\": \"TX\",\"zip\": \"75204\"}],\"commodity\": \"Racks\",\"tag\": \"Pro#1234\",\"currency\": \"USD\"} Response samples 200400403422424429500Content typeapplication/jsonCopy Expand all  Collapse all {\"id\": \"83e60ba0-389c-401a-8a7a-a879a2838d6e\",\"targetBuyRate\": 2.24,\"lowBuyRate\": 2.11,\"highBuyRate\": 2.5,\"startBuyRate\": 2.07,\"fuelRate\": 0.33,\"distance\": 289,\"confidenceLevel\": 65,\"acceptanceRates\": [0],\"tag\": \"78206219-883b-4e1a-bd42-4010d3cc21c1\",\"currency\": \"USD\",\"notes\": {\"shortHaulRateInaccurate\": {\"distanceLessThan\": 30},\"multistopDistanceOutlierRateInaccurate\": {\"allowedDistanceDifferenceRange\": {\"minimumPercentage\": 0,\"maximumPercentage\": 100},\"singleStopDistance\": 570}}}Batch lane rate prediction Used to request lane rate predictions in batches\nAuthorizations:header ParametersX-GS-Userstring  Example:  kalex@greenscreens.aiCurrently logged in user.Used in cases where this information is \nnot available in the token e.g.web-portable, api integration, etc.\nRequest Body schema: application/jsonrequestsrequiredArray of objects (Prediction_PredictionRatesRequest)   <= 1000 items  List of prediction requests\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.424 Failed Dependency.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"xOv7cILqUmOA+O2eG8a1hilROTlGtppfNM7CRq5Aj1k="},"b6910a7c-903c-4343-bf81-8d9dc74ae2aa":{"id_":"b6910a7c-903c-4343-bf81-8d9dc74ae2aa","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"1a7e8a64-7588-453f-ade1-62d62c7fc7ba","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"vAwKrNNg69hFackd2rx/T8AUbNBUJ5iUCj4hrMgxAdM="},"NEXT":{"nodeId":"d84ebf54-ad84-4968-8a89-0a526a97047f","metadata":{},"hash":"F+d9TzzXMNKwPFo0+h9P365PrIIz5NeIbjsheW4BST0="}},"text":"Used in cases where this information is \nnot available in the token e.g.web-portable, api integration, etc.\nRequest Body schema: application/jsonrequestsrequiredArray of objects (Prediction_PredictionRatesRequest)   <= 1000 items  List of prediction requests\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.424 Failed Dependency.429 Too Many Requests\n500 Unhandled server error\npost/prediction/batch-ratesSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v3/prediction/batch-ratesTesting server\nhttps://testapi.greenscreens.ai/v3/prediction/batch-ratesProduction server (uses live data)\nhttps://api.greenscreens.ai/v3/prediction/batch-rates Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"requests\": [{\"pickupDateTime\": \"2021-09-21T13:00:00Z\",\"transportType\": \"VAN\",\"stops\": [{\"order\": 0,\"country\": \"US\",\"city\": \"Chicago\",\"state\": \"IL\",\"zip\": \"60611\"},{\"order\": 1,\"country\": \"US\",\"city\": \"Dallas\",\"state\": \"TX\",\"zip\": \"75204\"}],\"commodity\": \"Racks\",\"tag\": \"Pro#1234\",\"currency\": \"USD\"}]} Response samples 200400403422424429500Content typeapplication/jsonCopy Expand all  Collapse all {\"responses\": [{\"id\": \"83e60ba0-389c-401a-8a7a-a879a2838d6e\",\"targetBuyRate\": 2.24,\"lowBuyRate\": 2.11,\"highBuyRate\": 2.5,\"startBuyRate\": 2.07,\"fuelRate\": 0.33,\"distance\": 289,\"confidenceLevel\": 65,\"acceptanceRates\": [0],\"tag\": \"78206219-883b-4e1a-bd42-4010d3cc21c1\",\"currency\": \"USD\",\"notes\": {\"shortHaulRateInaccurate\": {\"distanceLessThan\": 30},\"multistopDistanceOutlierRateInaccurate\": {\"allowedDistanceDifferenceRange\": {\"minimumPercentage\": 0,\"maximumPercentage\": 100},\"singleStopDistance\": 570}},\"status\": \"OK\",\"errorObject\": {\"httpCode\": 424,\"code\": \"not_found_distance\",\"message\": \"Not found route between locations\"}}]}Lane rate prediction history Lane rate prediction request/response history.Sorted from newest to oldest.Authorizations:query Parametersdaterequiredstring <date>   Example:  date=2021-09-21All rate requests made on this day will be returned.ISO date format (YYYY-MM-DD).Responses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.424 Failed Dependency.429 Too Many Requests\n500 Unhandled server error\nget/prediction/historySandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v3/prediction/historyTesting server\nhttps://testapi.greenscreens.ai/v3/prediction/historyProduction server (uses live data)\nhttps://api.greenscreens.ai/v3/prediction/history Request samples Node + RequestPython + RequestsPhp + CurlCopyconst request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://sandboxapi.greenscreens.ai/v3/prediction/history',\n  qs: {date: '2021-09-21'},\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"P90g09cTPN8MzxNDfmg1Et0grgCWrS4rIF6VaIdHwuw="},"d84ebf54-ad84-4968-8a89-0a526a97047f":{"id_":"d84ebf54-ad84-4968-8a89-0a526a97047f","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"b6910a7c-903c-4343-bf81-8d9dc74ae2aa","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"YvEDjtSXMAPFWxVhM2NNG5zO/BA6bNxKEmBcFYiBSv4="},"NEXT":{"nodeId":"a381e802-857c-4f36-9e35-18de665d3780","metadata":{},"hash":"AuwbWqIH8XxxDXasYjJb8dgPUG6x7WVfJj7yeN1bDVY="}},"text":"424 Failed Dependency.429 Too Many Requests\n500 Unhandled server error\nget/prediction/historySandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v3/prediction/historyTesting server\nhttps://testapi.greenscreens.ai/v3/prediction/historyProduction server (uses live data)\nhttps://api.greenscreens.ai/v3/prediction/history Request samples Node + RequestPython + RequestsPhp + CurlCopyconst request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://sandboxapi.greenscreens.ai/v3/prediction/history',\n  qs: {date: '2021-09-21'},\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n Response samples 200400403422424429500Content typeapplication/jsonCopy Expand all  Collapse all {\"items\": [{\"id\": \"83e60ba0-389c-401a-8a7a-a879a2838d6e\",\"dateTime\": \"2021-09-21T13:00:00Z\",\"userEmail\": \"test@carrier.com\",\"transportType\": \"VAN\",\"originCity\": \"Chicago\",\"originState\": \"IL\",\"originZip\": \"60636\",\"destinationCity\": \"Houston\",\"destinationState\": \"TX\",\"destinationZip\": \"73264\",\"pickupDateTime\": \"2021-09-21T13:00:00Z\",\"tag\": \"Pro#1234\",\"currency\": \"USD\",\"targetBuyRate\": 2.24,\"lowBuyRate\": 2.11,\"highBuyRate\": 2.5,\"startBuyRate\": 2.07,\"distance\": 289,\"confidenceLevel\": 65,\"notes\": {\"shortHaulRateInaccurate\": {\"distanceLessThan\": 30},\"multistopDistanceOutlierRateInaccurate\": {\"allowedDistanceDifferenceRange\": {\"minimumPercentage\": 0,\"maximumPercentage\": 100},\"singleStopDistance\": 570}}}]}Lane rate prediction feedback Allows saving feedback for a particular rate\nAuthorizations:path Parametersidrequiredstring  Example:  83e60ba0-389c-401a-8a7a-a879a2838d6eId of the prediction that you want to give feedback for\nRequest Body schema: application/jsonfeedbackrequiredstring Enum: \"PREDICTED_RATE_IS_LOW\" \"PREDICTED_RATE_IS_HIGH\" \"PREDICTED_RATE_IS_GOOD\"  What type of feedback you want to save\nsuggestedRatenumber A rate that you would suggest instead of the predicted one\nResponses201 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n422 Unprocessable Entity with multiple errors.429 Too Many Requests\n500 Unhandled server error\npost/prediction/rates/{id}/feedbackSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v3/prediction/rates/{id}/feedbackTesting server\nhttps://testapi.greenscreens.ai/v3/prediction/rates/{id}/feedbackProduction server (uses live data)\nhttps://api.greenscreens.ai/v3/prediction/rates/{id}/feedback Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy{\"feedback\": \"PREDICTED_RATE_IS_LOW\",\"suggestedRate\": 582.15} Response samples 201400403404422429500Content typeapplication/jsonCopy{\"feedback\": \"PREDICTED_RATE_IS_LOW\",\"suggestedRate\": 582.15}Lane network rate prediction Used to request lane rate prediction based on \nthe full network of load data available to us.Authorizations:header ParametersX-GS-Userstring  Example:  kalex@greenscreens.aiCurrently logged in user.Used in cases where this information is \nnot available in the token e.g.web-portable, api integration, etc.\nRequest Body schema: application/jsonpickupDateTimerequiredstring <date-time>  Load pick up date and time in ISO date format.Time zone is ignored.Earliest allowed pickup date is 2015-01-01T00:00:00Z.transportTyperequiredstring (Prediction_TransportType)  Enum: \"VAN\" \"REEFER\" \"FLATBED\"  Transport type\nstopsrequiredArray of objects (Prediction_RateStopArray)   >= 2 items  List of load stops\ncommoditystring Commodity description in free form\ntagstring An optional parameter that can be used to identify the prediction response\ncurrencystring Code of the currency that you want the response to be in.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"zkZeQZtes716EssLK0Jyz3dgRDE06VCBv+ROjis3cIU="},"a381e802-857c-4f36-9e35-18de665d3780":{"id_":"a381e802-857c-4f36-9e35-18de665d3780","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"d84ebf54-ad84-4968-8a89-0a526a97047f","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"F+d9TzzXMNKwPFo0+h9P365PrIIz5NeIbjsheW4BST0="},"NEXT":{"nodeId":"2fc71b01-cc21-4bf5-81d7-02d3cc88784c","metadata":{},"hash":"jZEFLUol3qC/Aa0TQVuy3H/iVS9CzcXwgkMok2K3h+A="}},"text":"Used in cases where this information is \nnot available in the token e.g.web-portable, api integration, etc.\nRequest Body schema: application/jsonpickupDateTimerequiredstring <date-time>  Load pick up date and time in ISO date format.Time zone is ignored.Earliest allowed pickup date is 2015-01-01T00:00:00Z.transportTyperequiredstring (Prediction_TransportType)  Enum: \"VAN\" \"REEFER\" \"FLATBED\"  Transport type\nstopsrequiredArray of objects (Prediction_RateStopArray)   >= 2 items  List of load stops\ncommoditystring Commodity description in free form\ntagstring An optional parameter that can be used to identify the prediction response\ncurrencystring Code of the currency that you want the response to be in.Format is ISO 4217.If not provided, defaults to the currency set in the profile of currently authenticated user.Responses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.424 Failed Dependency.429 Too Many Requests\n500 Unhandled server error\npost/prediction/network-ratesSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v3/prediction/network-ratesTesting server\nhttps://testapi.greenscreens.ai/v3/prediction/network-ratesProduction server (uses live data)\nhttps://api.greenscreens.ai/v3/prediction/network-rates Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"pickupDateTime\": \"2021-09-21T13:00:00Z\",\"transportType\": \"VAN\",\"stops\": [{\"order\": 0,\"country\": \"US\",\"city\": \"Chicago\",\"state\": \"IL\",\"zip\": \"60611\"},{\"order\": 1,\"country\": \"US\",\"city\": \"Dallas\",\"state\": \"TX\",\"zip\": \"75204\"}],\"commodity\": \"Racks\",\"tag\": \"Pro#1234\",\"currency\": \"USD\"} Response samples 200400403422424429500Content typeapplication/jsonCopy Expand all  Collapse all {\"id\": \"83e60ba0-389c-401a-8a7a-a879a2838d6e\",\"targetBuyRate\": 2.24,\"lowBuyRate\": 2.11,\"highBuyRate\": 2.5,\"startBuyRate\": 2.07,\"fuelRate\": 0.33,\"distance\": 289,\"confidenceLevel\": 65,\"acceptanceRates\": [0],\"tag\": \"78206219-883b-4e1a-bd42-4010d3cc21c1\",\"currency\": \"USD\",\"notes\": {\"shortHaulRateInaccurate\": {\"distanceLessThan\": 30},\"multistopDistanceOutlierRateInaccurate\": {\"allowedDistanceDifferenceRange\": {\"minimumPercentage\": 0,\"maximumPercentage\": 100},\"singleStopDistance\": 570}}}Batch lane network rate prediction Used to request lane rate predictions based on \nthe full network of load data available to us, in batches.Authorizations:header ParametersX-GS-Userstring  Example:  kalex@greenscreens.aiCurrently logged in user.Used in cases where this information is \nnot available in the token e.g.web-portable, api integration, etc.\nRequest Body schema: application/jsonrequestsrequiredArray of objects (Prediction_PredictionRatesRequest)   <= 1000 items  List of prediction requests\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.424 Failed Dependency.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"DI+38h2kcASjSfUf/hDVPzrY1wH5WQcaIOlSCYeDmS0="},"2fc71b01-cc21-4bf5-81d7-02d3cc88784c":{"id_":"2fc71b01-cc21-4bf5-81d7-02d3cc88784c","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"a381e802-857c-4f36-9e35-18de665d3780","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"AuwbWqIH8XxxDXasYjJb8dgPUG6x7WVfJj7yeN1bDVY="},"NEXT":{"nodeId":"64044df2-1f22-4c64-b4af-329b39848d20","metadata":{},"hash":"o4tgBgPaat9Td6zC97iJcCh2O693ECHJqcPgQbvVF3c="}},"text":"Authorizations:header ParametersX-GS-Userstring  Example:  kalex@greenscreens.aiCurrently logged in user.Used in cases where this information is \nnot available in the token e.g.web-portable, api integration, etc.\nRequest Body schema: application/jsonrequestsrequiredArray of objects (Prediction_PredictionRatesRequest)   <= 1000 items  List of prediction requests\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.424 Failed Dependency.429 Too Many Requests\n500 Unhandled server error\npost/prediction/batch-network-ratesSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v3/prediction/batch-network-ratesTesting server\nhttps://testapi.greenscreens.ai/v3/prediction/batch-network-ratesProduction server (uses live data)\nhttps://api.greenscreens.ai/v3/prediction/batch-network-rates Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"requests\": [{\"pickupDateTime\": \"2021-09-21T13:00:00Z\",\"transportType\": \"VAN\",\"stops\": [{\"order\": 0,\"country\": \"US\",\"city\": \"Chicago\",\"state\": \"IL\",\"zip\": \"60611\"},{\"order\": 1,\"country\": \"US\",\"city\": \"Dallas\",\"state\": \"TX\",\"zip\": \"75204\"}],\"commodity\": \"Racks\",\"tag\": \"Pro#1234\",\"currency\": \"USD\"}]} Response samples 200400403422424429500Content typeapplication/jsonCopy Expand all  Collapse all {\"responses\": [{\"id\": \"83e60ba0-389c-401a-8a7a-a879a2838d6e\",\"targetBuyRate\": 2.24,\"lowBuyRate\": 2.11,\"highBuyRate\": 2.5,\"startBuyRate\": 2.07,\"fuelRate\": 0.33,\"distance\": 289,\"confidenceLevel\": 65,\"acceptanceRates\": [0],\"tag\": \"78206219-883b-4e1a-bd42-4010d3cc21c1\",\"currency\": \"USD\",\"notes\": {\"shortHaulRateInaccurate\": {\"distanceLessThan\": 30},\"multistopDistanceOutlierRateInaccurate\": {\"allowedDistanceDifferenceRange\": {\"minimumPercentage\": 0,\"maximumPercentage\": 100},\"singleStopDistance\": 570}},\"status\": \"OK\",\"errorObject\": {\"httpCode\": 424,\"code\": \"not_found_distance\",\"message\": \"Not found route between locations\"}}]}PricingPricing service v1\nView separately\nTry it in swagger\nCreate a priority rule Create a priority rule\nAuthorizations:Request Body schema: application/jsonnamerequiredstring Name of the rule\npriorityrequiredinteger Priority of the rule\nactiverequiredboolean Status of the rule\nconditionsrequiredobject (Pricing_RuleRequestConditions)  Conditions in which this rule is applicable.When multuple conditions are provided the rule is only applied \nif all of them are met.effectsrequiredobject (Pricing_PriorityRuleEffectsInput)  The effects this rule will have on the price calculation.Only one effect is allowed per rule\nResponses201 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"PVLIQ+6EuRVhbuHXBzDn9ykpKCT70mY0gNubC+SeG9k="},"64044df2-1f22-4c64-b4af-329b39848d20":{"id_":"64044df2-1f22-4c64-b4af-329b39848d20","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"2fc71b01-cc21-4bf5-81d7-02d3cc88784c","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"jZEFLUol3qC/Aa0TQVuy3H/iVS9CzcXwgkMok2K3h+A="},"NEXT":{"nodeId":"5001f83a-5d23-4bf1-9cb1-29ccb7e6f538","metadata":{},"hash":"k4OpKS+DcmXoIoPftseRxFWt/PIsuBTEQrWS2H6n5Jg="}},"text":"When multuple conditions are provided the rule is only applied \nif all of them are met.effectsrequiredobject (Pricing_PriorityRuleEffectsInput)  The effects this rule will have on the price calculation.Only one effect is allowed per rule\nResponses201 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.429 Too Many Requests\n500 Unhandled server error\npost/pricing/priority-rulesSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/pricing/priority-rulesTesting server\nhttps://testapi.greenscreens.ai/v1/pricing/priority-rulesProduction server (uses live data)\nhttps://api.greenscreens.ai/v1/pricing/priority-rules Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"name\": \"Customer`s rule\",\"priority\": 3,\"active\": false,\"conditions\": {\"commodity\": [\"Apples\"],\"confidenceLevel\": {\"from\": 70,\"to\": 100},\"customers\": [\"LTR and Co\",\"CocaCola\",\"Walmart\"],\"lanes\": [{\"origins\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\"}],\"destinations\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\"}]}],\"lengthOfHaul\": {\"from\": 50,\"to\": 250},\"matchingTime\": {\"from\": 20,\"to\": 30},\"transitTime\": {\"from\": 10,\"to\": 24},\"transportTypes\": [\"VAN\"],\"users\": [\"string\"],\"weight\": {\"from\": 0,\"to\": 45000}},\"effects\": {\"percentageAdjustment\": {\"percentage\": 15},\"flatAdjustment\": {\"amount\": 15,\"currency\": \"USD\"},\"setSellCost\": {\"amount\": 15,\"currency\": \"USD\"}}} Response samples 201400403422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"id\": 12345,\"name\": \"Customer`s rule\",\"priority\": 3,\"active\": false,\"conditions\": {\"commodity\": [\"Apples\"],\"confidenceLevel\": {\"from\": 70,\"to\": 100},\"customers\": [\"LTR and Co\",\"CocaCola\",\"Walmart\"],\"lanes\": [{\"origins\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}],\"destinations\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}]}],\"lengthOfHaul\": {\"from\": 50,\"to\": 250},\"matchingTime\": {\"from\": 20,\"to\": 30},\"transitTime\": {\"from\": 10,\"to\": 24},\"transportTypes\": [\"VAN\"],\"users\": [\"string\"],\"weight\": {\"from\": 0,\"to\": 45000}},\"effects\": {\"percentageAdjustment\": {\"percentage\": 15},\"flatAdjustment\": {\"amount\": 15,\"currency\": \"USD\"},\"setSellCost\": {\"amount\": 15,\"currency\": \"USD\"}}}Get priority rules Get priority rules\nAuthorizations:Responses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n422 Unprocessable Entity with multiple errors.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"gehku00DdooXMpGyeTU2mCRO9gS/9tVGo1AJ00EX9nY="},"5001f83a-5d23-4bf1-9cb1-29ccb7e6f538":{"id_":"5001f83a-5d23-4bf1-9cb1-29ccb7e6f538","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"64044df2-1f22-4c64-b4af-329b39848d20","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"o4tgBgPaat9Td6zC97iJcCh2O693ECHJqcPgQbvVF3c="},"NEXT":{"nodeId":"56352b0a-af40-4d99-8918-13890e9f1027","metadata":{},"hash":"YLAFm/5cm+JeaRpGCIQII6dH9GxNY1gPIAnzGNjtaOw="}},"text":"429 Too Many Requests\n500 Unhandled server error\nget/pricing/priority-rulesSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/pricing/priority-rulesTesting server\nhttps://testapi.greenscreens.ai/v1/pricing/priority-rulesProduction server (uses live data)\nhttps://api.greenscreens.ai/v1/pricing/priority-rules Request samples Node + RequestPython + RequestsPhp + CurlCopyconst request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://sandboxapi.greenscreens.ai/v1/pricing/priority-rules',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n Response samples 200400403404422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"rules\": [{\"id\": 12345,\"name\": \"Customer`s rule\",\"priority\": 3,\"active\": false,\"conditions\": {\"commodity\": [\"Apples\"],\"confidenceLevel\": {\"from\": 70,\"to\": 100},\"customers\": [\"LTR and Co\",\"CocaCola\",\"Walmart\"],\"lanes\": [{\"origins\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}],\"destinations\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}]}],\"lengthOfHaul\": {\"from\": 50,\"to\": 250},\"matchingTime\": {\"from\": 20,\"to\": 30},\"transitTime\": {\"from\": 10,\"to\": 24},\"transportTypes\": [\"VAN\"],\"users\": [\"string\"],\"weight\": {\"from\": 0,\"to\": 45000}},\"effects\": {\"percentageAdjustment\": {\"percentage\": 15},\"flatAdjustment\": {\"amount\": 15,\"currency\": \"USD\"},\"setSellCost\": {\"amount\": 15,\"currency\": \"USD\"}}}]}Get a priority rule Get a priority rule\nAuthorizations:path ParametersruleIdrequiredinteger <int64>   Example:  12345Id of the priority rule to get\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n422 Unprocessable Entity with multiple errors.429 Too Many Requests\n500 Unhandled server error\nget/pricing/priority-rules/{ruleId}Sandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/pricing/priority-rules/{ruleId}Testing server\nhttps://testapi.greenscreens.ai/v1/pricing/priority-rules/{ruleId}Production server (uses live data)\nhttps://api.greenscreens.ai/v1/pricing/priority-rules/{ruleId} Request samples Node + RequestPython + RequestsPhp + CurlCopyconst request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://sandboxapi.greenscreens.ai/v1/pricing/priority-rules/%7BruleId%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"XcoXpTzNfi7JotwUaKH3XDRen4ZnoK3abBpVGt+jhS0="},"56352b0a-af40-4d99-8918-13890e9f1027":{"id_":"56352b0a-af40-4d99-8918-13890e9f1027","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"5001f83a-5d23-4bf1-9cb1-29ccb7e6f538","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"k4OpKS+DcmXoIoPftseRxFWt/PIsuBTEQrWS2H6n5Jg="},"NEXT":{"nodeId":"da912738-646e-4973-bec5-73babdf44e5f","metadata":{},"hash":"F6g6NBJGXrk9EwjkhTDMQiI8VPj/WvEmuMIeKZZyS/0="}},"text":"log(body);\n});\n Response samples 200400403404422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"id\": 12345,\"name\": \"Customer`s rule\",\"priority\": 3,\"active\": false,\"conditions\": {\"commodity\": [\"Apples\"],\"confidenceLevel\": {\"from\": 70,\"to\": 100},\"customers\": [\"LTR and Co\",\"CocaCola\",\"Walmart\"],\"lanes\": [{\"origins\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}],\"destinations\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}]}],\"lengthOfHaul\": {\"from\": 50,\"to\": 250},\"matchingTime\": {\"from\": 20,\"to\": 30},\"transitTime\": {\"from\": 10,\"to\": 24},\"transportTypes\": [\"VAN\"],\"users\": [\"string\"],\"weight\": {\"from\": 0,\"to\": 45000}},\"effects\": {\"percentageAdjustment\": {\"percentage\": 15},\"flatAdjustment\": {\"amount\": 15,\"currency\": \"USD\"},\"setSellCost\": {\"amount\": 15,\"currency\": \"USD\"}}}Update a priority rule Update a priority rule\nAuthorizations:path ParametersruleIdrequiredinteger <int64>   Example:  12345Id of the priority rule to update\nRequest Body schema: application/jsonnamerequiredstring Name of the rule\npriorityrequiredinteger Priority of the rule\nactiverequiredboolean Status of the rule\nconditionsrequiredobject (Pricing_RuleRequestConditions)  Conditions in which this rule is applicable.When multuple conditions are provided the rule is only applied \nif all of them are met.effectsrequiredobject (Pricing_PriorityRuleEffectsInput)  The effects this rule will have on the price calculation.Only one effect is allowed per rule\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n422 Unprocessable Entity with multiple errors.429 Too Many Requests\n500 Unhandled server error\nput/pricing/priority-rules/{ruleId}Sandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/pricing/priority-rules/{ruleId}Testing server\nhttps://testapi.greenscreens.ai/v1/pricing/priority-rules/{ruleId}Production server (uses live data)\nhttps://api.greenscreens.ai/v1/pricing/priority-rules/{ruleId} Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"name\": \"Customer`s rule\",\"priority\": 3,\"active\": false,\"conditions\": {\"commodity\": [\"Apples\"],\"confidenceLevel\": {\"from\": 70,\"to\": 100},\"customers\": [\"LTR and Co\",\"CocaCola\",\"Walmart\"],\"lanes\": [{\"origins\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\"}],\"destinations\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\"}]}],\"lengthOfHaul\": {\"from\": 50,\"to\": 250},\"matchingTime\": {\"from\": 20,\"to\": 30},\"transitTime\": {\"from\": 10,\"to\": 24},\"transportTypes\": [\"VAN\"],\"users\": [\"string\"],\"weight\": {\"from\": 0,\"to\": 45000}},\"effects\": {\"percentageAdjustment\": {\"percentage\": 15},\"flatAdjustment\": {\"amount\": 15,\"currency\": \"USD\"},\"setSellCost\": {\"amount\": 15,","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"FdYauia0i1hG1vBbVxOnW9EPNHHMvhgl27fYJFqjgS0="},"da912738-646e-4973-bec5-73babdf44e5f":{"id_":"da912738-646e-4973-bec5-73babdf44e5f","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"56352b0a-af40-4d99-8918-13890e9f1027","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"YLAFm/5cm+JeaRpGCIQII6dH9GxNY1gPIAnzGNjtaOw="},"NEXT":{"nodeId":"259d8d54-f10d-4da0-9016-aad0486d5717","metadata":{},"hash":"mlhly07Kp8HTA8R10okSysQJ4yi1DXNAnn7ESXVTh0I="}},"text":"{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\"}]}],\"lengthOfHaul\": {\"from\": 50,\"to\": 250},\"matchingTime\": {\"from\": 20,\"to\": 30},\"transitTime\": {\"from\": 10,\"to\": 24},\"transportTypes\": [\"VAN\"],\"users\": [\"string\"],\"weight\": {\"from\": 0,\"to\": 45000}},\"effects\": {\"percentageAdjustment\": {\"percentage\": 15},\"flatAdjustment\": {\"amount\": 15,\"currency\": \"USD\"},\"setSellCost\": {\"amount\": 15,\"currency\": \"USD\"}}} Response samples 200400403404422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"id\": 12345,\"name\": \"Customer`s rule\",\"priority\": 3,\"active\": false,\"conditions\": {\"commodity\": [\"Apples\"],\"confidenceLevel\": {\"from\": 70,\"to\": 100},\"customers\": [\"LTR and Co\",\"CocaCola\",\"Walmart\"],\"lanes\": [{\"origins\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}],\"destinations\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}]}],\"lengthOfHaul\": {\"from\": 50,\"to\": 250},\"matchingTime\": {\"from\": 20,\"to\": 30},\"transitTime\": {\"from\": 10,\"to\": 24},\"transportTypes\": [\"VAN\"],\"users\": [\"string\"],\"weight\": {\"from\": 0,\"to\": 45000}},\"effects\": {\"percentageAdjustment\": {\"percentage\": 15},\"flatAdjustment\": {\"amount\": 15,\"currency\": \"USD\"},\"setSellCost\": {\"amount\": 15,\"currency\": \"USD\"}}}Delete a priority rule Delete a priority rule\nAuthorizations:path ParametersruleIdrequiredinteger <int64>   Example:  12345Id of the priority rule to delete\nResponses204 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n429 Too Many Requests\n500 Unhandled server error\ndelete/pricing/priority-rules/{ruleId}Sandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/pricing/priority-rules/{ruleId}Testing server\nhttps://testapi.greenscreens.ai/v1/pricing/priority-rules/{ruleId}Production server (uses live data)\nhttps://api.greenscreens.ai/v1/pricing/priority-rules/{ruleId} Request samples Node + RequestPython + RequestsPhp + CurlCopyconst request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://sandboxapi.greenscreens.ai/v1/pricing/priority-rules/%7BruleId%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n Response samples 400403404429500Content typeapplication/jsonCopy{\"code\": \"missing_required_parameter\",\"message\": \"Your request was missing a {par_name} parameter\"}Create a combination rule Create a combination rule\nAuthorizations:Request Body schema: application/jsonnamerequiredstring Name of the rule\nactiverequiredboolean Status of the rule\nconditionsrequiredobject (Pricing_RuleRequestConditions)  Conditions in which this rule is applicable.When multuple conditions are provided the rule is only applied \nif all of them are met.effectsrequiredobject (Pricing_CombinationRuleEffectsInput)  The effects this rule will have on the price calculation.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"mOKzU2tPDdpF/mIEgbqrZgPaX3VjGPjibkhUdetXJ7U="},"259d8d54-f10d-4da0-9016-aad0486d5717":{"id_":"259d8d54-f10d-4da0-9016-aad0486d5717","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"da912738-646e-4973-bec5-73babdf44e5f","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"F6g6NBJGXrk9EwjkhTDMQiI8VPj/WvEmuMIeKZZyS/0="},"NEXT":{"nodeId":"382228a9-1263-4151-9681-71a8dca65c3b","metadata":{},"hash":"AHLptkrBx9ZXS0rF2XmBYS7mX911WkSHYpS5/T7d1DI="}},"text":"ai/v1/pricing/priority-rules/%7BruleId%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n Response samples 400403404429500Content typeapplication/jsonCopy{\"code\": \"missing_required_parameter\",\"message\": \"Your request was missing a {par_name} parameter\"}Create a combination rule Create a combination rule\nAuthorizations:Request Body schema: application/jsonnamerequiredstring Name of the rule\nactiverequiredboolean Status of the rule\nconditionsrequiredobject (Pricing_RuleRequestConditions)  Conditions in which this rule is applicable.When multuple conditions are provided the rule is only applied \nif all of them are met.effectsrequiredobject (Pricing_CombinationRuleEffectsInput)  The effects this rule will have on the price calculation.Only one effect is allowed per rule\nResponses201 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.429 Too Many Requests\n500 Unhandled server error\npost/pricing/combination-rulesSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/pricing/combination-rulesTesting server\nhttps://testapi.greenscreens.ai/v1/pricing/combination-rulesProduction server (uses live data)\nhttps://api.greenscreens.ai/v1/pricing/combination-rules Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"name\": \"Customer`s rule\",\"active\": false,\"conditions\": {\"commodity\": [\"Apples\"],\"confidenceLevel\": {\"from\": 70,\"to\": 100},\"customers\": [\"LTR and Co\",\"CocaCola\",\"Walmart\"],\"lanes\": [{\"origins\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\"}],\"destinations\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\"}]}],\"lengthOfHaul\": {\"from\": 50,\"to\": 250},\"matchingTime\": {\"from\": 20,\"to\": 30},\"transitTime\": {\"from\": 10,\"to\": 24},\"transportTypes\": [\"VAN\"],\"users\": [\"string\"],\"weight\": {\"from\": 0,\"to\": 45000}},\"effects\": {\"percentageAdjustment\": {\"percentage\": 15},\"flatAdjustment\": {\"amount\": 15,\"currency\": \"USD\"}}} Response samples 201400403422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"id\": 12345,\"name\": \"Customer`s rule\",\"active\": false,\"conditions\": {\"commodity\": [\"Apples\"],\"confidenceLevel\": {\"from\": 70,\"to\": 100},\"customers\": [\"LTR and Co\",\"CocaCola\",\"Walmart\"],\"lanes\": [{\"origins\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}],\"destinations\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}]}],\"lengthOfHaul\": {\"from\": 50,\"to\": 250},\"matchingTime\": {\"from\": 20,\"to\": 30},\"transitTime\": {\"from\": 10,\"to\": 24},\"transportTypes\": [\"VAN\"],\"users\": [\"string\"],\"weight\": {\"from\": 0,\"to\": 45000}},\"effects\": {\"percentageAdjustment\": {\"percentage\": 15},\"flatAdjustment\": {\"amount\": 15,\"currency\": \"USD\"}}}Get combination rules Get combination rules\nAuthorizations:Responses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n422 Unprocessable Entity with multiple errors.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"jc9hjNmxtRIWje1bK+HmI1RWkJcfXgTaIAZeaPyafEQ="},"382228a9-1263-4151-9681-71a8dca65c3b":{"id_":"382228a9-1263-4151-9681-71a8dca65c3b","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"259d8d54-f10d-4da0-9016-aad0486d5717","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"mlhly07Kp8HTA8R10okSysQJ4yi1DXNAnn7ESXVTh0I="},"NEXT":{"nodeId":"d9c307d6-ba3f-4a74-b5d6-d8cf23291cb2","metadata":{},"hash":"/P+cPktB45jiTV7+yUe16TQ4ts4xjB3cj3hyDbS3hvA="}},"text":"429 Too Many Requests\n500 Unhandled server error\nget/pricing/combination-rulesSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/pricing/combination-rulesTesting server\nhttps://testapi.greenscreens.ai/v1/pricing/combination-rulesProduction server (uses live data)\nhttps://api.greenscreens.ai/v1/pricing/combination-rules Request samples Node + RequestPython + RequestsPhp + CurlCopyconst request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://sandboxapi.greenscreens.ai/v1/pricing/combination-rules',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n Response samples 200400403404422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"rules\": [{\"id\": 12345,\"name\": \"Customer`s rule\",\"active\": false,\"conditions\": {\"commodity\": [\"Apples\"],\"confidenceLevel\": {\"from\": 70,\"to\": 100},\"customers\": [\"LTR and Co\",\"CocaCola\",\"Walmart\"],\"lanes\": [{\"origins\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}],\"destinations\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}]}],\"lengthOfHaul\": {\"from\": 50,\"to\": 250},\"matchingTime\": {\"from\": 20,\"to\": 30},\"transitTime\": {\"from\": 10,\"to\": 24},\"transportTypes\": [\"VAN\"],\"users\": [\"string\"],\"weight\": {\"from\": 0,\"to\": 45000}},\"effects\": {\"percentageAdjustment\": {\"percentage\": 15},\"flatAdjustment\": {\"amount\": 15,\"currency\": \"USD\"}}}]}Get a combination rule Get a combination rule\nAuthorizations:path ParametersruleIdrequiredinteger <int64>   Example:  12345Id of the combination rule to get\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n422 Unprocessable Entity with multiple errors.429 Too Many Requests\n500 Unhandled server error\nget/pricing/combination-rules/{ruleId}Sandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/pricing/combination-rules/{ruleId}Testing server\nhttps://testapi.greenscreens.ai/v1/pricing/combination-rules/{ruleId}Production server (uses live data)\nhttps://api.greenscreens.ai/v1/pricing/combination-rules/{ruleId} Request samples Node + RequestPython + RequestsPhp + CurlCopyconst request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://sandboxapi.greenscreens.ai/v1/pricing/combination-rules/%7BruleId%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"nK7yvaqu+RyVTWaK5wSv2tzHWkPsr7TO4NH6fZ8v1RM="},"d9c307d6-ba3f-4a74-b5d6-d8cf23291cb2":{"id_":"d9c307d6-ba3f-4a74-b5d6-d8cf23291cb2","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"382228a9-1263-4151-9681-71a8dca65c3b","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"AHLptkrBx9ZXS0rF2XmBYS7mX911WkSHYpS5/T7d1DI="},"NEXT":{"nodeId":"921dec41-0941-4895-a3d2-87708abc9c5e","metadata":{},"hash":"VYgtcww8YM2U4Uhwb9jz5b4yAoPqbL/pILXh+YCeYuU="}},"text":"log(body);\n});\n Response samples 200400403404422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"id\": 12345,\"name\": \"Customer`s rule\",\"active\": false,\"conditions\": {\"commodity\": [\"Apples\"],\"confidenceLevel\": {\"from\": 70,\"to\": 100},\"customers\": [\"LTR and Co\",\"CocaCola\",\"Walmart\"],\"lanes\": [{\"origins\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}],\"destinations\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}]}],\"lengthOfHaul\": {\"from\": 50,\"to\": 250},\"matchingTime\": {\"from\": 20,\"to\": 30},\"transitTime\": {\"from\": 10,\"to\": 24},\"transportTypes\": [\"VAN\"],\"users\": [\"string\"],\"weight\": {\"from\": 0,\"to\": 45000}},\"effects\": {\"percentageAdjustment\": {\"percentage\": 15},\"flatAdjustment\": {\"amount\": 15,\"currency\": \"USD\"}}}Update a combination rule Update a combination rule\nAuthorizations:path ParametersruleIdrequiredinteger <int64>   Example:  12345Id of the combination rule to update\nRequest Body schema: application/jsonnamerequiredstring Name of the rule\nactiverequiredboolean Status of the rule\nconditionsrequiredobject (Pricing_RuleRequestConditions)  Conditions in which this rule is applicable.When multuple conditions are provided the rule is only applied \nif all of them are met.effectsrequiredobject (Pricing_CombinationRuleEffectsInput)  The effects this rule will have on the price calculation.Only one effect is allowed per rule\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n422 Unprocessable Entity with multiple errors.429 Too Many Requests\n500 Unhandled server error\nput/pricing/combination-rules/{ruleId}Sandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/pricing/combination-rules/{ruleId}Testing server\nhttps://testapi.greenscreens.ai/v1/pricing/combination-rules/{ruleId}Production server (uses live data)\nhttps://api.greenscreens.ai/v1/pricing/combination-rules/{ruleId} Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"name\": \"Customer`s rule\",\"active\": false,\"conditions\": {\"commodity\": [\"Apples\"],\"confidenceLevel\": {\"from\": 70,\"to\": 100},\"customers\": [\"LTR and Co\",\"CocaCola\",\"Walmart\"],\"lanes\": [{\"origins\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\"}],\"destinations\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\"}]}],\"lengthOfHaul\": {\"from\": 50,\"to\": 250},\"matchingTime\": {\"from\": 20,\"to\": 30},\"transitTime\": {\"from\": 10,\"to\": 24},\"transportTypes\": [\"VAN\"],\"users\": [\"string\"],\"weight\": {\"from\": 0,\"to\": 45000}},\"effects\": {\"percentageAdjustment\": {\"percentage\": 15},\"flatAdjustment\": {\"amount\": 15,\"currency\": \"USD\"}}} Response samples 200400403404422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"id\": 12345,\"name\": \"Customer`s rule\",\"active\": false,\"conditions\": {\"commodity\": [\"Apples\"],","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"qER6l5k4v27LUDYArx6Oj/5pRNkuH6eIBwst+XvbEFE="},"921dec41-0941-4895-a3d2-87708abc9c5e":{"id_":"921dec41-0941-4895-a3d2-87708abc9c5e","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"d9c307d6-ba3f-4a74-b5d6-d8cf23291cb2","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/P+cPktB45jiTV7+yUe16TQ4ts4xjB3cj3hyDbS3hvA="},"NEXT":{"nodeId":"98e221b8-05e1-437e-b99c-10d1f53ff9cf","metadata":{},"hash":"TCl4W9D+o9TYoMojdvpBwicDktHnoK5jlWRyqLLzxAM="}},"text":"\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\"}]}],\"lengthOfHaul\": {\"from\": 50,\"to\": 250},\"matchingTime\": {\"from\": 20,\"to\": 30},\"transitTime\": {\"from\": 10,\"to\": 24},\"transportTypes\": [\"VAN\"],\"users\": [\"string\"],\"weight\": {\"from\": 0,\"to\": 45000}},\"effects\": {\"percentageAdjustment\": {\"percentage\": 15},\"flatAdjustment\": {\"amount\": 15,\"currency\": \"USD\"}}} Response samples 200400403404422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"id\": 12345,\"name\": \"Customer`s rule\",\"active\": false,\"conditions\": {\"commodity\": [\"Apples\"],\"confidenceLevel\": {\"from\": 70,\"to\": 100},\"customers\": [\"LTR and Co\",\"CocaCola\",\"Walmart\"],\"lanes\": [{\"origins\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}],\"destinations\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}]}],\"lengthOfHaul\": {\"from\": 50,\"to\": 250},\"matchingTime\": {\"from\": 20,\"to\": 30},\"transitTime\": {\"from\": 10,\"to\": 24},\"transportTypes\": [\"VAN\"],\"users\": [\"string\"],\"weight\": {\"from\": 0,\"to\": 45000}},\"effects\": {\"percentageAdjustment\": {\"percentage\": 15},\"flatAdjustment\": {\"amount\": 15,\"currency\": \"USD\"}}}Delete a combination rule Delete a combination rule\nAuthorizations:path ParametersruleIdrequiredinteger <int64>   Example:  12345Id of the combination rule to delete\nResponses204 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n429 Too Many Requests\n500 Unhandled server error\ndelete/pricing/combination-rules/{ruleId}Sandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/pricing/combination-rules/{ruleId}Testing server\nhttps://testapi.greenscreens.ai/v1/pricing/combination-rules/{ruleId}Production server (uses live data)\nhttps://api.greenscreens.ai/v1/pricing/combination-rules/{ruleId} Request samples Node + RequestPython + RequestsPhp + CurlCopyconst request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://sandboxapi.greenscreens.ai/v1/pricing/combination-rules/%7BruleId%7D',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n Response samples 400403404429500Content typeapplication/jsonCopy{\"code\": \"missing_required_parameter\",\"message\": \"Your request was missing a {par_name} parameter\"}Calculate pricing, based on TPL data Returns all pricing suggestions: statistical, rule related, etc. \nintended for TPL pricing and calculated using TPL data.Most of the fields in the request and response are optional.Response fields are related to request fields e.g.if you do not provide\nthe customer name in the request, there will be no customer related\npricing data in the response, and the pricing rules that use customer name predicates\nwill not be found.To get the most possible data in the response, provide all the data you can \nin the request.However if for example you only need customer related pricing data,\nyou can provide only the customer name in the request.Also note that if providing addresses, \norigin and destination country is required.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"5uN3GFlJZXa+bP6GR3xNy3me10glTydumayfwrbiqP0="},"98e221b8-05e1-437e-b99c-10d1f53ff9cf":{"id_":"98e221b8-05e1-437e-b99c-10d1f53ff9cf","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"921dec41-0941-4895-a3d2-87708abc9c5e","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"VYgtcww8YM2U4Uhwb9jz5b4yAoPqbL/pILXh+YCeYuU="},"NEXT":{"nodeId":"fcba0cb4-e743-4dac-b007-cd3a9cb3e72b","metadata":{},"hash":"QtFVvRwWd6TmGKhg6xK8QcyBXLCK4qxtr22P/9iksiw="}},"text":"console.log(body);\n});\n Response samples 400403404429500Content typeapplication/jsonCopy{\"code\": \"missing_required_parameter\",\"message\": \"Your request was missing a {par_name} parameter\"}Calculate pricing, based on TPL data Returns all pricing suggestions: statistical, rule related, etc. \nintended for TPL pricing and calculated using TPL data.Most of the fields in the request and response are optional.Response fields are related to request fields e.g.if you do not provide\nthe customer name in the request, there will be no customer related\npricing data in the response, and the pricing rules that use customer name predicates\nwill not be found.To get the most possible data in the response, provide all the data you can \nin the request.However if for example you only need customer related pricing data,\nyou can provide only the customer name in the request.Also note that if providing addresses, \norigin and destination country is required.The state code can be provided without city and zip, \nand the city name can be provided without a zip code,\nand the zip code can be provided without a city or a state.This will also affect what kind of rules are found and what statistical data\nis calculated and returned.Parameter notes:\n\nregion - defaults to ZIP if not provided\n\nAuthorizations:Request Body schema: application/jsontransportTypestring (Pricing_TransportType)  Enum: \"VAN\" \"REEFER\" \"FLATBED\"  Transport type\nstopsArray of objects (Pricing_Stops)   [ 2 ..12 ] items  A list of stops\nregionstring (Pricing_GeographicalAreaLane)  Enum: \"CITY\" \"CITY_ZIP\" \"ZIP_CITY\" \"ZIP\"  Determines the size of the area around origin and destination points, \nthat will be searched for the related data.CITY - narrow, city wide, area\nZIP - narrow, five digit zip, area\nCITY_ZIP - a special option that sets origin area to CITY and destination area to ZIP\nZIP_CITY - a special option that sets origin area to ZIP and destination area to CITY\n\ncustomerNamestring Customer name\npickupDatestring <date-time>  Pick up date in time zone of origin\ndeliveryDatestring <date-time>  Delivery date in time zone of the destination\nweightnumber <float>  Weight of the cargo in lb\ncommoditystring Name of the commodity\ntargetBuyCostnumber The flat buy cost that the calculated pricing effect will be applied to, \nin order to calculate the flat target sell cost\nconfidenceLevelinteger  [ 0 ..100 ]  Buy rate prediction confidence level \nfrom the rate prediction endpoint response\ncurrencystring (Pricing_Currency)  Enum: \"USD\" \"CAD\"  Currency code in ISO 4217 format (three letter code, e.g.USD)\nIf not provided, defaults to the currency set in the profile \nof currently authenticated user (or currently authenticated company \nif there is no user or user profile setting)\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n404 Item not found\n422 Unprocessable Entity with multiple errors.424 Failed Dependency.429 Too Many Requests\n500 Unhandled server error\npost/pricing/tpl-pricingSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/pricing/tpl-pricingTesting server\nhttps://testapi.greenscreens.ai/v1/pricing/tpl-pricingProduction server (uses live data)\nhttps://api.greenscreens.ai/v1/pricing/tpl-pricing Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"transportType\": \"VAN\",\"stops\": [{\"order\": 0,\"address\": {\"country\": \"US\",\"city\": \"Red Bluff\",\"state\": \"CA\",\"zip\": \"96080\"}},{\"order\": 1,\"address\": {\"country\": \"US\",\"city\": \"Redding\",\"state\": \"CA\",\"zip\": \"96002\"}}],\"region\": \"ZIP\",\"customerName\": \"Test Customer\",\"pickupDate\": \"2020-01-13T16:00:00Z\",\"deliveryDate\": \"2020-01-13T16:00:00Z\",\"weight\": 10000,\"commodity\": \"Apples\",\"targetBuyCost\": 1000,\"confidenceLevel\": 65,\"currency\": \"USD\"} Response samples 200400404422424429500Content typeapplication/jsonCopy Expand all  Collapse all {\"default\": {\"effects\": {\"percentageAdjustment\": {\"percentage\": 15},\"flatAdjustment\": {\"amount\": 15,\"currency\": \"USD\"},\"setSellCost\": {\"amount\": 15,","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"60whMweR0SRyu8EWo5xU/nCZ10RkOlYrv8xsMx5Dluk="},"fcba0cb4-e743-4dac-b007-cd3a9cb3e72b":{"id_":"fcba0cb4-e743-4dac-b007-cd3a9cb3e72b","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"98e221b8-05e1-437e-b99c-10d1f53ff9cf","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"TCl4W9D+o9TYoMojdvpBwicDktHnoK5jlWRyqLLzxAM="},"NEXT":{"nodeId":"079a5ebb-ca39-4f5b-a3aa-e4c2a4a5f975","metadata":{},"hash":"ZLnMG4WMr7vwILMegne8W5hOJXoS3faP8VDOlRYsJ94="}},"text":"\"zip\": \"96080\"}},{\"order\": 1,\"address\": {\"country\": \"US\",\"city\": \"Redding\",\"state\": \"CA\",\"zip\": \"96002\"}}],\"region\": \"ZIP\",\"customerName\": \"Test Customer\",\"pickupDate\": \"2020-01-13T16:00:00Z\",\"deliveryDate\": \"2020-01-13T16:00:00Z\",\"weight\": 10000,\"commodity\": \"Apples\",\"targetBuyCost\": 1000,\"confidenceLevel\": 65,\"currency\": \"USD\"} Response samples 200400404422424429500Content typeapplication/jsonCopy Expand all  Collapse all {\"default\": {\"effects\": {\"percentageAdjustment\": {\"percentage\": 15},\"flatAdjustment\": {\"amount\": 15,\"currency\": \"USD\"},\"setSellCost\": {\"amount\": 15,\"currency\": \"USD\"}},\"targetSellCost\": 1250},\"laneHistorical\": {\"pricing\": {\"average\": 11,\"minimum\": 10,\"maximum\": 13},\"targetSellCost\": 1250},\"customerHistorical\": {\"pricing\": {\"average\": 11,\"minimum\": 10,\"maximum\": 13},\"targetSellCost\": 1250},\"customerOnLaneHistorical\": {\"pricing\": {\"average\": 11,\"minimum\": 10,\"maximum\": 13},\"targetSellCost\": 1250},\"priorityRule\": {\"rule\": {\"id\": 12345,\"name\": \"Customer`s rule\",\"priority\": 3,\"active\": false,\"conditions\": {\"commodity\": [\"Apples\"],\"confidenceLevel\": {\"from\": 70,\"to\": 100},\"customers\": [\"LTR and Co\",\"CocaCola\",\"Walmart\"],\"lanes\": [{\"origins\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}],\"destinations\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}]}],\"lengthOfHaul\": {\"from\": 50,\"to\": 250},\"matchingTime\": {\"from\": 20,\"to\": 30},\"transitTime\": {\"from\": 10,\"to\": 24},\"transportTypes\": [\"VAN\"],\"users\": [\"string\"],\"weight\": {\"from\": 0,\"to\": 45000}},\"effects\": {\"percentageAdjustment\": {\"percentage\": 15},\"flatAdjustment\": {\"amount\": 15,\"currency\": \"USD\"},\"setSellCost\": {\"amount\": 15,\"currency\": \"USD\"}}},\"targetSellCost\": 1250},\"combinationRules\": {\"rules\": [{\"id\": 12345,\"name\": \"Customer`s rule\",\"active\": false,\"conditions\": {\"commodity\": [\"Apples\"],\"confidenceLevel\": {\"from\": 70,\"to\": 100},\"customers\": [\"LTR and Co\",\"CocaCola\",\"Walmart\"],\"lanes\": [{\"origins\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}],\"destinations\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}]}],\"lengthOfHaul\": {\"from\": 50,\"to\": 250},\"matchingTime\": {\"from\": 20,\"to\": 30},\"transitTime\": {\"from\": 10,\"to\": 24},","textTemplate":"","startCharIdx":86514,"endCharIdx":89347,"metadataSeparator":"\n","type":"TEXT","hash":"1klilg5bRCqLIznPbXPrbgcXIR/FgpD1mk/3FmRVBHM="},"079a5ebb-ca39-4f5b-a3aa-e4c2a4a5f975":{"id_":"079a5ebb-ca39-4f5b-a3aa-e4c2a4a5f975","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"fcba0cb4-e743-4dac-b007-cd3a9cb3e72b","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"QtFVvRwWd6TmGKhg6xK8QcyBXLCK4qxtr22P/9iksiw="},"NEXT":{"nodeId":"f4a1bd87-d2a1-4580-95c9-197e9f4e1fab","metadata":{},"hash":"hfMOxIh//wrBfh0jVQtdzsxh8mN58V3TPiB2r8qEPJs="}},"text":"{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}],\"destinations\": [{\"type\": \"ANYWHERE\"},{\"type\": \"STATE\",\"country\": \"US\",\"state\": \"IL\"},{\"type\": \"CITY\",\"country\": \"US\",\"state\": \"IL\",\"city\": \"Chicago\"},{\"type\": \"MARKET\",\"country\": \"US\",\"marketCode\": \"NY_ALB\",\"marketName\": \"Albany Market\"}]}],\"lengthOfHaul\": {\"from\": 50,\"to\": 250},\"matchingTime\": {\"from\": 20,\"to\": 30},\"transitTime\": {\"from\": 10,\"to\": 24},\"transportTypes\": [\"VAN\"],\"users\": [\"string\"],\"weight\": {\"from\": 0,\"to\": 45000}},\"effects\": {\"percentageAdjustment\": {\"percentage\": 15},\"flatAdjustment\": {\"amount\": 15,\"currency\": \"USD\"}}}],\"targetSellCost\": 1250},\"suggested\": {\"name\": \"priorityRule\",\"targetSellCost\": 1250},\"currency\": \"USD\"}Get sell rates of partner brokers Intended to be used by a shipper-broker marketplace (a.k.a Shipper TMS).Returns a list of brokers that confirmed that they want to work with\nthe marketplace that is requesting the rates.Each broker in the list will contain a sell rate that they are\nwilling to move the load for\nAuthorizations:Request Body schema: application/jsontransportTyperequiredstring (Pricing_TransportType)  Enum: \"VAN\" \"REEFER\" \"FLATBED\"  Transport type\nstopsrequiredArray of objects (Pricing_Stops)   [ 2 ..12 ] items  A list of stops\nregionstring (Pricing_GeographicalAreaLane)  Enum: \"CITY\" \"CITY_ZIP\" \"ZIP_CITY\" \"ZIP\"  Determines the size of the area around origin and destination points, \nthat will be searched for the related data.CITY - narrow, city wide, area\nZIP - narrow, five digit zip, area\nCITY_ZIP - a special option that sets origin area to CITY and destination area to ZIP\nZIP_CITY - a special option that sets origin area to ZIP and destination area to CITY\n\ncustomerNamestring Customer name\npickupDatestring <date-time>  Pick up date in time zone of origin\ndeliveryDatestring <date-time>  Delivery date in time zone of the destination\nweightnumber <float>  Weight of the cargo in lb\ncommoditystring Name of the commodity\ncurrencystring (Pricing_Currency)  Enum: \"USD\" \"CAD\"  Currency code in ISO 4217 format (three letter code, e.g.USD)\nIf not provided, defaults to the currency set in the profile \nof currently authenticated user (or currently authenticated company \nif there is no user or user profile setting)\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n404 Item not found\n422 Unprocessable Entity with multiple errors.424 Failed Dependency.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"L+IUvFaF3f36o0Hejr5b6h5qs0yWM1jzjfHrYy2zlMk="},"f4a1bd87-d2a1-4580-95c9-197e9f4e1fab":{"id_":"f4a1bd87-d2a1-4580-95c9-197e9f4e1fab","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"079a5ebb-ca39-4f5b-a3aa-e4c2a4a5f975","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"ZLnMG4WMr7vwILMegne8W5hOJXoS3faP8VDOlRYsJ94="},"NEXT":{"nodeId":"f3859da8-5f3f-414a-876f-1987588f6f54","metadata":{},"hash":"tKnH/1nmfJG53TkGJ5Li5ZvBEq5F4/HUOy1PIwiyh4k="}},"text":"g.USD)\nIf not provided, defaults to the currency set in the profile \nof currently authenticated user (or currently authenticated company \nif there is no user or user profile setting)\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n404 Item not found\n422 Unprocessable Entity with multiple errors.424 Failed Dependency.429 Too Many Requests\n500 Unhandled server error\npost/pricing/marketplace/my-broker-partnersSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v1/pricing/marketplace/my-broker-partnersTesting server\nhttps://testapi.greenscreens.ai/v1/pricing/marketplace/my-broker-partnersProduction server (uses live data)\nhttps://api.greenscreens.ai/v1/pricing/marketplace/my-broker-partners Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"transportType\": \"VAN\",\"stops\": [{\"order\": 0,\"address\": {\"country\": \"US\",\"city\": \"Red Bluff\",\"state\": \"CA\",\"zip\": \"96080\"}},{\"order\": 1,\"address\": {\"country\": \"US\",\"city\": \"Redding\",\"state\": \"CA\",\"zip\": \"96002\"}}],\"region\": \"ZIP\",\"customerName\": \"Test Customer\",\"pickupDate\": \"2020-01-13T16:00:00Z\",\"deliveryDate\": \"2020-01-13T16:00:00Z\",\"weight\": 10000,\"commodity\": \"Apples\",\"currency\": \"USD\"} Response samples 200400404422424429500Content typeapplication/jsonCopy Expand all  Collapse all {\"brokers\": [{\"mc\": \"MC00334234\",\"targetSellCost\": 1250}],\"currency\": \"USD\"}ProfilesProfiles service v2\nView separately\nTry it in swagger\nGet brokers Get brokers\nAuthorizations:Responses200 Success\n401 Unauthenticated\n403 Forbidden\n429 Too Many Requests\n500 Unhandled server error\nget/profiles/brokersSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v2/profiles/brokersTesting server\nhttps://testapi.greenscreens.ai/v2/profiles/brokersProduction server (uses live data)\nhttps://api.greenscreens.ai/v2/profiles/brokers Request samples Node + RequestPython + RequestsPhp + CurlCopyconst request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://sandboxapi.greenscreens.ai/v2/profiles/brokers',\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n Response samples 200403429500Content typeapplication/jsonCopy Expand all  Collapse all [{\"id\": \"d6350ba4-b2b1-4a2e-8a22-c341b008533d\",\"name\": \"girteka\",\"displayName\": \"Girteka logistics\",\"credentials\": {\"clientId\": \"client\",\"clientSecret\": \"adf97e90-b1af-4220-a278-eca9349561f6\"}}]Create broker Create broker\nAuthorizations:Request Body schema: application/jsonnamerequiredstring^[a-z0-9]+ Broker short name has to be in lower case and contains only letters and numbers, e.g.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"Igsnjzu5i1xmt76bO6mGWuEUuol4xfppQEO/n4tLDj0="},"f3859da8-5f3f-414a-876f-1987588f6f54":{"id_":"f3859da8-5f3f-414a-876f-1987588f6f54","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"f4a1bd87-d2a1-4580-95c9-197e9f4e1fab","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"hfMOxIh//wrBfh0jVQtdzsxh8mN58V3TPiB2r8qEPJs="},"NEXT":{"nodeId":"c4dc4e74-0184-402e-8b7d-81571554f6b8","metadata":{},"hash":"+7ln0UCHr4mAjZ43O+FugMmrSKsFwm9Q1np6aUI7n6A="}},"text":"log(body);\n});\n Response samples 200403429500Content typeapplication/jsonCopy Expand all  Collapse all [{\"id\": \"d6350ba4-b2b1-4a2e-8a22-c341b008533d\",\"name\": \"girteka\",\"displayName\": \"Girteka logistics\",\"credentials\": {\"clientId\": \"client\",\"clientSecret\": \"adf97e90-b1af-4220-a278-eca9349561f6\"}}]Create broker Create broker\nAuthorizations:Request Body schema: application/jsonnamerequiredstring^[a-z0-9]+ Broker short name has to be in lower case and contains only letters and numbers, e.g.'abc123'\ndisplayNamestring Broker full name\nResponses201 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n409 Conflict\n429 Too Many Requests\n500 Unhandled server error\npost/profiles/brokersSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v2/profiles/brokersTesting server\nhttps://testapi.greenscreens.ai/v2/profiles/brokersProduction server (uses live data)\nhttps://api.greenscreens.ai/v2/profiles/brokers Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy{\"name\": \"girteka\",\"displayName\": \"Girteka logistics\"} Response samples 201400403404409429500Content typeapplication/jsonCopy Expand all  Collapse all {\"id\": \"d6350ba4-b2b1-4a2e-8a22-c341b008533d\",\"name\": \"girteka\",\"displayName\": \"Girteka logistics\",\"credentials\": {\"clientId\": \"client\",\"clientSecret\": \"adf97e90-b1af-4220-a278-eca9349561f6\"}}QuotesQuotes service v2\nView separately\nTry it in swagger\nOlder version of this api exists.View v1 here\nGet quotes Get quotes\nAuthorizations:query ParameterscreatedDateFromstring <date>   Example:  createdDateFrom=2019-09-30'quote created date >= value' filter\ncreatedDateTostring <date>   Example:  createdDateTo=2019-12-30'quote created date <= value' filter\npageinteger  >= 0  Default:  0  Example:  page=5The page to return items from.Used for pagination\nperPageinteger  [ 1 ..500 ]  Default:  20  Example:  perPage=30The amount of items per page.Used for pagination\ncurrencystring Enum: \"USD\" \"CAD\"   Example:  currency=USDCurrency code in ISO 4217 format (three letter code, e.g.USD)\nIf not provided, defaults to the currency set in the profile \nof currently authenticated user (or currently authenticated company \nif there is no user or user profile setting)\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n404 Item not found\n422 Unprocessable Entity with multiple errors.429 Too Many Requests\n500 Unhandled server error\nget/quotesSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v2/quotesTesting server\nhttps://testapi.greenscreens.ai/v2/quotesProduction server (uses live data)\nhttps://api.greenscreens.ai/v2/quotes Request samples Node + RequestPython + RequestsPhp + CurlCopyconst request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://sandboxapi.greenscreens.ai/v2/quotes',\n  qs: {\n    createdDateFrom: '2019-09-30',\n    createdDateTo: '2019-12-30',\n    page: '5',\n    perPage: '30',\n    currency: 'USD'\n  },\n  headers: {Authorization: 'Bearer REPLACE_BEARER_TOKEN'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"qVdTGCtmjRtI7SUeTffvGiZppdcLXWDjcGClrNDJauc="},"c4dc4e74-0184-402e-8b7d-81571554f6b8":{"id_":"c4dc4e74-0184-402e-8b7d-81571554f6b8","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"f3859da8-5f3f-414a-876f-1987588f6f54","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"tKnH/1nmfJG53TkGJ5Li5ZvBEq5F4/HUOy1PIwiyh4k="},"NEXT":{"nodeId":"09ee462c-ba4b-48b6-835a-3eb22894a3b0","metadata":{},"hash":"mirckTphiF92JxQsFWJOmNyG0CD7KXViEsfv1y25T2o="}},"text":"log(body);\n});\n Response samples 200400403404422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"pagination\": {\"page\": 12,\"perPage\": 20},\"items\": [{\"id\": 12345,\"key\": \"afd124faf-12raf-qfa2q-afvawf\",\"quoteId\": \"Q#54321\",\"loadId\": \"12345\",\"userEmail\": \"buddy@greenscreens.ai\",\"transportType\": \"VR\",\"transportTypeGroup\": \"VAN\",\"stops\": [{\"order\": 0,\"address\": {\"country\": \"US\",\"city\": \"Red Bluff\",\"state\": \"CA\",\"zip\": \"96080\",\"type\": \"CITY\"},\"type\": \"LOAD\",\"appointmentDateTime\": \"2020-10-13T16:00:00Z\"},{\"order\": 1,\"address\": {\"country\": \"US\",\"city\": \"Redding\",\"state\": \"CA\",\"zip\": \"96002\",\"type\": \"ZIP\"},\"type\": \"UNLOAD\",\"appointmentDateTime\": \"2020-10-14T16:00:00Z\"}],\"distance\": 289,\"pickupDateTime\": \"2020-09-14T16:00:00Z\",\"deliveredDateTime\": \"2020-09-14T16:00:00Z\",\"expirationDateTime\": \"2020-09-14T16:00:00Z\",\"quoteDateTime\": \"2020-10-13T16:00:00Z\",\"createdDateTime\": \"2020-09-14T16:00:00Z\",\"status\": \"WON\",\"weight\": 22000,\"predictions\": {\"company\": {\"buy\": {\"target\": 1200,\"start\": 1200,\"high\": 1200,\"confidenceLevel\": 65},\"sell\": {\"target\": 1200}},\"network\": {\"buy\": {\"target\": 1200,\"confidenceLevel\": 65}},\"distance\": 289},\"wasViewed\": false,\"rejectionReason\": \"Rejecting, because price is too high\",\"shipper\": {\"id\": \"64378901\",\"name\": \"Walmart\",\"phone\": \"4112228888\",\"email\": \"test@greenscreens.ai\"},\"pricingType\": \"SPOT\",\"pricingTypeGroup\": \"SPOT\",\"contractDuration\": 5,\"numberOfLoads\": 10,\"costs\": {\"linehaul\": 1200,\"accessorials\": [{\"name\": \"Overweight\",\"cost\": 200.5}],\"total\": 1500},\"currency\": \"USD\"}]}Import a quote Import an external quote\nAuthorizations:Request Body schema: application/jsonquoteIdrequiredstring Unique quote id from the customers system.If a quote with the same quoteId will be found in our platform, \nit will be updated.Otherwise a new quote will be created\nloadIdstring Id of the load associated with this quote\nuserEmailrequiredstring Email of the user who will be the owner/creator of the quote\ntransportTyperequiredstring Transport type (original transport type used in provider TMS)\ntransportTypeGrouprequiredstring (Quotes_TransportTypeGroup)  Enum: \"VAN\" \"REEFER\" \"FLATBED\" \"OTHER\"  Transport type group\nstopsrequiredArray of objects (Quotes_StopsInput)   >= 2 items  Quote stop list\ndistancenumber <float>  Distance of the route (in miles)\npickupDateTimerequiredstring <date-time>  Related load pickup date\ndeliveredDateTimestring <date-time>  Related load delivery date\nexpirationDateTimestring <date-time>  Quote expiration date and time in time zone of the user\nquoteDateTimestring <date-time>  When the quote was sent to the customer\nstatusrequiredstring (Quotes_QuoteStatus)  Enum: \"WON\" \"LOST\" \"SENT\" \"EXPIRED\"  Quote lifecycle stage\nrejectionReasonstring Comment about why the quote was rejected\nweightnumber <float>  Total cargo weight in lb\nshipperrequiredobject (Quotes_Shipper)  Shipper data\npricingTyperequiredstring How this shipment was priced to the shipper according to your methodology \n(Primary, Backup, Spot, Spot_api, Spot_EDI, Primary_cost_plus, etc.)\npricingTypeGrouprequiredstring (Quotes_PricingTypeGroup)  Enum: \"CONTRACT\" \"SPOT\" \"OTHER\"  How this shipment was priced to the shipper in the following groupings \n(CONTRACT, SPOT, or OTHER)\ncontractDurationinteger Contract duration in weeks, if applicable\nnumberOfLoadsinteger Number of loads on the lane quoted or won:\n\nfor the day if a spot quote\nfor the duration of the contract if a primary or backup quote\n\ncostsrequiredobject (Quotes_CostsInput)  Quote costs.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"oONfbiAJYmx+LwwsQUYgecm0Baj72OYH/P5hgbtTpfc="},"09ee462c-ba4b-48b6-835a-3eb22894a3b0":{"id_":"09ee462c-ba4b-48b6-835a-3eb22894a3b0","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"c4dc4e74-0184-402e-8b7d-81571554f6b8","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"+7ln0UCHr4mAjZ43O+FugMmrSKsFwm9Q1np6aUI7n6A="},"NEXT":{"nodeId":"cd33ba4d-ae78-49df-aa7e-9d358c84cb00","metadata":{},"hash":"71nNczCdUcHEzmT3xG33+xNHCVoxalXw+3FUYbOTO4s="}},"text":"Linehaul cost and either total cost or acessorials have to be provided \nfor this object to be valid.currencyrequiredstring (Quotes_Currency)  Enum: \"USD\" \"CAD\"  Currency code in ISO 4217 format (three letter code, e.g.USD)\nIf not provided, defaults to the currency set in the profile \nof currently authenticated user (or currently authenticated company \nif there is no user or user profile setting)\nResponses201 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.429 Too Many Requests\n500 Unhandled server error\npost/quotes/importSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v2/quotes/importTesting server\nhttps://testapi.greenscreens.ai/v2/quotes/importProduction server (uses live data)\nhttps://api.greenscreens.ai/v2/quotes/import Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"quoteId\": \"Q#54321\",\"loadId\": \"12345\",\"userEmail\": \"buddy@greenscreens.ai\",\"transportType\": \"VR\",\"transportTypeGroup\": \"VAN\",\"stops\": [{\"order\": 0,\"address\": {\"country\": \"US\",\"city\": \"Red Bluff\",\"state\": \"CA\",\"zip\": \"96080\"},\"type\": \"LOAD\",\"appointmentDateTime\": \"2020-10-13T16:00:00Z\"},{\"order\": 1,\"address\": {\"country\": \"US\",\"city\": \"Redding\",\"state\": \"CA\",\"zip\": \"96002\"},\"type\": \"UNLOAD\",\"appointmentDateTime\": \"2020-10-14T16:00:00Z\"}],\"distance\": 289,\"pickupDateTime\": \"2020-10-13T16:00:00Z\",\"deliveredDateTime\": \"2020-10-14T16:00:00Z\",\"expirationDateTime\": \"2020-10-12T16:00:00+05:00\",\"quoteDateTime\": \"2020-10-13T16:00:00Z\",\"status\": \"WON\",\"rejectionReason\": \"Rejecting, because price is too high\",\"weight\": 22000,\"shipper\": {\"id\": \"64378901\",\"name\": \"Walmart\",\"phone\": \"4112228888\",\"email\": \"test@greenscreens.ai\"},\"pricingType\": \"SPOT\",\"pricingTypeGroup\": \"SPOT\",\"contractDuration\": 5,\"numberOfLoads\": 10,\"costs\": {\"linehaul\": 1200,\"accessorials\": [{\"name\": \"Overweight\",\"cost\": 200.5}],\"total\": 1500},\"currency\": \"USD\"} Response samples 201400403422429500Content typeapplication/jsonCopy{\"status\": \"CREATED\"}Import quotes in a batch Import quotes in a batch\nAuthorizations:Request Body schema: application/jsonquotesrequiredArray of objects (Quotes_QuotesImportRequest)   <= 1000 items  List of quotes to import\nResponses201 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"KvBlUVL5THMiYIZsgR+ntfsCQzoHrSRFkkVg03D+4Hg="},"cd33ba4d-ae78-49df-aa7e-9d358c84cb00":{"id_":"cd33ba4d-ae78-49df-aa7e-9d358c84cb00","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"09ee462c-ba4b-48b6-835a-3eb22894a3b0","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"mirckTphiF92JxQsFWJOmNyG0CD7KXViEsfv1y25T2o="},"NEXT":{"nodeId":"d4cfa520-6198-4ccc-85eb-c708df6f5de8","metadata":{},"hash":"WjihUHIleMinO0rs1jdB02qBqyK8TZsaQfGsdZYrR/8="}},"text":"429 Too Many Requests\n500 Unhandled server error\npost/quotes/batch/importSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v2/quotes/batch/importTesting server\nhttps://testapi.greenscreens.ai/v2/quotes/batch/importProduction server (uses live data)\nhttps://api.greenscreens.ai/v2/quotes/batch/import Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"quotes\": [{\"quoteId\": \"Q#54321\",\"loadId\": \"12345\",\"userEmail\": \"buddy@greenscreens.ai\",\"transportType\": \"VR\",\"transportTypeGroup\": \"VAN\",\"stops\": [{\"order\": 0,\"address\": {\"country\": \"US\",\"city\": \"Red Bluff\",\"state\": \"CA\",\"zip\": \"96080\"},\"type\": \"LOAD\",\"appointmentDateTime\": \"2020-10-13T16:00:00Z\"},{\"order\": 1,\"address\": {\"country\": \"US\",\"city\": \"Redding\",\"state\": \"CA\",\"zip\": \"96002\"},\"type\": \"UNLOAD\",\"appointmentDateTime\": \"2020-10-14T16:00:00Z\"}],\"distance\": 289,\"pickupDateTime\": \"2020-10-13T16:00:00Z\",\"deliveredDateTime\": \"2020-10-14T16:00:00Z\",\"expirationDateTime\": \"2020-10-12T16:00:00+05:00\",\"quoteDateTime\": \"2020-10-13T16:00:00Z\",\"status\": \"WON\",\"rejectionReason\": \"Rejecting, because price is too high\",\"weight\": 22000,\"shipper\": {\"id\": \"64378901\",\"name\": \"Walmart\",\"phone\": \"4112228888\",\"email\": \"test@greenscreens.ai\"},\"pricingType\": \"SPOT\",\"pricingTypeGroup\": \"SPOT\",\"contractDuration\": 5,\"numberOfLoads\": 10,\"costs\": {\"linehaul\": 1200,\"accessorials\": [{\"name\": \"Overweight\",\"cost\": 200.5}],\"total\": 1500},\"currency\": \"USD\"}]} Response samples 201400403422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"responses\": [{\"quoteId\": \"Q#54321\",\"status\": \"CREATED\",\"error\": {\"code\": \"validation_errors_occured\",\"message\": \"Validation errors occured, check errors array for details\",\"errors\": [{\"field\": \"transportType\",\"message\": \"SpaceXDragon transportType is not supported.Valid values are [VAN, FLATBED, ...]\",\"value\": \"SpaceXDragon\"}]}}]}TMSTmsConnector service v2\nView separately\nTry it in swagger\nImport load Import a new load or update an existing one\nAuthorizations:Request Body schema: application/jsonloadIdrequiredstring Unique load id from external TMS.If a load with same loadId will be found in our platform during import, \nit will be updated.Otherwise a new load will be created.originrequiredobject (TmsConnector_StopLocation)  Location specified by country, city, state and zip code.Country is required\nEither city-state pair or zip code is required\nAll four parameters can be passed together\n\n(in case of city-state pair our platform will determine the zip code\nand in case of a zip code, our platform will determine the city and the state)\ndestinationrequiredobject (TmsConnector_StopLocation)  Location specified by country, city, state and zip code.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"pj5grLblu1ESs+NWWy/8zshxuqwtcUl3tZunLT8gFOc="},"d4cfa520-6198-4ccc-85eb-c708df6f5de8":{"id_":"d4cfa520-6198-4ccc-85eb-c708df6f5de8","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"cd33ba4d-ae78-49df-aa7e-9d358c84cb00","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"71nNczCdUcHEzmT3xG33+xNHCVoxalXw+3FUYbOTO4s="},"NEXT":{"nodeId":"2f2eb3e8-eb86-45bc-a017-d55aea709b5a","metadata":{},"hash":"o8+pYGtml1RmaHFXvw5q5S9PkF9cWuUsqr5LsieBvLk="}},"text":"\",\"value\": \"SpaceXDragon\"}]}}]}TMSTmsConnector service v2\nView separately\nTry it in swagger\nImport load Import a new load or update an existing one\nAuthorizations:Request Body schema: application/jsonloadIdrequiredstring Unique load id from external TMS.If a load with same loadId will be found in our platform during import, \nit will be updated.Otherwise a new load will be created.originrequiredobject (TmsConnector_StopLocation)  Location specified by country, city, state and zip code.Country is required\nEither city-state pair or zip code is required\nAll four parameters can be passed together\n\n(in case of city-state pair our platform will determine the zip code\nand in case of a zip code, our platform will determine the city and the state)\ndestinationrequiredobject (TmsConnector_StopLocation)  Location specified by country, city, state and zip code.Country is required\nEither city-state pair or zip code is required\nAll four parameters can be passed together\n\n(in case of city-state pair our platform will determine the zip code\nand in case of a zip code, our platform will determine the city and the state)\nextraStopsArray of objects (TmsConnector_ExtraStops)  Any extra stops along the route between the origin and destination points\nraterequiredobject (TmsConnector_Rate)  Load rate data\npickupDaterequiredstring <date-time>  Pick up date in ISO date format in the time zone of the pick up location\ndeliveredDatestring <date-time>  Delivery date in ISO date format in the time zone of the drop off location\ntransportTyperequiredstring Transport type (original transport type used in provider TMS)\ntransportTypeGrouprequiredstring (TmsConnector_TransportTypeGroup)  Enum: \"VAN\" \"REEFER\" \"FLATBED\" \"OTHER\"  Transport type group\ntransportModestring Default:  \"FTL\" Enum: \"FTL\" \"LTL\" \"PARCEL\" \"INTERMODAL\" \"OTHER\"  Transport mode\nstatusstring Enum: \"OPEN\" \"COVERED\" \"PICKUP\" \"LOADED\" \"STOP\" \"DROPOFF\" \"DELIVERED\" \"TENDER_REJECTED\" \"CLOSED\" \"CANCELED\" \"OTHER\"  Load status.OPEN - Created\nCOVERED - Carrier assigned\nPICKUP - On the pickup stop\nLOADED - In transit\nSTOP - On the extra stop\nDROPOFF - On the drop off stop\nDELIVERED - Delivered\nTENDER_REJECTED - Tender is rejected\nCLOSED - All money paid.Processing over\nCANCELED - Canceled\nOTHER - Any other status, not mentioned in this enum\n\ndetailsobject (TmsConnector_Details)  Additional optional data about the load.shipperobject (TmsConnector_Shipper)  Shipper data\ncarrierobject (TmsConnector_Carrier)  Carrier data\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"q/1WYd3lAoL/Kg834OXKlYfNETgeYwcEs7cbr5hvDEM="},"2f2eb3e8-eb86-45bc-a017-d55aea709b5a":{"id_":"2f2eb3e8-eb86-45bc-a017-d55aea709b5a","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"d4cfa520-6198-4ccc-85eb-c708df6f5de8","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"WjihUHIleMinO0rs1jdB02qBqyK8TZsaQfGsdZYrR/8="},"NEXT":{"nodeId":"10f3b59c-3089-48c6-b600-53e56a7e6b11","metadata":{},"hash":"0Jxd4B9TUBip9zbb6neG4vWBJHqbaWJ7QEwNTPoob6g="}},"text":"OPEN - Created\nCOVERED - Carrier assigned\nPICKUP - On the pickup stop\nLOADED - In transit\nSTOP - On the extra stop\nDROPOFF - On the drop off stop\nDELIVERED - Delivered\nTENDER_REJECTED - Tender is rejected\nCLOSED - All money paid.Processing over\nCANCELED - Canceled\nOTHER - Any other status, not mentioned in this enum\n\ndetailsobject (TmsConnector_Details)  Additional optional data about the load.shipperobject (TmsConnector_Shipper)  Shipper data\ncarrierobject (TmsConnector_Carrier)  Carrier data\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.429 Too Many Requests\n500 Unhandled server error\npost/tms/import-loadSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v2/tms/import-loadTesting server\nhttps://testapi.greenscreens.ai/v2/tms/import-loadProduction server (uses live data)\nhttps://api.greenscreens.ai/v2/tms/import-load Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"loadId\": \"12345\",\"origin\": {\"country\": \"US\",\"city\": \"Sacramento\",\"state\": \"CA\",\"zip\": \"95814\"},\"destination\": {\"country\": \"US\",\"city\": \"Sacramento\",\"state\": \"CA\",\"zip\": \"95814\"},\"extraStops\": [{\"order\": 0,\"address\": {\"country\": \"US\",\"city\": \"Red Bluff\",\"state\": \"CA\",\"zip\": \"96080\"},\"type\": \"LOAD\",\"appointmentDateTime\": \"2020-10-14T16:00:00Z\"},{\"order\": 1,\"address\": {\"country\": \"US\",\"city\": \"Redding\",\"state\": \"CA\",\"zip\": \"96002\"},\"type\": \"UNLOAD\",\"appointmentDateTime\": \"2020-10-15T16:00:00Z\"}],\"rate\": {\"totalShipperLinehaulCost\": 1176,\"totalLinehaulCost\": 956,\"totalFuelCost\": 45,\"accessorials\": [{\"name\": \"Overweight\",\"shipperCost\": 200,\"carrierCost\": 0}],\"totalShipperCost\": 1276,\"totalCarrierCost\": 1130,\"currency\": \"USD\"},\"pickupDate\": \"2021-09-21T13:00:00-04:00\",\"deliveredDate\": \"2021-09-22T18:00:00-04:00\",\"transportType\": \"VR\",\"transportTypeGroup\": \"VAN\",\"transportMode\": \"FTL\",\"status\": \"OPEN\",\"details\": {\"distance\": 434,\"miles\": 434,\"commodity\": \"Racks\",\"weight\": 22000,\"tenderedDate\": \"2020-01-11T16:00:00Z\",\"bookedDate\": \"2020-01-11T16:00:00Z\",\"tordFlag\": false,\"hazmat\": false,\"hotshot\": false,\"teamDrive\": false,\"overdimensional\": false,\"dedicatedCarrierContract\": false,\"asset\": false,\"pricingType\": \"Spot\",\"pricingTypeGroup\": \"SPOT\",\"carrierAccountManager\": \"Adrian Burch\",\"shipperAccountManager\": \"Josh Cale\",\"salesManager\": \"James Buckley\",\"userGroupId\": \"Main office\"},\"shipper\": {\"id\": \"12345\",\"name\": \"Shipper company\"},\"carrier\": {\"id\": \"12345\",\"name\": \"Carrier company\"}} Response samples 200400403422429500Content typeapplication/jsonCopy{\"id\": \"c6447366-9700-4851-854b-2bb41f03cde0\",\"loadId\": \"pr0-003\",\"status\": \"CREATED\"}Import load in to the provided company Import a load in to the list of loads of a provided company.Can also be used to update an existing load.Authorizations:Request Body schema: application/jsonbrokerIdrequiredstring Id of the company that you want the load to be imported in to.(this is an id you receive when registering a new company with us)\nloadIdrequiredstring Unique load id from external TMS.If a load with same loadId will be found in our platform during import, \nit will be updated.Otherwise a new load will be created.originrequiredobject (TmsConnector_StopLocation)  Location specified by country, city, state and zip code.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"ExR7ICNBbmCLVWZulaqXVXZe2RaBcprFG7xiVxNehRk="},"10f3b59c-3089-48c6-b600-53e56a7e6b11":{"id_":"10f3b59c-3089-48c6-b600-53e56a7e6b11","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"2f2eb3e8-eb86-45bc-a017-d55aea709b5a","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"o8+pYGtml1RmaHFXvw5q5S9PkF9cWuUsqr5LsieBvLk="},"NEXT":{"nodeId":"fab1e195-9841-4dcd-8ec5-701e5b009f32","metadata":{},"hash":"QLq6/8piTn20aQopn2NX0QEJ9Iuso/Zb0d240nQc8T0="}},"text":"Can also be used to update an existing load.Authorizations:Request Body schema: application/jsonbrokerIdrequiredstring Id of the company that you want the load to be imported in to.(this is an id you receive when registering a new company with us)\nloadIdrequiredstring Unique load id from external TMS.If a load with same loadId will be found in our platform during import, \nit will be updated.Otherwise a new load will be created.originrequiredobject (TmsConnector_StopLocation)  Location specified by country, city, state and zip code.Country is required\nEither city-state pair or zip code is required\nAll four parameters can be passed together\n\n(in case of city-state pair our platform will determine the zip code\nand in case of a zip code, our platform will determine the city and the state)\ndestinationrequiredobject (TmsConnector_StopLocation)  Location specified by country, city, state and zip code.Country is required\nEither city-state pair or zip code is required\nAll four parameters can be passed together\n\n(in case of city-state pair our platform will determine the zip code\nand in case of a zip code, our platform will determine the city and the state)\nextraStopsArray of objects (TmsConnector_ExtraStops)  Any extra stops along the route between the origin and destination points\nraterequiredobject (TmsConnector_Rate)  Load rate data\npickupDaterequiredstring <date-time>  Pick up date in ISO date format in the time zone of the pick up location\ndeliveredDatestring <date-time>  Delivery date in ISO date format in the time zone of the drop off location\ntransportTyperequiredstring Transport type (original transport type used in provider TMS)\ntransportTypeGrouprequiredstring (TmsConnector_TransportTypeGroup)  Enum: \"VAN\" \"REEFER\" \"FLATBED\" \"OTHER\"  Transport type group\ntransportModestring Default:  \"FTL\" Enum: \"FTL\" \"LTL\" \"PARCEL\" \"INTERMODAL\" \"OTHER\"  Transport mode\nstatusstring Enum: \"OPEN\" \"COVERED\" \"PICKUP\" \"LOADED\" \"STOP\" \"DROPOFF\" \"DELIVERED\" \"TENDER_REJECTED\" \"CLOSED\" \"CANCELED\" \"OTHER\"  Load status.OPEN - Created\nCOVERED - Carrier assigned\nPICKUP - On the pickup stop\nLOADED - In transit\nSTOP - On the extra stop\nDROPOFF - On the drop off stop\nDELIVERED - Delivered\nTENDER_REJECTED - Tender is rejected\nCLOSED - All money paid.Processing over\nCANCELED - Canceled\nOTHER - Any other status, not mentioned in this enum\n\ndetailsobject (TmsConnector_Details)  Additional optional data about the load.shipperobject (TmsConnector_Shipper)  Shipper data\ncarrierobject (TmsConnector_Carrier)  Carrier data\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"YQeYhqAnlCbZxN7Zqx6+A5vpRODXfSkxkqkkhNzfGHg="},"fab1e195-9841-4dcd-8ec5-701e5b009f32":{"id_":"fab1e195-9841-4dcd-8ec5-701e5b009f32","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"10f3b59c-3089-48c6-b600-53e56a7e6b11","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"0Jxd4B9TUBip9zbb6neG4vWBJHqbaWJ7QEwNTPoob6g="},"NEXT":{"nodeId":"24c9aa43-1071-41ab-aea7-b813258cc344","metadata":{},"hash":"OPYgQV6r3f7v8kI/fo1n6evrHjRlTSkc8744rWmUFos="}},"text":"OPEN - Created\nCOVERED - Carrier assigned\nPICKUP - On the pickup stop\nLOADED - In transit\nSTOP - On the extra stop\nDROPOFF - On the drop off stop\nDELIVERED - Delivered\nTENDER_REJECTED - Tender is rejected\nCLOSED - All money paid.Processing over\nCANCELED - Canceled\nOTHER - Any other status, not mentioned in this enum\n\ndetailsobject (TmsConnector_Details)  Additional optional data about the load.shipperobject (TmsConnector_Shipper)  Shipper data\ncarrierobject (TmsConnector_Carrier)  Carrier data\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.429 Too Many Requests\n500 Unhandled server error\npost/tms/import-load-for-providerSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v2/tms/import-load-for-providerTesting server\nhttps://testapi.greenscreens.ai/v2/tms/import-load-for-providerProduction server (uses live data)\nhttps://api.greenscreens.ai/v2/tms/import-load-for-provider Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"brokerId\": \"6F9619FF-8B86-D011-B42D-00CF4FC964FF\",\"loadId\": \"12345\",\"origin\": {\"country\": \"US\",\"city\": \"Sacramento\",\"state\": \"CA\",\"zip\": \"95814\"},\"destination\": {\"country\": \"US\",\"city\": \"Sacramento\",\"state\": \"CA\",\"zip\": \"95814\"},\"extraStops\": [{\"order\": 0,\"address\": {\"country\": \"US\",\"city\": \"Red Bluff\",\"state\": \"CA\",\"zip\": \"96080\"},\"type\": \"LOAD\",\"appointmentDateTime\": \"2020-10-14T16:00:00Z\"},{\"order\": 1,\"address\": {\"country\": \"US\",\"city\": \"Redding\",\"state\": \"CA\",\"zip\": \"96002\"},\"type\": \"UNLOAD\",\"appointmentDateTime\": \"2020-10-15T16:00:00Z\"}],\"rate\": {\"totalShipperLinehaulCost\": 1176,\"totalLinehaulCost\": 956,\"totalFuelCost\": 45,\"accessorials\": [{\"name\": \"Overweight\",\"shipperCost\": 200,\"carrierCost\": 0}],\"totalShipperCost\": 1276,\"totalCarrierCost\": 1130,\"currency\": \"USD\"},\"pickupDate\": \"2021-09-21T13:00:00-04:00\",\"deliveredDate\": \"2021-09-22T18:00:00-04:00\",\"transportType\": \"VR\",\"transportTypeGroup\": \"VAN\",\"transportMode\": \"FTL\",\"status\": \"OPEN\",\"details\": {\"distance\": 434,\"miles\": 434,\"commodity\": \"Racks\",\"weight\": 22000,\"tenderedDate\": \"2020-01-11T16:00:00Z\",\"bookedDate\": \"2020-01-11T16:00:00Z\",\"tordFlag\": false,\"hazmat\": false,\"hotshot\": false,\"teamDrive\": false,\"overdimensional\": false,\"dedicatedCarrierContract\": false,\"asset\": false,\"pricingType\": \"Spot\",\"pricingTypeGroup\": \"SPOT\",\"carrierAccountManager\": \"Adrian Burch\",\"shipperAccountManager\": \"Josh Cale\",\"salesManager\": \"James Buckley\",\"userGroupId\": \"Main office\"},\"shipper\": {\"id\": \"12345\",\"name\": \"Shipper company\"},\"carrier\": {\"id\": \"12345\",\"name\": \"Carrier company\"}} Response samples 200400403422429500Content typeapplication/jsonCopy{\"id\": \"c6447366-9700-4851-854b-2bb41f03cde0\",\"loadId\": \"pr0-003\",\"status\": \"CREATED\"}Imports loads in batches Used to import and/or update loads in batches\nAuthorizations:Request Body schema: application/jsonloadsrequiredArray of objects (TmsConnector_ImportLoadRequest)  List of loads to import or update\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"yz3H7GKviw0qoJ4aa5ISbZZmTgHoaXRKIxsq58YmCwo="},"24c9aa43-1071-41ab-aea7-b813258cc344":{"id_":"24c9aa43-1071-41ab-aea7-b813258cc344","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"fab1e195-9841-4dcd-8ec5-701e5b009f32","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"QLq6/8piTn20aQopn2NX0QEJ9Iuso/Zb0d240nQc8T0="},"NEXT":{"nodeId":"676e6a9e-0054-4785-8ce5-e2f61e206446","metadata":{},"hash":"leWeo0HLFIv/3WUvrr3yPQajjbxlgb09Toj1WN6WWJw="}},"text":"429 Too Many Requests\n500 Unhandled server error\npost/tms/batch/import-loadSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v2/tms/batch/import-loadTesting server\nhttps://testapi.greenscreens.ai/v2/tms/batch/import-loadProduction server (uses live data)\nhttps://api.greenscreens.ai/v2/tms/batch/import-load Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"loads\": [{\"loadId\": \"12345\",\"origin\": {\"country\": \"US\",\"city\": \"Sacramento\",\"state\": \"CA\",\"zip\": \"95814\"},\"destination\": {\"country\": \"US\",\"city\": \"Sacramento\",\"state\": \"CA\",\"zip\": \"95814\"},\"extraStops\": [{\"order\": 0,\"address\": {\"country\": \"US\",\"city\": \"Red Bluff\",\"state\": \"CA\",\"zip\": \"96080\"},\"type\": \"LOAD\",\"appointmentDateTime\": \"2020-10-14T16:00:00Z\"},{\"order\": 1,\"address\": {\"country\": \"US\",\"city\": \"Redding\",\"state\": \"CA\",\"zip\": \"96002\"},\"type\": \"UNLOAD\",\"appointmentDateTime\": \"2020-10-15T16:00:00Z\"}],\"rate\": {\"totalShipperLinehaulCost\": 1176,\"totalLinehaulCost\": 956,\"totalFuelCost\": 45,\"accessorials\": [{\"name\": \"Overweight\",\"shipperCost\": 200,\"carrierCost\": 0}],\"totalShipperCost\": 1276,\"totalCarrierCost\": 1130,\"currency\": \"USD\"},\"pickupDate\": \"2021-09-21T13:00:00-04:00\",\"deliveredDate\": \"2021-09-22T18:00:00-04:00\",\"transportType\": \"VR\",\"transportTypeGroup\": \"VAN\",\"transportMode\": \"FTL\",\"status\": \"OPEN\",\"details\": {\"distance\": 434,\"miles\": 434,\"commodity\": \"Racks\",\"weight\": 22000,\"tenderedDate\": \"2020-01-11T16:00:00Z\",\"bookedDate\": \"2020-01-11T16:00:00Z\",\"tordFlag\": false,\"hazmat\": false,\"hotshot\": false,\"teamDrive\": false,\"overdimensional\": false,\"dedicatedCarrierContract\": false,\"asset\": false,\"pricingType\": \"Spot\",\"pricingTypeGroup\": \"SPOT\",\"carrierAccountManager\": \"Adrian Burch\",\"shipperAccountManager\": \"Josh Cale\",\"salesManager\": \"James Buckley\",\"userGroupId\": \"Main office\"},\"shipper\": {\"id\": \"12345\",\"name\": \"Shipper company\"},\"carrier\": {\"id\": \"12345\",\"name\": \"Carrier company\"}}]} Response samples 200400403422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"responses\": [{\"id\": \"c6447366-9700-4851-854b-2bb41f03cde0\",\"loadId\": \"pr0-003\",\"status\": \"CREATED\",\"code\": \"validation_errors_occured\",\"message\": \"Validation errors occured, check errors array for details\",\"errors\": [{\"field\": \"transportType\",\"message\": \"SpaceXDragon transportType is not supported.Valid values are [VAN, FLATBED, ...]\",\"value\": \"SpaceXDragon\"}]}]}Imports loads in batches in to the provided company Used to import and/or update loads of a particular company in batches\nAuthorizations:Request Body schema: application/jsonbrokerIdrequiredstring Id of the company that you want the load batch to be imported in to.(this is an id you receive when registering a new company with us)\nloadsrequiredArray of objects (TmsConnector_ImportLoadRequest)  List of loads to import or update\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"5vFH7JCw//3k9uRZc4Fpe6I3n65YT0yZAny0ekgA/3M="},"676e6a9e-0054-4785-8ce5-e2f61e206446":{"id_":"676e6a9e-0054-4785-8ce5-e2f61e206446","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"24c9aa43-1071-41ab-aea7-b813258cc344","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"OPYgQV6r3f7v8kI/fo1n6evrHjRlTSkc8744rWmUFos="},"NEXT":{"nodeId":"020bbbfe-bf78-4670-9083-d395746f30c6","metadata":{},"hash":"w6jYfkFx109WLJ8/P6yYdm81FlTgKFag7Xm5lq7zB1g="}},"text":"Valid values are [VAN, FLATBED, ...]\",\"value\": \"SpaceXDragon\"}]}]}Imports loads in batches in to the provided company Used to import and/or update loads of a particular company in batches\nAuthorizations:Request Body schema: application/jsonbrokerIdrequiredstring Id of the company that you want the load batch to be imported in to.(this is an id you receive when registering a new company with us)\nloadsrequiredArray of objects (TmsConnector_ImportLoadRequest)  List of loads to import or update\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity with multiple errors.429 Too Many Requests\n500 Unhandled server error\npost/tms/batch/import-load-for-providerSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v2/tms/batch/import-load-for-providerTesting server\nhttps://testapi.greenscreens.ai/v2/tms/batch/import-load-for-providerProduction server (uses live data)\nhttps://api.greenscreens.ai/v2/tms/batch/import-load-for-provider Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"brokerId\": \"6F9619FF-8B86-D011-B42D-00CF4FC964FF\",\"loads\": [{\"loadId\": \"12345\",\"origin\": {\"country\": \"US\",\"city\": \"Sacramento\",\"state\": \"CA\",\"zip\": \"95814\"},\"destination\": {\"country\": \"US\",\"city\": \"Sacramento\",\"state\": \"CA\",\"zip\": \"95814\"},\"extraStops\": [{\"order\": 0,\"address\": {\"country\": \"US\",\"city\": \"Red Bluff\",\"state\": \"CA\",\"zip\": \"96080\"},\"type\": \"LOAD\",\"appointmentDateTime\": \"2020-10-14T16:00:00Z\"},{\"order\": 1,\"address\": {\"country\": \"US\",\"city\": \"Redding\",\"state\": \"CA\",\"zip\": \"96002\"},\"type\": \"UNLOAD\",\"appointmentDateTime\": \"2020-10-15T16:00:00Z\"}],\"rate\": {\"totalShipperLinehaulCost\": 1176,\"totalLinehaulCost\": 956,\"totalFuelCost\": 45,\"accessorials\": [{\"name\": \"Overweight\",\"shipperCost\": 200,\"carrierCost\": 0}],\"totalShipperCost\": 1276,\"totalCarrierCost\": 1130,\"currency\": \"USD\"},\"pickupDate\": \"2021-09-21T13:00:00-04:00\",\"deliveredDate\": \"2021-09-22T18:00:00-04:00\",\"transportType\": \"VR\",\"transportTypeGroup\": \"VAN\",\"transportMode\": \"FTL\",\"status\": \"OPEN\",\"details\": {\"distance\": 434,\"miles\": 434,\"commodity\": \"Racks\",\"weight\": 22000,\"tenderedDate\": \"2020-01-11T16:00:00Z\",\"bookedDate\": \"2020-01-11T16:00:00Z\",\"tordFlag\": false,\"hazmat\": false,\"hotshot\": false,\"teamDrive\": false,\"overdimensional\": false,\"dedicatedCarrierContract\": false,\"asset\": false,\"pricingType\": \"Spot\",\"pricingTypeGroup\": \"SPOT\",\"carrierAccountManager\": \"Adrian Burch\",\"shipperAccountManager\": \"Josh Cale\",\"salesManager\": \"James Buckley\",\"userGroupId\": \"Main office\"},\"shipper\": {\"id\": \"12345\",\"name\": \"Shipper company\"},\"carrier\": {\"id\": \"12345\",\"name\": \"Carrier company\"}}]} Response samples 200400403422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"responses\": [{\"id\": \"c6447366-9700-4851-854b-2bb41f03cde0\",\"loadId\": \"pr0-003\",\"status\": \"CREATED\",\"code\": \"validation_errors_occured\",\"message\": \"Validation errors occured, check errors array for details\",\"errors\": [{\"field\": \"transportType\",\"message\": \"SpaceXDragon transportType is not supported.Valid values are [VAN, FLATBED, ...]","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"EMqQVzqvPhcKhdO1oVpPxFZIJpOqmtb88dOReb3oEso="},"020bbbfe-bf78-4670-9083-d395746f30c6":{"id_":"020bbbfe-bf78-4670-9083-d395746f30c6","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"676e6a9e-0054-4785-8ce5-e2f61e206446","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"leWeo0HLFIv/3WUvrr3yPQajjbxlgb09Toj1WN6WWJw="},"NEXT":{"nodeId":"5dc83acf-654d-4966-8d03-db31eaf7b748","metadata":{},"hash":"aP6o+62RlK7vNBbSzfDVf3JTlLTAQ/if+KOwLa3L+Sc="}},"text":"Valid values are [VAN, FLATBED, ...]\",\"value\": \"SpaceXDragon\"}]}]}Import carrier Import a new carrier or update an existing one\nAuthorizations:Request Body schema: application/jsonprofileIdrequiredstring Profile id\ncompanyNamerequiredstring Company name\nlegalNamestring The official name of entity that owns a business\nmcstring Operating authority number assigned by the FMCSA to both carriers and brokers\ndotstring USDOT number assigned by the FMCSA to companies that operate commercial vehicles\nscacstring Standard Carrier Alpha Code to identify vessel operating common carriers\ncontactobject (TmsConnector_ContactObject)  Contact data\nstatusstring (TmsConnector_ProfileStatus)  Default:  \"ACTIVE\" Enum: \"ACTIVE\" \"INACTIVE\"  Signifies whether the imported profile is in Active or Inactive status\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity.429 Too Many Requests\n500 Unhandled server error\npost/tms/import-carrierSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v2/tms/import-carrierTesting server\nhttps://testapi.greenscreens.ai/v2/tms/import-carrierProduction server (uses live data)\nhttps://api.greenscreens.ai/v2/tms/import-carrier Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"profileId\": \"13441524\",\"companyName\": \"Carggo\",\"legalName\": \"Carggo\",\"mc\": \"122356\",\"dot\": \"87650005\",\"scac\": \"CGGK\",\"contact\": {\"name\": \"John\",\"phoneNumber\": \"121331343\",\"email\": \"my@email.com\"},\"status\": \"ACTIVE\"} Response samples 200400403422429500Content typeapplication/jsonCopy{\"id\": \"c6447366-9700-4851-854b-2bb41f03cde0\",\"profileId\": \"pr0-003\",\"status\": \"CREATED\"}Import carrier in to the provided company Import a carrier in to the list of carriers of a provided company.Can also be used to update an existing carrier.Authorizations:Request Body schema: application/jsonbrokerIdrequiredstring Id of the company that you want the carrier to be imported in to.(this is an id you receive when registering a new company with us)\nprofileIdrequiredstring Profile id\ncompanyNamerequiredstring Company name\nlegalNamestring The official name of entity that owns a business\nmcstring Operating authority number assigned by the FMCSA to both carriers and brokers\ndotstring USDOT number assigned by the FMCSA to companies that operate commercial vehicles\nscacstring Standard Carrier Alpha Code to identify vessel operating common carriers\ncontactobject (TmsConnector_ContactObject)  Contact data\nstatusstring (TmsConnector_ProfileStatus)  Default:  \"ACTIVE\" Enum: \"ACTIVE\" \"INACTIVE\"  Signifies whether the imported profile is in Active or Inactive status\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity.429 Too Many Requests\n500 Unhandled server error\npost/tms/import-carrier-for-providerSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v2/tms/import-carrier-for-providerTesting server\nhttps://testapi.greenscreens.ai/v2/tms/import-carrier-for-providerProduction server (uses live data)\nhttps://api.greenscreens.ai/v2/tms/import-carrier-for-provider Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"brokerId\": \"6F9619FF-8B86-D011-B42D-00CF4FC964FF\",\"profileId\": \"13441524\",\"companyName\": \"Carggo\",\"legalName\": \"Carggo\",\"mc\": \"122356\",\"dot\": \"87650005\",\"scac\": \"CGGK\",\"contact\": {\"name\": \"John\",\"phoneNumber\": \"121331343\",\"email\": \"my@email.com\"},\"status\": \"ACTIVE\"} Response samples 200400403422429500Content typeapplication/jsonCopy{\"id\": \"c6447366-9700-4851-854b-2bb41f03cde0\",\"profileId\": \"pr0-003\",\"status\": \"CREATED\"}Import carriers in batches Import a batch of carrier profiles\nAuthorizations:Request Body schema: application/jsoncarriersrequiredArray of objects (TmsConnector_CarrierProfile)  List of carriers to import or update\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"PQdqv/XN0Vdc8PvPBdK7P4tzT57cF/TCOw9+SqkVAfY="},"5dc83acf-654d-4966-8d03-db31eaf7b748":{"id_":"5dc83acf-654d-4966-8d03-db31eaf7b748","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"020bbbfe-bf78-4670-9083-d395746f30c6","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"w6jYfkFx109WLJ8/P6yYdm81FlTgKFag7Xm5lq7zB1g="},"NEXT":{"nodeId":"d71da5ea-e2d1-4945-acdc-73d2fd9b9689","metadata":{},"hash":"cjgPPoxjuIQegxEI08QA8AT4/H/Onc4iqJQq5p5jJKI="}},"text":"429 Too Many Requests\n500 Unhandled server error\npost/tms/batch/import-carrierSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v2/tms/batch/import-carrierTesting server\nhttps://testapi.greenscreens.ai/v2/tms/batch/import-carrierProduction server (uses live data)\nhttps://api.greenscreens.ai/v2/tms/batch/import-carrier Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"carriers\": [{\"profileId\": \"13441524\",\"companyName\": \"Carggo\",\"legalName\": \"Carggo\",\"mc\": \"122356\",\"dot\": \"87650005\",\"scac\": \"CGGK\",\"contact\": {\"name\": \"John\",\"phoneNumber\": \"121331343\",\"email\": \"my@email.com\"},\"status\": \"ACTIVE\"}]} Response samples 200400403422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"responses\": [{\"id\": \"c6447366-9700-4851-854b-2bb41f03cde0\",\"profileId\": \"pr0-003\",\"status\": \"CREATED\",\"code\": \"validation_errors_occured\",\"message\": \"Validation errors occured, check errors array for details\",\"errors\": [{\"field\": \"transportType\",\"message\": \"SpaceXDragon transportType is not supported.Valid values are [VAN, FLATBED, ...]\",\"value\": \"SpaceXDragon\"}]}]}Import shipper Import a new shipper or update an existing one\nAuthorizations:Request Body schema: application/jsonprofileIdrequiredstring Profile id\ncompanyNamerequiredstring Company name\nlegalNamestring The official name of entity that owns a business\ncontactobject (TmsConnector_ContactObject)  Contact data\naccountManagerstring Shipper account manager on the broker side\nstatusstring (TmsConnector_ProfileStatus)  Default:  \"ACTIVE\" Enum: \"ACTIVE\" \"INACTIVE\"  Signifies whether the imported profile is in Active or Inactive status\nuserGroupIdstring A unique identifier (id) of a user group, \nthat this profile belongs to.e.g.Main company or an Agency\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity.429 Too Many Requests\n500 Unhandled server error\npost/tms/import-shipperSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v2/tms/import-shipperTesting server\nhttps://testapi.greenscreens.ai/v2/tms/import-shipperProduction server (uses live data)\nhttps://api.greenscreens.ai/v2/tms/import-shipper Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"profileId\": \"13441524\",\"companyName\": \"Carggo\",\"legalName\": \"Carggo\",\"contact\": {\"name\": \"John\",\"phoneNumber\": \"121331343\",\"email\": \"my@email.com\"},\"accountManager\": \"JAMES\",\"status\": \"ACTIVE\",\"userGroupId\": \"Main office\"} Response samples 200400403422429500Content typeapplication/jsonCopy{\"id\": \"c6447366-9700-4851-854b-2bb41f03cde0\",\"profileId\": \"pr0-003\",\"status\": \"CREATED\"}Import a shipper in to the provided company Import a shipper in to the list of shippers of a provided company.Can also be used to update an existing shipper.Authorizations:Request Body schema: application/jsonbrokerIdrequiredstring Id of the company that you want the shipper to be imported in to.(this is an id you receive when registering a new company with us)\nprofileIdrequiredstring Profile id\ncompanyNamerequiredstring Company name\nlegalNamestring The official name of entity that owns a business\ncontactobject (TmsConnector_ContactObject)  Contact data\naccountManagerstring Shipper account manager on the broker side\nstatusstring (TmsConnector_ProfileStatus)  Default:  \"ACTIVE\" Enum: \"ACTIVE\" \"INACTIVE\"  Signifies whether the imported profile is in Active or Inactive status\nuserGroupIdstring A unique identifier (id) of a user group, \nthat this profile belongs to.e.g.Main company or an Agency\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"I1+PIUc2DFA25AeoSAAiBxjq5Hhlsx/J/6oROBzkchg="},"d71da5ea-e2d1-4945-acdc-73d2fd9b9689":{"id_":"d71da5ea-e2d1-4945-acdc-73d2fd9b9689","metadata":{"url":"https://connect.greenscreens.ai"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"8ba3bd26-f342-41f8-a776-fc6814d1db76","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"/W6CG/O2FnS3OtnSF/P0Tnd6v1UgBZOJXjr4xYKmnhg="},"PREVIOUS":{"nodeId":"5dc83acf-654d-4966-8d03-db31eaf7b748","metadata":{"url":"https://connect.greenscreens.ai"},"hash":"aP6o+62RlK7vNBbSzfDVf3JTlLTAQ/if+KOwLa3L+Sc="}},"text":"Can also be used to update an existing shipper.Authorizations:Request Body schema: application/jsonbrokerIdrequiredstring Id of the company that you want the shipper to be imported in to.(this is an id you receive when registering a new company with us)\nprofileIdrequiredstring Profile id\ncompanyNamerequiredstring Company name\nlegalNamestring The official name of entity that owns a business\ncontactobject (TmsConnector_ContactObject)  Contact data\naccountManagerstring Shipper account manager on the broker side\nstatusstring (TmsConnector_ProfileStatus)  Default:  \"ACTIVE\" Enum: \"ACTIVE\" \"INACTIVE\"  Signifies whether the imported profile is in Active or Inactive status\nuserGroupIdstring A unique identifier (id) of a user group, \nthat this profile belongs to.e.g.Main company or an Agency\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity.429 Too Many Requests\n500 Unhandled server error\npost/tms/import-shipper-for-providerSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v2/tms/import-shipper-for-providerTesting server\nhttps://testapi.greenscreens.ai/v2/tms/import-shipper-for-providerProduction server (uses live data)\nhttps://api.greenscreens.ai/v2/tms/import-shipper-for-provider Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"brokerId\": \"6F9619FF-8B86-D011-B42D-00CF4FC964FF\",\"profileId\": \"13441524\",\"companyName\": \"Carggo\",\"legalName\": \"Carggo\",\"contact\": {\"name\": \"John\",\"phoneNumber\": \"121331343\",\"email\": \"my@email.com\"},\"accountManager\": \"JAMES\",\"status\": \"ACTIVE\",\"userGroupId\": \"Main office\"} Response samples 200400403422429500Content typeapplication/jsonCopy{\"id\": \"c6447366-9700-4851-854b-2bb41f03cde0\",\"profileId\": \"pr0-003\",\"status\": \"CREATED\"}Import shippers in batches Import a batch of shipper profiles\nAuthorizations:Request Body schema: application/jsonshippersrequiredArray of objects (TmsConnector_ShipperProfile)  List of shipper profiles to import or update\nResponses200 Success\n400 Bad request\n401 Unauthenticated\n403 Forbidden\n422 Unprocessable Entity.429 Too Many Requests\n500 Unhandled server error\npost/tms/batch/import-shipperSandbox server (as stable as production, but has no data)\nhttps://sandboxapi.greenscreens.ai/v2/tms/batch/import-shipperTesting server\nhttps://testapi.greenscreens.ai/v2/tms/batch/import-shipperProduction server (uses live data)\nhttps://api.greenscreens.ai/v2/tms/batch/import-shipper Request samples PayloadNode + RequestPython + RequestsPhp + CurlContent typeapplication/jsonCopy Expand all  Collapse all {\"shippers\": [{\"profileId\": \"13441524\",\"companyName\": \"Carggo\",\"legalName\": \"Carggo\",\"contact\": {\"name\": \"John\",\"phoneNumber\": \"121331343\",\"email\": \"my@email.com\"},\"accountManager\": \"JAMES\",\"status\": \"ACTIVE\",\"userGroupId\": \"Main office\"}]} Response samples 200400403422429500Content typeapplication/jsonCopy Expand all  Collapse all {\"responses\": [{\"id\": \"c6447366-9700-4851-854b-2bb41f03cde0\",\"profileId\": \"pr0-003\",\"status\": \"CREATED\",\"code\": \"validation_errors_occured\",\"message\": \"Validation errors occured, check errors array for details\",\"errors\": [{\"field\": \"transportType\",\"message\": \"SpaceXDragon transportType is not supported.Valid values are [VAN, FLATBED, ...]\",\"value\": \"SpaceXDragon\"}]}]}","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"jUoD/uravOsLFx1IlYmNF1OfmTDAAA3m5842lz8m2Fc="}},"type":"simple_dict"}}}