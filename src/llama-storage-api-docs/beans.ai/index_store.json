{"docstore/data":{"884cb9a3-3c3f-4787-949c-7d866177c71b":{"indexId":"884cb9a3-3c3f-4787-949c-7d866177c71b","nodesDict":{"56d0ab11-0e95-4f28-9364-efec14351322":{"id_":"56d0ab11-0e95-4f28-9364-efec14351322","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"b394b386-75ef-435d-9898-9884ecffce34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"UuwM3vdUkdbfIqyW/HXQrJZxLR8fhQ+iQp+Kfn74HG8="},"NEXT":{"nodeId":"ce1a119f-1830-4689-a901-281185980121","metadata":{},"hash":"DAf//+h2ldBqRYCLbxeKHwDWsKbH9i141TfYzVdIfLg="}},"text":"Enterprise API v2 - Beans.ai\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProducts\n\n\n\n\n\n\nAPI & DATA\n\n\n\n\n\nROUTING TOOLS\n\n\n\n\nVISUALIZATIONS\n\n\n\n\n\n\n\nGeocoding\nGet accurate navigation points for deliveries and tours\n\n\n\n\n\n\nRouting App & Dispatch\nEnd-to-end solutions for full day ops\n\n\n\n\n\n\nApartment Maps\n2D and 3D Maps for apartments and businesses\n\n\n\n\n\n\n\n\nReverse Geocoding\nHuman-readable addresses from geographical coordinates\n\n\n\n\n\n\nRoute Planning\nPlan routes, split loads, and manage load\n\n\n\n\n\n\nIndoor Navigation\nNavigate within apartments with turn-by-turn directions\n\n\n\n\n\n\n\n\nAddress Verification\nCheck if an address exists or is ambiguous\n\n\n\n\n\n\nGig Drivers App\nLookup tool for apartments, trailer parks, and condos\n\n\n\n\n\n\nImmersive\nPhotometric 3D views of communities\n\n\n\n\n\n\n\n\nAutocomplete\nLet users typeahead addresses\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDistance Matrix\nCalculate accurate ETAs, distances and directions\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProducts\n\nAPI & Data\n\nOverview\n\nGeocoding\nReverse Geocoding\nAddress Verification\nAutocomplete\nDistance Matrix\n\n\nRouting Tools\n\nOverview\n\nRouting App & Dispatch\nRoute Planning\nGig Drivers App\n\n\nVisualizations\n\nOverview\n\nApartment Maps\nIndoor Navigation\nImmersive\n\n\n\n\nIndustries\n\n\n\n\n\n\nTransportation & Logistics\nCourier Carriers, Food Delivery, Ridesharing, Routing Vendors\n\n\n\n\n\n\n\n\nTelecom\nNetwork Planning, Sales, Operations\n\n\n\n\n\n\n\n\nReal Estate\nResidential Real Estate, Commercial Real Estate\n\n\n\n\n\n\n\n\nGovernment and Public Safety\nFirst Responders, CAD Dispatch Systems, Paramedics, Private Ambulances, PSAP\n\n\n\n\n\n\n\nIndustries\n\nTransportation & Logistics\n\nTelecom\n\nReal Estate\n\nGovernment and Public Safety\n\n\n\nPricing\nCompany\n\nIn the Media\n\nCareers\n\n\n\nBlog\n\nTalk to Sales\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnterprise API v2\n\n\n\n\n\n\n\n\n\n\nSearch\nREQUEST\nBase Url •\n            Authentication •\n            Query Parameters •\n            Example Request\n\nRESPONSE\nResponse Object •\n            Route Object •\n            Fragment Object •\n            Point Object •\n            Location Object •\n            LatLng Object •\n            Data Objects •\n            EntranceInstruction Object •\n            Example Response\n\n\nReverse Geocode\nREQUEST\nBase Url •\n            Authentication •\n            Request Body •\n            Example Request\n\nRESPONSE\nResponse Object •\n                      Unit Object •\n                      UnitData Object •\n                      Example Response\n\n\nAddress Autocomplete\n\nBase Url •\n            Authentication •\n            Request Body •\n            Example Request\n\n\nAddress Unitcomplete\n\nBase Url •\n            Authentication •\n            Request Body •\n            Example Request\n\n\nFeedback\n\nBase Url •\n            Authentication •\n            Request Body •\n            Example Request\n\n\nAddress Verifier\n\nBase Url •\n            Authentication •\n            Request Body •\n            Example Request\n\n\nPOI Lookup\n\nBase Url •\n            Authentication •\n            Request Body •\n            Example Request\n\n\nAddress Classification (RBDI)\n\nBase Url •\n            Authentication •\n            Request Body •\n            Example Request\n\n\nAddress Type Identifier\n\nBase Url •\n            Authentication •\n            Request Body •\n            Example Request\n\n\nPublished Data\n\nBase Url •\n            Authentication •\n            Request Body •\n            Example Request\n\n\n\n\nSearch API v2\nRequest\nBase UrlGET https://api.beans.ai/enterprise/v2/search/beans\nAuthentication\n          The Beans Search API uses a standard authorization header to authenticate client requests. You must sign in and create an enterprise account here to get your\n          key before you access the API. If you use an unauthorized key or do not provide one, you will get a NOT_ALLOWED response.\n          \n          Once you have\n          your key and secret available, you are required to specify them in the Authorization header of all your requests, as below,\n          where a2V5OnNlY3JldA== is the base64 encoding of the\n          string \"key:secret\". For\n          more information, see wiki:Basic\n            access authentication\n\nAuthorization: Basic a2V5OnNlY3JldA==\n\n          You may also pass another optional header to track responses at your end. This is handy when your service makes\n          asynchronous requests to the API and you want to tie the response back to your original request.\n          \nTracking-Id: <client request tracking identifer>\n\nQuery Parameters\n\n\n\nParameter\nRequired?\nValues\n\n\n\naddress\nYes\nFull street address (line 1, city, state zip)\n\n\nunit\nNo\nUnit number of address (line 2)\n\n\norigin\nNo\nLatitude,Longitude pair of the end user's current location\n\n\nmode\nNo\nEither of DRIVER_DELIVERS or COSTUMER_OUTSIDE or EMS\n\n\n\nOther headers\n\n\n\nParameter\nValues","textTemplate":"","endCharIdx":4720,"metadataSeparator":"\n","type":"TEXT","hash":"0Mbx8E5cLtwUqPbEZzFsfXYB0qZN2NVJEmRVFNDaKyA="},"ce1a119f-1830-4689-a901-281185980121":{"id_":"ce1a119f-1830-4689-a901-281185980121","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"b394b386-75ef-435d-9898-9884ecffce34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"UuwM3vdUkdbfIqyW/HXQrJZxLR8fhQ+iQp+Kfn74HG8="},"PREVIOUS":{"nodeId":"56d0ab11-0e95-4f28-9364-efec14351322","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"p7HY3FomIuLkoxoU4JyI/00GCx2JcarqaJP5DPmr19A="},"NEXT":{"nodeId":"5f2a9047-2893-48a5-8da0-f49b12e50528","metadata":{},"hash":"ZQyF0MnSMfAg1JjnfLZSiSOoieQLANnFMXXF08sqPiA="}},"text":"Parameter\nRequired?\nValues\n\n\n\naddress\nYes\nFull street address (line 1, city, state zip)\n\n\nunit\nNo\nUnit number of address (line 2)\n\n\norigin\nNo\nLatitude,Longitude pair of the end user's current location\n\n\nmode\nNo\nEither of DRIVER_DELIVERS or COSTUMER_OUTSIDE or EMS\n\n\n\nOther headers\n\n\n\nParameter\nValues\n\n\n\nformat\nJSON, PROTO, or GOOGLE. GOOGLE return the response in the format same as the Google Geocoding API.\n\n\nX-Beansai-Include-Notes-And-Markers\nBoolean. Include notes and markers in the response.\n\n\nX-Beansai-Include-Points-Of-Interest\nBoolean. Include points of interest.\n\n\nX-Beansai-Include-Generated-Route\nBoolean. Include indoor generated path.\n\n\n\nExample Request\n$ curl -X GET \\\n  'https://api2.beans.ai/enterprise/v2/search/beans?address=2255%20Showers%20Dr,%20Mountain%20View,%20CA&unit=352' \\\n  -H 'Authorization: Basic a2V5OnNlY3JldA=='\n\n\nResponse\nResponse Object\n          The response for a search request is a list of routes, with the first route as the primary route, and others following if any alternatives exist. It also contains a Beans generated query id for audit purposes, and the optional\n          tracking id that may have been provided by the client in the request headers.\n          \n\n\n\n\nWhen there are no matches, the field routes would either be omitted or be an empty list.\nThere may be some extra fields in the objects below that are not documented. We advise that your response parsers ignore such fields.\n\n\n\n\n\nResponse Object\nType\nRequired?\nDescription\n\n\n\nroutes\nArray\nNo\nRoute object\n\n\nqueryId\nString\nYes\nBeans generated query id\n\n\npointsOfInterest\nArray\nNo\nPointOfInterest object\n\n\ntrackingId\nString\nNo\nClient provided optional tracking id\n\n\n\nPointOfInterest Object\n          Each PointOfInterest object represents a contextual object around the Routes. For example, building footprints, facilities.\n          \n\n\nPointOfInterest Object\nType\nRequired?\nDescription\n\n\n\ntype\nString\nYes\nOne of FACILITIES, UNIT, BUILDING, ENTRANCE, STAIR, ELEVATOR, or PARKING.\n\n\nname\nString\nNo\nAny descriptive name given to this point of interest\n\n\nfootprint.point\nArray\nNo\nArray of LatLng objects describing the polygon for point of interest\n\n\n\nRoute Object\n          Each route consists of a sequence of ordered fragments, one for each part of the route. It also consists of\n          other the points of interest along the route, such as parking meters, society entrances, and other visual indicators\n          that may be benefical to the end user.\n\n          \n\n\nRoute Object\nType\nRequired?\nDescription\n\n\n\nfragments\nArray\nYes\nFragment Object\n\n\npointsOfInterest\nArray\nNo\nPoint Object (note: this is of different type from the top level PointOfInterest)\n\n\norigin\nLatLng Object\nYes\nSpecifies the origin of the route. This is the first point to which an end user must navigate to before moving to locations provided in the fragments objects.\n\n\ndestination\nLocation Object\nYes\nSpecifies the terminal point of the route. This is the location at which the delivey is most likely to take place. For the mode DRIVER_DELIVERS, for instance, this will often be the exact unit location. However, when\n                we know from the building policy, for example, that the delivery must be to the doorman, the destination may be the location of the reception. For the mode CUSTOMER_OUTSIDE, the destination is often\n                a location on the street where the driver can safely pull over without getting a traffic ticket. For the mode EMS, this will always be the exact unit location, if available. However, when\n                exact unit location is not available, the destination will indicate the nearest known location to the unit.\n              \n\n\n\nFragment Object\n          Each fragment consists of an origin and a destination, each of which is an important waypoint when navigating. The fragment also captures whether the path from the origin to destination is drivable or only accessible on foot.\n\n          \n\n\nFragment Object\nType\nRequired?\nDescription\n\n\n\norigin\nPoint Object\nYes\nSpecifies the starting waypoint of the fragment\n\n\ndestination\nPoint Object\nYes\nSpecifies the terminal waypoint of the fragment\n\n\ntype\nString\nYes\nOne of DRIVING, WALKING, or UNKNOWN.\n\n\n\nPoint Object\n          A point object is a semantic waypoint that specifies a checkpoint for the end user. It primarily consists of three parts -- the location of the waypoint, its type, and occasionally\n          a payload which provides more detailed information about the waypoint.\n\n          \n\n\nPoint Object\nType\nRequired?\nDescription\n\n\n\nlocation\nLatLng Object\nYes\nSpecifies the coordinates of the waypoint.","textTemplate":"","startCharIdx":4420,"endCharIdx":9021,"metadataSeparator":"\n","type":"TEXT","hash":"K0Tl9JmycE9vtB7YzSo0LB6/zFxIOGihBRCIG9m/o2U="},"5f2a9047-2893-48a5-8da0-f49b12e50528":{"id_":"5f2a9047-2893-48a5-8da0-f49b12e50528","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"b394b386-75ef-435d-9898-9884ecffce34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"UuwM3vdUkdbfIqyW/HXQrJZxLR8fhQ+iQp+Kfn74HG8="},"PREVIOUS":{"nodeId":"ce1a119f-1830-4689-a901-281185980121","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"DAf//+h2ldBqRYCLbxeKHwDWsKbH9i141TfYzVdIfLg="},"NEXT":{"nodeId":"0bec297a-1bb2-4f4e-a611-a9433af91bd6","metadata":{},"hash":"3JNAfm8FcFvFIkMAL5hJl8gncIO3aJ7gQzf1CL+A64U="}},"text":"Fragment Object\n          Each fragment consists of an origin and a destination, each of which is an important waypoint when navigating. The fragment also captures whether the path from the origin to destination is drivable or only accessible on foot.\n\n          \n\n\nFragment Object\nType\nRequired?\nDescription\n\n\n\norigin\nPoint Object\nYes\nSpecifies the starting waypoint of the fragment\n\n\ndestination\nPoint Object\nYes\nSpecifies the terminal waypoint of the fragment\n\n\ntype\nString\nYes\nOne of DRIVING, WALKING, or UNKNOWN.\n\n\n\nPoint Object\n          A point object is a semantic waypoint that specifies a checkpoint for the end user. It primarily consists of three parts -- the location of the waypoint, its type, and occasionally\n          a payload which provides more detailed information about the waypoint.\n\n          \n\n\nPoint Object\nType\nRequired?\nDescription\n\n\n\nlocation\nLatLng Object\nYes\nSpecifies the coordinates of the waypoint.\n\n\ntype\nString\nYes\nSpecifies the semantic type of the waypoint. Although the API returns a vanilla string, the waypoints can be further grouped semantically. Our current set of waypoints is described below. \n\n\ndata\nData Object\nYes\nConsists of a payload that gives more descriptive data for the waypoint.\n\n\nPoint Object Types\n\n\n\nEntrances\nDescription\n\n\n\nENTRANCE\nThe primary entrance of a building.\n\n\n\nElevators and Stairs\nDescription\n\n\n\nELEVATOR\nAn elevator inside the building.\n\n\nSTAIR\nA staircase inside the building.\n\n\n\nParkings\nDescription\n\n\n\nPARKING\nA parking spot close to the entrance.\n\n\n\nTerminals\nDescription\n\n\n\nUNIT\nThe destination unit for the queried address, if the delivery terminates at the unit.\n\n\nLOBBY\nOne of the lobbies of the building, and often the one with a doorman, security, or the leasing agent.\n\n\nLOCKER\nOne of the available food or storage lockers in the building.\n\n\nSTOP_POINT\nA point outside the building where the driver can pull over safely without getting a ticket. A stop point is only returned if the request mode is CUSTOMER_OUTSIDE.\n\n\n\nLocation Object\n          A location object captures both the coordinates of a given location\n          as well as its legal address.\n\n          \n\n\nLocation Object\nType\nRequired?\nDescription\n\n\n\naddress\nString\nNo\nFull street address (line 1, city, state zip).\n\n\nunit\nString\nNo\nUnit number of address (line 2).\n\n\nlocation\nLatLng Object\nYes\nSpecifies the coordinates of the location.\n\n\n\nLatLng Object\n          A latlng object captures the coordinates of a given location.\n\n          \n\n\nLatLng Object\nType\nRequired?\nDescription\n\n\n\nlatitude\ndouble\nYes\nLatitude of the location to maximum precision.\n\n\nlongitude\ndouble\nYes\nLongitude of the location to maximum precision.\n\n\n\nData Object\n          Each route point has more details attached to in terms of a data object. It captures string descriptions, security codes, and other\n          descriptors.\n\n          \n\n\nData Object\nType\nRequired?\nDescription\n\n\n\ntext\nString\nYes\nText description of the route point.\n\n\ncode\nString\nNo\nThe access code, if required and available for this way point.\n\n\nfloor\nInteger\nNo\nThe floor of the waypoint, if known and not zero.\n\n\nshape.point\nArray\nNo\nArray of LatLng objects describing the polygon for this route point.\n\n\nunitDataentranceDatastopPointData\nVariable JSON Object\nNo\nConsists of a payload that gives more variable instructions which be different for different waypoints. Currently, we support payloads for parkings, entrances, and terminal waypoints.\n\n\n\nVariable JSON Data Objects\n          A data object is the payload associated with a given point object.\n\n          \n\n\nEntrances\nType\nRequired?\nDescription\n\n\n\nentranceData.realm\nString\nNo\nSpecifies the physical space this entrance will lead to. One of\n                BUILDING,\n                COMMUNITY,\n                GARAGE,\n                ELEVATOR,\n                STAIR,\n                OFFICE,\n                WAREHOUSE,\n                LOADING_DOCK,\n                PARKING, or\n                UNKNOWN_REALM\n\n\n\nentranceData.modalities\nArray\nNo\nAn array of strings that specifies the mode through which one is expected to go through the entrance; takes values from\n                DRIVING,\n                WALKING,\n                BIKING, or\n                FLYING\n\n\n\nentranceData.instructions\nArray\nNo\nEntranceInstruction Object\n\n\nentranceData.entranceTimes\nArray\nNo\nEntranceTime Object\n\n\nentranceData.parkingInstruction\nString\nNo\nSpecifies the best parking type associated with this address. One of\n                DESIGNATED_PARKING,\n                PUBLIC_PARKING,\n                NO_PARKING","textTemplate":"","startCharIdx":8089,"endCharIdx":12639,"metadataSeparator":"\n","type":"TEXT","hash":"yHw5gOvsZJDk6TvO4KolGi4n0/lJ4Idm8C5rdJLtT/k="},"0bec297a-1bb2-4f4e-a611-a9433af91bd6":{"id_":"0bec297a-1bb2-4f4e-a611-a9433af91bd6","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"b394b386-75ef-435d-9898-9884ecffce34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"UuwM3vdUkdbfIqyW/HXQrJZxLR8fhQ+iQp+Kfn74HG8="},"PREVIOUS":{"nodeId":"5f2a9047-2893-48a5-8da0-f49b12e50528","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"ZQyF0MnSMfAg1JjnfLZSiSOoieQLANnFMXXF08sqPiA="},"NEXT":{"nodeId":"ecbaa2d5-a90a-46e5-95c8-38967ce00d34","metadata":{},"hash":"EzpJYRqRCiXAVNpIA0wbCuFWyx0oHSMDrhIgXfdYMTo="}},"text":"entranceData.realm\nString\nNo\nSpecifies the physical space this entrance will lead to. One of\n                BUILDING,\n                COMMUNITY,\n                GARAGE,\n                ELEVATOR,\n                STAIR,\n                OFFICE,\n                WAREHOUSE,\n                LOADING_DOCK,\n                PARKING, or\n                UNKNOWN_REALM\n\n\n\nentranceData.modalities\nArray\nNo\nAn array of strings that specifies the mode through which one is expected to go through the entrance; takes values from\n                DRIVING,\n                WALKING,\n                BIKING, or\n                FLYING\n\n\n\nentranceData.instructions\nArray\nNo\nEntranceInstruction Object\n\n\nentranceData.entranceTimes\nArray\nNo\nEntranceTime Object\n\n\nentranceData.parkingInstruction\nString\nNo\nSpecifies the best parking type associated with this address. One of\n                DESIGNATED_PARKING,\n                PUBLIC_PARKING,\n                NO_PARKING\n\n\n\nentranceData.bestModesOfTransport\nArray\nNo\nAn array of strings that specifies the bets possible delivery modes of transport to this address. Possible values are\n                CAR,\n                MOTORCYCLE,\n                BIKE,\n                BIKE_SCOOTER,\n                FOOT\n\n\n\nentranceData.easeOfParking\nInteger\nNo\nSpecifies an integer value for ease of parking for that address and/or unit. values will be between 1 and 5 (1 being most accessible and 5 being most difficult to find parking)\n\n\nentranceData.easeOfDelivery\nBoolean\nNo\nSpecifies an integer value for ease of delivery for that address and/or unit. values will be between 1 and 5 (1 being easy and 5 being most difficult)\n\n\nentranceData.accessToUnit\nBoolean\nNo\nSpecifies if the personnel will be allowed to go to the unit. If set to true, there may be additional fragments on the route that take the personnel to the elevator and then the unit.\n\n\nentranceData.notes\nString\nNo\nFreeform notes specific to this entrance.\n\n\n\nParkings\nType\nRequired?\nDescription\n\n\n\nstopPointData.type\nString\nNo\nType of the parking. One of\n                NO_PARKING,\n                NO_STOP,\n                PARKING_AVAILABLE,\n                PARKING_CAR,\n                PARKING_GARAGE,\n                PARKING_METERED,\n                PARKING_METERED_CAR,\n                PARKING_METERED_MOTORCYCLE,\n                PARKING_MOTORCYCLE,\n                PARKING_PRIVATE,\n                PARKING_PUBLIC,\n                PARKING_TRUCK,\n                RESERVED_PARKING,\n                STOP_CAR,\n                STOP_TRUCK,\n                or UNKNOWN_STOP_POINT\n\n\n\n\nEntranceInstruction Object\n          Each entrance instruction consists of a type.\n\n          \n\n\nEntranceInstruction Object\nType\nRequired?\nDescription\n\n\n\ntype\nString\nYes\nThe type of this instruction. One of\n                    BUZZER,\n                    SECURITY_CODE,\n                    WALK_IN,\n                    KNOCK_ON_DOOR,\n                    CALL_CUSTOMER_LET_IN,\n                    OPEN_PARKING,\n                    SCAN_GATE,\n                    FRONT_DESK,\n                    DROP_OFF, or\n                    UNKNOWN_INSTRUCTION.\n              \n\n\n\nEntranceTime Object\n          Each entrance may consist of effective time windows. We pick the best one for you based on the request time.\n\n          \n\n\nEntranceTime Object\nType\nRequired?\nDescription\n\n\n\ndayOfWeek\nString\nNo\nThe day of week when this entrance time is applicable.\n\n\nstart\nString\nNo\nTime of day in HH:mm format in the local timezone that specifies when this entrance opens. If missing, the entrance is accessible 24/7.\n\n\nend\nString\nNo\nTime of day in HH:mm format in the local timezone that specifies when this entrance closes. If missing, the entrance is accessible 24/7.Example Response without Policy\n          Policies are seldom applicable for properties in garden-style settings, such as suburban apartment complexes.Such responses, therefore, consist of a more predictable sequence of steps the personnel needs to take to complete the job.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"hw+0RfymHbAE7wFOpme5AUdYd8GWZ+jNVFKHyDB6Dvw="},"ecbaa2d5-a90a-46e5-95c8-38967ce00d34":{"id_":"ecbaa2d5-a90a-46e5-95c8-38967ce00d34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"b394b386-75ef-435d-9898-9884ecffce34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"UuwM3vdUkdbfIqyW/HXQrJZxLR8fhQ+iQp+Kfn74HG8="},"PREVIOUS":{"nodeId":"0bec297a-1bb2-4f4e-a611-a9433af91bd6","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"3JNAfm8FcFvFIkMAL5hJl8gncIO3aJ7gQzf1CL+A64U="},"NEXT":{"nodeId":"9be25220-1af4-45d8-8389-365e0e40ec1c","metadata":{},"hash":"z+cWjF17GrfnK1Yag0ysUZ62Vjz8s/Yz7z8SXvxsRdQ="}},"text":"EntranceTime Object\n          Each entrance may consist of effective time windows. We pick the best one for you based on the request time.\n\n          \n\n\nEntranceTime Object\nType\nRequired?\nDescription\n\n\n\ndayOfWeek\nString\nNo\nThe day of week when this entrance time is applicable.\n\n\nstart\nString\nNo\nTime of day in HH:mm format in the local timezone that specifies when this entrance opens. If missing, the entrance is accessible 24/7.\n\n\nend\nString\nNo\nTime of day in HH:mm format in the local timezone that specifies when this entrance closes. If missing, the entrance is accessible 24/7.Example Response without Policy\n          Policies are seldom applicable for properties in garden-style settings, such as suburban apartment complexes.Such responses, therefore, consist of a more predictable sequence of steps the personnel needs to take to complete the job.{\n   routes: [\n      {\n         fragments: [\n            {\n               origin: {\n                  location: {\n                     latitude: 37.40688964634161,\n                     longitude: -122.10762834057806\n                  },\n                  type: \"PARKING\",\n                  data: {\n                     text: \"PARKING\",\n                     stopPointData: {\n                        type: \"PARKING_PRIVATE\"\n                     }\n                  }\n               },\n               destination: {\n                  location: {\n                     latitude: 37.40685703829996,\n                     longitude: -122.1080146240955\n                  },\n                  type: \"ENTRANCE\",\n                  data: {\n                     text: \"ENS\",\n                     entranceData: {\n                        realm: \"BUILDING\",\n                        modalities: [\n                           \"WALKING\"\n                        ],\n                        label: \"side\"\n                     }\n                  }\n               },\n               type: \"WALKING\"\n            },\n            {\n               origin: {\n                  location: {\n                     latitude: 37.40685703829996,\n                     longitude: -122.1080146240955\n                  },\n                  type: \"ENTRANCE\",\n                  data: {\n                     text: \"ENS\",\n                     entranceData: {\n                        realm: \"BUILDING\",\n                        modalities: [\n                           \"WALKING\"\n                        ],\n                        label: \"side\"\n                     }\n                  }\n               },\n               destination: {\n                  location: {\n                     latitude: 37.40689034284607,\n                     longitude: -122.1081139235705\n                  },\n                  type: \"UNIT\",\n                  data: {\n                     text: \"352\",\n                     unitData: {\n                        unit: \"352\",\n                        uiData: {\n                           buildingShape: {\n                              point: [\n                                 {\n                                    latitude: 37.407216109939625,\n                                    longitude: -122.10878561226696\n                                 },\n                                 {\n                                    latitude: 37.40678904474598,\n                                    longitude: -122.10809168220868\n                                 },\n                                 {\n                                    latitude: 37.407239237176,\n                                    longitude: -122.10758147238448\n                                 },\n                                 {\n                                    latitude: 37.40775021962394,\n                                    longitude: -122.10829399140448\n                                 },\n                                 {\n                                    latitude: 37.40729965291945,\n                                    longitude: -122.10875999999917\n                                 },\n                                 {\n                                    latitude: 37.40727432644777,\n                                    longitude: -122.1087256588803\n                                 }\n                              ]\n                           },\n                           mapCenter: {\n                              latitude: 37.40689034284607,\n                              longitude: -122.1081139235705\n                           },\n                           address: \"2255 Showers Dr, Mountain View, CA\",\n                           unit: \"352\",\n                           floor: 3\n                        },\n                        isBeans: true,\n                        hasElevator: true,\n                        hasStair: true,\n                        hasGate: true,\n                        numberOfUnits: 132,\n                        numberOfBuildings: 1,\n                        society: \"Parc Crossings\",\n                        hasParking: true\n                     },\n                     floor: 3\n                  }\n               },\n               type: \"WALKING\"\n            }\n         ],\n         origin: {\n            latitude: 37.40688964634161,\n            longitude: -122.10762834057806\n         },\n         destination: {\n            address: \"2255 Showers Dr, 94040\",\n            unit: \"352\",\n            location: {\n               latitude: 37.40689034284607,\n               longitude: -122.1081139235705\n            }\n         },\n         navigateTo: {\n            latitude: 37.40688964634161,\n            longitude: -122.10762834057806\n         }\n      }\n   ],\n   queryId: \"bkP4nQ-EkNrqYYxqpGgD-3HA_pbfYVgtnrBPlIVr0_GJye8uW6etmiqwHPUsQMm1UIACgnQSM1YT1w0UuAUjsw9itaYwQekxW9Czb0WL-aLJNz-O2mDZLEEK_g2EQhLb3FX9Lw\"\n}\n\nExample Response with Policy\n          Policies are often applicable for properties in downtowns, such as offices or high-rise buildings.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"/112cRg6Bhcfi9ekxtlBXq3IqGzR4RfCaOQgLVgJsDI="},"9be25220-1af4-45d8-8389-365e0e40ec1c":{"id_":"9be25220-1af4-45d8-8389-365e0e40ec1c","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"b394b386-75ef-435d-9898-9884ecffce34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"UuwM3vdUkdbfIqyW/HXQrJZxLR8fhQ+iQp+Kfn74HG8="},"PREVIOUS":{"nodeId":"ecbaa2d5-a90a-46e5-95c8-38967ce00d34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"EzpJYRqRCiXAVNpIA0wbCuFWyx0oHSMDrhIgXfdYMTo="},"NEXT":{"nodeId":"d181b7a2-6c07-4061-9f07-fcb83aa43bed","metadata":{},"hash":"71xWeO+q9icIa4wdoWJJYdn/TWMvehA7ChsevTNfMyw="}},"text":"Such responses, therefore, are more nimble and change based on the policy.For example, if the personnel are not allowed to go beyond the front desk, a route may end at the front desk and the location of the unit may never be required.{\n   routes: [\n      {\n         fragments: [\n            {\n               origin: {\n                  location: {\n                     latitude: 41.87227824031148,\n                     longitude: -87.63107645526804\n                  },\n                  type: \"ENTRANCE\",\n                  data: {\n                     text: \"ENP\",\n                     entranceData: {\n                        realm: \"PARKING\",\n                        modalities: [\n                           \"DRIVING\"\n                        ]\n                     }\n                  }\n               },\n               destination: {\n                  location: {\n                     latitude: 41.87256861579449,\n                     longitude: -87.6307038743054\n                  },\n                  type: \"PARKING\",\n                  data: {\n                     text: \"PARKING\",\n                     stopPointData: {\n                        type: \"PARKING_PRIVATE\"\n                     }\n                  }\n               },\n               type: \"DRIVING\"\n            },\n            {\n               origin: {\n                  location: {\n                     latitude: 41.87256861579449,\n                     longitude: -87.6307038743054\n                  },\n                  type: \"PARKING\",\n                  data: {\n                     text: \"PARKING\",\n                     stopPointData: {\n                        type: \"PARKING_PRIVATE\"\n                     }\n                  }\n               },\n               destination: {\n                  location: {\n                     latitude: 41.87246657700007,\n                     longitude: -87.63076739099995\n                  },\n                  type: \"ENTRANCE\",\n                  data: {\n                     text: \"E\",\n                     entranceData: {\n                        streetName: \"730 S Clark St, 60605\",\n                        entranceTimes: [\n                           {\n                              dayOfWeek: \"TUESDAY\",\n                              entranceTime: {\n                                 start: \"07:00\",\n                                 end: \"18:00\"\n                              }\n                           }\n                        ],\n                        realm: \"BUILDING\",\n                        modalities: [\n                           \"WALKING\"\n                        ],\n                        instructions: [\n                           {\n                              type: \"FRONT_DESK\"\n                           }\n                        ],\n                        accessToUnit: true,\n                        notes: \"Entrance is only accessible to staff after hours.Doors will be locked.\"}\n                  }\n               },\n               type: \"WALKING\"\n            },\n            {\n               origin: {\n                  location: {\n                     latitude: 41.87246657700007,\n                     longitude: -87.63076739099995\n                  },\n                  type: \"ENTRANCE\",\n                  data: {\n                     text: \"E\",\n                     entranceData: {\n                        streetName: \"730 S Clark St, 60605\",\n                        entranceTimes: [\n                           {\n                              dayOfWeek: \"TUESDAY\",\n                              entranceTime: {\n                                 start: \"07:00\",\n                                 end: \"18:00\"\n                              }\n                           }\n                        ],\n                        realm: \"BUILDING\",\n                        modalities: [\n                           \"WALKING\"\n                        ],\n                        instructions: [\n                           {\n                              type: \"FRONT_DESK\"\n                           }\n                        ],\n                        accessToUnit: true,\n                        parkingInstruction: \"DESIGNATED_PARKING\",\n                        bestModesOfTransport: [\n                           \"CAR\",\n                           \"MOTORCYCLE\",\n                           \"BIKE_SCOOTER\",\n                           \"FOOT\"\n                        ],\n                        easeOfParking: 2,\n                        easeOfDelivery: 2,\n                        notes: \"Entrance is only accessible to staff after hours.Doors will be locked.\"","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"gXel9tlwsfFe6Fx3+iSaRbGpb6CKMaNiMTnj7hQdcrQ="},"d181b7a2-6c07-4061-9f07-fcb83aa43bed":{"id_":"d181b7a2-6c07-4061-9f07-fcb83aa43bed","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"b394b386-75ef-435d-9898-9884ecffce34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"UuwM3vdUkdbfIqyW/HXQrJZxLR8fhQ+iQp+Kfn74HG8="},"PREVIOUS":{"nodeId":"9be25220-1af4-45d8-8389-365e0e40ec1c","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"z+cWjF17GrfnK1Yag0ysUZ62Vjz8s/Yz7z8SXvxsRdQ="},"NEXT":{"nodeId":"0d08ad58-3a47-4b9e-b8b8-5008d945c189","metadata":{},"hash":"o1m9y65NJ0+OuRYtGKHYEShbrXTeoNYODXXftZ5Tijc="}},"text":"Doors will be locked.\"}\n                  }\n               },\n               destination: {\n                  location: {\n                     latitude: 41.872518843101155,\n                     longitude: -87.63097595345396\n                  },\n                  type: \"ELEVATOR\",\n                  data: {\n                     text: \"EL\"\n                  }\n               },\n               type: \"WALKING\"\n            },\n            {\n               origin: {\n                  location: {\n                     latitude: 41.872518843101155,\n                     longitude: -87.63097595345396\n                  },\n                  type: \"ELEVATOR\",\n                  data: {\n                     text: \"EL\"\n                  }\n               },\n               destination: {\n                  location: {\n                     latitude: 41.87250934147018,\n                     longitude: -87.63094023431529\n                  },\n                  type: \"UNIT\",\n                  data: {\n                     text: \"2306\",\n                     unitData: {\n                        unit: \"2306\",\n                        isBeans: true,\n                        hasElevator: true,\n                        hasStair: true,\n                        hasGate: true,\n                        accuracy: \"ACCURACY_MATCH_BUILDING_PARTIAL_UNIT\",\n                        numberOfUnits: 298,\n                        numberOfBuildings: 1,\n                        hasParking: true\n                     },\n                     floor: 23\n                  }\n               },\n               type: \"WALKING\"\n            }\n         ],\n         origin: {\n            latitude: 41.87227824031148,\n            longitude: -87.63107645526804\n         },\n         destination: {\n            address: \"730 S Clark St, 60605\",\n            location: {\n               latitude: 41.87250934147018,\n               longitude: -87.63094023431529\n            }\n         },\n         navigateTo: {\n            latitude: 41.87227824031148,\n            longitude: -87.63107645526804\n         }\n      }\n   ],\n   queryId: \"XRf4aGQA3TYEVRjzdz2wOYLzd-moymlOzPqn_3cyWqjLYzRp2j66UXCuKrBob_MR6oaZXAjDzBk1nMz0iF8oJZmJD1hdNV1Bm_rBEaJgWMHo870icbK6Z2X7YSu-d5rnC9sgNQ\"\n}\n\n\nReverse Geocoding API v2\nRequest\nBase UrlGET https://api.beans.ai/enterprise/v2/search/geocode\nAuthentication\n          The Beans Reverse Geocoding API uses a standard authorization header to authenticate client requests. You must sign in and create an enterprise account here to get your\n          key before you access the API. If you use an unauthorized key or do not provide one, you will get a NOT_ALLOWED response.\n          \n          Once you have\n          your key and secret available, you are required to specify them in the Authorization header of all your requests, as below,\n          where a2V5OnNlY3JldA== is the base64 encoding of the\n          string \"key:secret\". For\n          more information, see wiki:Basic\n          access authentication\n\nAuthorization: Basic a2V5OnNlY3JldA==\n\n\nRequest Parameters\n\n\n\nRequest Parameters\nType?\nRequired?\nValues\n\n\n\nlatlng\nString\nYes\ncomma separated latitude, longitude values (WGS84)\n\n\nelevation\nDouble\nNo\nElevation data (Z-Axis). height in meters\n\n\ndistance\nInteger\nNo\nmaximum distance in meters to specify search radius (Default: 20)\n\n\nmaxResults\nInteger\nNo\nmax address results to return (ordered by closest distance first)\n\n\n\nExample Request\n$ curl -X GET \\\n'https://api2.beans.ai/enterprise/v2/search/geocode?latlng=41.875373,-87.6279018&distance=20' \\\n-H 'Authorization: Basic a2V5OnNlY3JldA=='\n\n\nResponse\nResponse Object\n          Response will consist of one more civic location addresses (see Unit object) along with unit level information if available. Response will be an ordered list with the closest matching address to distance (lat, lng) and followed by elevation (z-axis) match if available.\n\n                Unit Object\n                  Unit consists of address info with secondary unit information along with additional data which is described in UnitData object\n                  \n\n\nUnit Object\nType\nRequired?\nDescription\n\n\n\naddress\nString\nYes\nAddress info for the specific unit. P.S: this could be different that the society address\n\n\nunit\nString\nYes\nSecondary Unit designation and number. e.g. Apt 101\n\n\nbuilding\nString\nYes\nBuilding number or label if available\n\n\nlocation\nLatLng Object\nYes\nAccurate location info of the unit","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"eWBxUINuqqE5rtL+FHD7Y5cEAuskZ9hmX4yTCIf9LaQ="},"0d08ad58-3a47-4b9e-b8b8-5008d945c189":{"id_":"0d08ad58-3a47-4b9e-b8b8-5008d945c189","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"b394b386-75ef-435d-9898-9884ecffce34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"UuwM3vdUkdbfIqyW/HXQrJZxLR8fhQ+iQp+Kfn74HG8="},"PREVIOUS":{"nodeId":"d181b7a2-6c07-4061-9f07-fcb83aa43bed","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"71xWeO+q9icIa4wdoWJJYdn/TWMvehA7ChsevTNfMyw="},"NEXT":{"nodeId":"33d62cfe-4b7d-4a65-99fa-47fc4066deaf","metadata":{},"hash":"KWbnmFhHUibsSf8vFzq9naw55gtY8FGbV4kYzwSa1Q4="}},"text":"Response\nResponse Object\n          Response will consist of one more civic location addresses (see Unit object) along with unit level information if available. Response will be an ordered list with the closest matching address to distance (lat, lng) and followed by elevation (z-axis) match if available.\n\n                Unit Object\n                  Unit consists of address info with secondary unit information along with additional data which is described in UnitData object\n                  \n\n\nUnit Object\nType\nRequired?\nDescription\n\n\n\naddress\nString\nYes\nAddress info for the specific unit. P.S: this could be different that the society address\n\n\nunit\nString\nYes\nSecondary Unit designation and number. e.g. Apt 101\n\n\nbuilding\nString\nYes\nBuilding number or label if available\n\n\nlocation\nLatLng Object\nYes\nAccurate location info of the unit\n\n\ndistance\nDouble\nYes\nSpecifies the distance from the request latlng in meters\n\n\nunitData\nUnitData Object\nYes\nAdditional info of the unit\n\n\n\nUnitData Object\n                  UnitData consists of additional useful about the unit including floor and the access to the unit (elevator, stair, parking) etc\n                  \n\n\nUnitData Object\nType\nRequired?\nDescription\n\n\n\nfloor\nString\nNo\nFloor of the unit if applicable\n\n\nhasElevator\nBoolean\nNo\nindicates if the building has an elevator\n\n\nhasStair\nBoolean\nNo\nindicates if the building has stairs\n\n\nhasParking\nBoolean\nNo\nindicates if the building has parking\n\n\n\n\n           The response for the above address autocomplete sample request is below\n\n          {\n   results: [\n      {\n         societyAddress: \"520 S State St, Chicago, IL\",\n         units: [\n            {\n               location: {\n                  latitude: 41.87540657433387,\n                  longitude: -87.62791445054137,\n                  elevation: 241.3102569580078\n               },\n               unit: \"1509\",\n               address: \"520 S State St, Chicago, IL\",\n               distance: 3.8817861936773497,\n               unitData: {\n                  floor: \"15\"\n               }\n            },\n            {\n               location: {\n                  latitude: 41.87540657433387,\n                  longitude: -87.62791445054137,\n                  elevation: 219.0419464111328\n               },\n               unit: \"909\",\n               address: \"520 S State St, Chicago, IL\",\n               distance: 3.8817861936773497,\n               unitData: {\n                  floor: \"9\"\n               }\n            },\n            {\n               location: {\n                  latitude: 41.87540657433387,\n                  longitude: -87.62791445054137\n               },\n               unit: \"1623\",\n               address: \"520 S State St, Chicago, IL\",\n               distance: 3.8817861936773497,\n               unitData: {\n                  floor: \"16\"\n               }\n            },\n            {\n               location: {\n                  latitude: 41.87540657433387,\n                  longitude: -87.62791445054137,\n                  elevation: 225.64195251464844\n               },\n               unit: \"1109\",\n               address: \"520 S State St, Chicago, IL\",\n               distance: 3.8817861936773497,\n               unitData: {\n                  floor: \"11\"\n               }\n            },\n            {\n               location: {\n                  latitude: 41.87540657433387,\n                  longitude: -87.62791445054137,\n                  elevation: 205.0419464111328\n               },\n               unit: \"509\",\n               address: \"520 S State St, Chicago, IL\",\n               distance: 3.8817861936773497,\n               unitData: {\n                  floor: \"5\"\n               }\n            }\n         ]\n      }\n   ],\n   trackingId: \"NzhhMjQ4ZTMtOTU3Ni00OWYyLWJjMzItN2UxMjE4ZmJjMGQyOjpsYXQ6IDQxLjg3NTM3Mwpsbmc6IC04Ny42Mjc5MDE4Cg==\"\n}","textTemplate":"","startCharIdx":28900,"endCharIdx":32735,"metadataSeparator":"\n","type":"TEXT","hash":"uf0+lEYqrlzmU8Fu5HPHnsGhCy/T6ANo+xEWkepV3dw="},"33d62cfe-4b7d-4a65-99fa-47fc4066deaf":{"id_":"33d62cfe-4b7d-4a65-99fa-47fc4066deaf","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"b394b386-75ef-435d-9898-9884ecffce34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"UuwM3vdUkdbfIqyW/HXQrJZxLR8fhQ+iQp+Kfn74HG8="},"PREVIOUS":{"nodeId":"0d08ad58-3a47-4b9e-b8b8-5008d945c189","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"o1m9y65NJ0+OuRYtGKHYEShbrXTeoNYODXXftZ5Tijc="},"NEXT":{"nodeId":"6f3ba6f9-7ab4-4ecb-a31a-83700e378d9a","metadata":{},"hash":"ny2B55SCt5s0ZexEKR33+D5zAmrCOBSCdFxVWd/bACY="}},"text":"Address Autocomplete API v2\nRequest\nBase UrlGET https://api.beans.ai/enterprise/v2/search/auto-complete\nAuthentication\n          The Beans Address Verifier API uses a standard authorization header to authenticate client requests. You must sign in and create an enterprise account here to get your\n          key before you access the API. If you use an unauthorized key or do not provide one, you will get a NOT_ALLOWED response.\n          \n          Once you have\n          your key and secret available, you are required to specify them in the Authorization header of all your requests, as below,\n          where a2V5OnNlY3JldA== is the base64 encoding of the\n          string \"key:secret\". For\n          more information, see wiki:Basic\n          access authentication\n\nAuthorization: Basic a2V5OnNlY3JldA==\n\n\nRequest Parameters\n\n\n\nRequest Parameters\nType?\nRequired?\nValues\n\n\n\naddress\nString\nYes\nPart of street address that needs completing\n\n\ncenter\nString\nNo\nlat,lng (for example, 37.40694497143785,-122.108284)\n\n\nsearchRadius\nInteger\nNo\nDistance from center in meters (for example, 10000 meters)\n\n\nsearchCount\nInteger\nNo\nNumber of results to return, defaults to 15\n\n\nsummarize\nBoolean\nNo\nRestricts the response to only return the address, defaults to false\n\n\naddComponents\nBoolean\nNo\nAdds address components to ther response, defaults to false\n\n\ncountry\nString\nNo\nISO3-Country code (Default: USA)\n\n\n\nExample Request\n$ curl -X GET \\\n'https://api2.beans.ai/enterprise/v2/search/auto-complete?address=299+West+W&addComponents=true' \\\n-H 'Authorization: Basic a2V5OnNlY3JldA=='Response\nResponse Object\n          Response will consist of one more autocomplete items, each repesenting a potential completion of the address.The response for the above address autocomplete sample request is below\n\n          {\n   items: [\n      {\n         address: \"299 W Washington Ave, Myerstown, PA 17067\",\n         location: {\n            latitude: 40.376537,\n            longitude: -76.311226\n         },\n         countryIso3: \"USA\",\n         components: {\n            street: \"299 W Washington Ave\",\n            city: \"Myerstown\",\n            state: \"PA\",\n            zip: \"17067\"\n         }\n      },\n      {\n         address: \"299 W Washington Ave, Sunnyvale, CA 94086\",\n         society: \"Solstice\",\n         location: {\n            latitude: 37.37684597385852,\n            longitude: -122.03235197840294\n         },\n         countryIso3: \"USA\",\n         placeId: \"299 W Washington Ave, Sunnyvale, CA\",\n         components: {\n            street: \"299 W Washington Ave\",\n            city: \"Sunnyvale\",\n            state: \"CA\",\n            zip: \"94086\"\n         },\n         unitCount: 152\n      },\n      {\n         address: \"299 W Washington Ave, Pearl River, NY 10965\",\n         location: {\n            latitude: 41.060335,\n            longitude: -74.035325\n         },\n         countryIso3: \"USA\",\n         components: {\n            street: \"299 W Washington Ave\",\n            city: \"Pearl River\",\n            state: \"NY\",\n            zip: \"10965\"\n         }\n      },\n      {\n         address: \"299 W Washington St, Nelsonville, OH 45764\",\n         location: {\n            latitude: 39.461076,\n            longitude: -82.237309\n         },\n         countryIso3: \"USA\",\n         components: {\n            street: \"299 W Washington St\",\n            city: \"Nelsonville\",\n            state: \"OH\",\n            zip: \"45764\"\n         }\n      },\n      {\n         address: \"299 W Washington St, Kosciusko, MS 39090\",\n         location: {\n            latitude: 33.058654,\n            longitude: -89.593331\n         },\n         countryIso3: \"USA\",\n         components: {\n            street: \"299 W Washington St\",\n            city: \"Kosciusko\",\n            state: \"MS\",\n            zip: \"39090\"\n         }\n      },\n      {\n         address: \"299 W Washington St, Seymour, MO 65746\",\n         location: {\n            latitude: 37.146228,\n            longitude: -92.770759\n         },\n         countryIso3: \"USA\",","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"LkoHRgN7LCTOibHYEZXNnGcpIMUeONWuSmp3RSgPqns="},"6f3ba6f9-7ab4-4ecb-a31a-83700e378d9a":{"id_":"6f3ba6f9-7ab4-4ecb-a31a-83700e378d9a","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"b394b386-75ef-435d-9898-9884ecffce34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"UuwM3vdUkdbfIqyW/HXQrJZxLR8fhQ+iQp+Kfn74HG8="},"PREVIOUS":{"nodeId":"33d62cfe-4b7d-4a65-99fa-47fc4066deaf","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"KWbnmFhHUibsSf8vFzq9naw55gtY8FGbV4kYzwSa1Q4="},"NEXT":{"nodeId":"8c934a0a-0df5-4b36-b575-0fbfe57fe7ac","metadata":{},"hash":"td07Ut+1PHQ+juzlKGCz2FcnYe/D4mXWl4xUdNa/DQ0="}},"text":"components: {\n            street: \"299 W Washington St\",\n            city: \"Nelsonville\",\n            state: \"OH\",\n            zip: \"45764\"\n         }\n      },\n      {\n         address: \"299 W Washington St, Kosciusko, MS 39090\",\n         location: {\n            latitude: 33.058654,\n            longitude: -89.593331\n         },\n         countryIso3: \"USA\",\n         components: {\n            street: \"299 W Washington St\",\n            city: \"Kosciusko\",\n            state: \"MS\",\n            zip: \"39090\"\n         }\n      },\n      {\n         address: \"299 W Washington St, Seymour, MO 65746\",\n         location: {\n            latitude: 37.146228,\n            longitude: -92.770759\n         },\n         countryIso3: \"USA\",\n         components: {\n            street: \"299 W Washington St\",\n            city: \"Seymour\",\n            state: \"MO\",\n            zip: \"65746\"\n         }\n      },\n      {\n         address: \"299 W Hawthorne Rd, Spokane, WA 99218\",\n         location: {\n            latitude: 47.750915,\n            longitude: -117.414834\n         },\n         countryIso3: \"USA\",\n         components: {\n            street: \"299 W Hawthorne Rd\",\n            city: \"Spokane\",\n            state: \"WA\",\n            zip: \"99218\"\n         }\n      },\n      {\n         address: \"299 W Peridot Dr, Washington, UT 84780\",\n         location: {\n            latitude: 37.145081,\n            longitude: -113.514526\n         },\n         countryIso3: \"USA\",\n         components: {\n            street: \"299 W Peridot Dr\",\n            city: \"Washington\",\n            state: \"UT\",\n            zip: \"84780\"\n         }\n      },\n      {\n         address: \"299 W Kellogg Rd, Bellingham, WA 98226\",\n         location: {\n            latitude: 48.795032,\n            longitude: -122.494836\n         },\n         countryIso3: \"USA\",\n         components: {\n            street: \"299 W Kellogg Rd\",\n            city: \"Bellingham\",\n            state: \"WA\",\n            zip: \"98226\"\n         }\n      },\n      {\n         address: \"299 W Chewuch Rd, Winthrop, WA 98862\",\n         location: {\n            latitude: 48.51763600000001,\n            longitude: -120.200219\n         },\n         countryIso3: \"USA\",\n         components: {\n            street: \"299 W Chewuch Rd\",\n            city: \"Winthrop\",\n            state: \"WA\",\n            zip: \"98862\"\n         }\n      },\n      {\n         address: \"299 W Badger Rd, Lynden, WA 98264\",\n         location: {\n            latitude: 48.965156,\n            longitude: -122.496251\n         },\n         countryIso3: \"USA\",\n         components: {\n            street: \"299 W Badger Rd\",\n            city: \"Lynden\",\n            state: \"WA\",\n            zip: \"98264\"\n         }\n      },\n      {\n         address: \"299 W Clover Ln, Washington, UT 84780\",\n         location: {\n            latitude: 37.097855,\n            longitude: -113.5141\n         },\n         countryIso3: \"USA\",\n         components: {\n            street: \"299 W Clover Ln\",\n            city: \"Washington\",\n            state: \"UT\",\n            zip: \"84780\"\n         }\n      },\n      {\n         address: \"299 W 2400 S, Washington, UT 84780\",\n         location: {\n            latitude: 37.09854,\n            longitude: -113.514108\n         },\n         countryIso3: \"USA\",\n         components: {\n            street: \"299 W 2400 S\",\n            city: \"Washington\",\n            state: \"UT\",\n            zip: \"84780\"\n         }\n      },\n      {\n         address: \"299 W Tietan St, Walla Walla, WA 99362\",\n         location: {\n            latitude: 46.04887,\n            longitude: -118.339281\n         },\n         countryIso3: \"USA\",\n         components: {\n            street: \"299 W Tietan St\",\n            city: \"Walla Walla\",","textTemplate":"","startCharIdx":36017,"endCharIdx":39716,"metadataSeparator":"\n","type":"TEXT","hash":"hi0wkvlHg9YQcHMLmQyMYwJ5osnOQBpKHHWOPMUpca0="},"8c934a0a-0df5-4b36-b575-0fbfe57fe7ac":{"id_":"8c934a0a-0df5-4b36-b575-0fbfe57fe7ac","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"b394b386-75ef-435d-9898-9884ecffce34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"UuwM3vdUkdbfIqyW/HXQrJZxLR8fhQ+iQp+Kfn74HG8="},"PREVIOUS":{"nodeId":"6f3ba6f9-7ab4-4ecb-a31a-83700e378d9a","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"ny2B55SCt5s0ZexEKR33+D5zAmrCOBSCdFxVWd/bACY="},"NEXT":{"nodeId":"523cc431-5fe0-4a35-a58a-cee62f8cf4b3","metadata":{},"hash":"090999D5ndZdhUwYa+n0/AjEpTcuIeFwYUu0FMZyHhw="}},"text":"zip: \"84780\"\n         }\n      },\n      {\n         address: \"299 W 2400 S, Washington, UT 84780\",\n         location: {\n            latitude: 37.09854,\n            longitude: -113.514108\n         },\n         countryIso3: \"USA\",\n         components: {\n            street: \"299 W 2400 S\",\n            city: \"Washington\",\n            state: \"UT\",\n            zip: \"84780\"\n         }\n      },\n      {\n         address: \"299 W Tietan St, Walla Walla, WA 99362\",\n         location: {\n            latitude: 46.04887,\n            longitude: -118.339281\n         },\n         countryIso3: \"USA\",\n         components: {\n            street: \"299 W Tietan St\",\n            city: \"Walla Walla\",\n            state: \"WA\",\n            zip: \"99362\"\n         }\n      },\n      {\n         address: \"299 West Ave, Austin, TX 78701\",\n         location: {\n            latitude: 30.267886,\n            longitude: -97.751333\n         },\n         countryIso3: \"USA\",\n         components: {\n            street: \"299 West Ave\",\n            city: \"Austin\",\n            state: \"TX\",\n            zip: \"78701\"\n         }\n      }\n   ]\n}\n\n\nAddress Unitcomplete API v2\nRequest\nBase UrlGET https://api.beans.ai/enterprise/v2/search/unit-complete\nAuthentication\n          The Beans Address Unitcomplete API uses a standard authorization header to authenticate client requests. You must sign in and create an enterprise account here to get your\n          key before you access the API. If you use an unauthorized key or do not provide one, you will get a NOT_ALLOWED response.\n          \n          Once you have\n          your key and secret available, you are required to specify them in the Authorization header of all your requests, as below,\n          where a2V5OnNlY3JldA== is the base64 encoding of the\n          string \"key:secret\". For\n          more information, see wiki:Basic\n          access authentication\n\nAuthorization: Basic a2V5OnNlY3JldA==\n\n\nRequest Parameters\n\n\n\nRequest Parameters\nType?\nRequired?\nValues\n\n\n\naddress\nString\nYes\nFull street address (line 1, city, state zip)\n\n\nunit\nString\nYes\nPart of unit address that needs completing\n\n\ncountry\nString\nNo\nISO3-Country code (Default: USA)\n\n\n\nExample Request\n$ curl -X GET \\\n'https://api2.beans.ai/enterprise/v2/search/unit-complete?address=299+West+Washington+Ave%20+Sunnyvale%20+CA&unit=31' \\\n-H 'Authorization: Basic a2V5OnNlY3JldA=='\n\n\nResponse\nResponse Object\n          Response will consist of one more unitcomplete items, each repesenting a potential variation of the address. Each unitcomplete item further contains a list of units that match the specified unit prefix.\n          The response for the above address unitcomplete sample request is below\n\n          {\n   items: [\n      {\n         address: \"299 W Washington Ave, Sunnyvale, CA\",\n         label: \"299 W Washington Ave, Sunnyvale, CA\",\n         units: [\n            {\n               unit: \"310\"\n            },\n            {\n               unit: \"311\"\n            },\n            {\n               unit: \"312\"\n            },\n            {\n               unit: \"313\"\n            },\n            {\n               unit: \"314\"\n            },\n            {\n               unit: \"315\"\n            },\n            {\n               unit: \"316\"\n            },\n            {\n               unit: \"317\"\n            },\n            {\n               unit: \"318\"\n            },\n            {\n               unit: \"319\"\n            }\n         ]\n      },\n      {\n         address: \"301 W Washington Ave, Sunnyvale, CA\",\n         label: \"301 W Washington Ave, Sunnyvale, CA\",\n         units: [\n            {\n               unit: \"310\"\n            },\n            {\n               unit: \"311\"\n            },\n            {\n               unit: \"312\"\n            },\n            {\n               unit: \"313\"\n            },\n            {\n               unit: \"314\"\n            },\n            {\n               unit: \"315\"\n            },\n            {\n               unit: \"316\"\n            },\n            {\n               unit: \"317\"\n            },\n            {\n               unit: \"318\"\n            },\n            {\n               unit: \"319\"\n            }\n         ]\n      }\n   ]\n}","textTemplate":"","startCharIdx":39038,"endCharIdx":43187,"metadataSeparator":"\n","type":"TEXT","hash":"/mIPEjIfKCmLXN+pnDU8vCjHG4NOcE+bGF7aYWcm77o="},"523cc431-5fe0-4a35-a58a-cee62f8cf4b3":{"id_":"523cc431-5fe0-4a35-a58a-cee62f8cf4b3","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"b394b386-75ef-435d-9898-9884ecffce34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"UuwM3vdUkdbfIqyW/HXQrJZxLR8fhQ+iQp+Kfn74HG8="},"PREVIOUS":{"nodeId":"8c934a0a-0df5-4b36-b575-0fbfe57fe7ac","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"td07Ut+1PHQ+juzlKGCz2FcnYe/D4mXWl4xUdNa/DQ0="},"NEXT":{"nodeId":"200b3c50-06af-434f-9bf4-19e386f3dccf","metadata":{},"hash":"NY+Cz9HQXnWo3d2c2llzbkukxrU0qF997WBJvxUk2H8="}},"text":"Feedback API v2\nRequest\nBase UrlPOST https://api.beans.ai/enterprise/v2/search/feedback\nAuthentication\n          The Beans Feedback API uses a standard authorization header to authenticate client requests. You must sign in and create an enterprise account here to get your\n          key before you access the API. If you use an unauthorized key or do not provide one, you will get a NOT_ALLOWED response.\n          \n          Once you have\n          your key and secret available, you are required to specify them in the Authorization header of all your requests, as below,\n          where a2V5OnNlY3JldA== is the base64 encoding of the\n          string \"key:secret\". For\n          more information, see wiki:Basic\n            access authentication\n\nAuthorization: Basic a2V5OnNlY3JldA==\n\n\nRequest Body\n\n\n\nRequest Object\nType?\nRequired?\nValues\n\n\n\naddress\nString\nYes\nFull street address (line 1, city, state zip)\n\n\nunit\nString\nNo\nUnit number of address (line 2)\n\n\ngeo\nDouble,Double\nNo\nLatitude,Longitude pair of the end user's current location\n\n\naction\nString\nNo\nEither of DELIVERY or PICKUP or DROPOFF\n\n\nactionAt\nLong\nNo\nEpoch timestamp of when the action was performed\n\n\nnotes\nString\nNo\nGeneral notes from drivers or other personnel\n\n\nprecision\nInteger\nNo\nAccuracy (in meters)\n\n\n\nExample Request\n$ curl -X POST \\\n'https://api2.beans.ai/enterprise/v2/search/feedback/XRf4aGQA3TYEVRjzdz2wOYLzd-moymlOzPqn_3cyWqj' \\\n-H 'Authorization: Basic a2V5OnNlY3JldA=='\n\n\nResponse\nResponse Object\n          The response for a feedback request is a standard http response code.\n        \n\nAddress Verifier API v2\nRequest\nBase UrlGET https://api.beans.ai/enterprise/v2/verify/address\nAuthentication\n          The Beans Address Verifier API uses a standard authorization header to authenticate client requests. You must sign in and create an enterprise account here to get your\n          key before you access the API. If you use an unauthorized key or do not provide one, you will get a NOT_ALLOWED response.\n          \n          Once you have\n          your key and secret available, you are required to specify them in the Authorization header of all your requests, as below,\n          where a2V5OnNlY3JldA== is the base64 encoding of the\n          string \"key:secret\". For\n          more information, see wiki:Basic\n          access authentication\n\nAuthorization: Basic a2V5OnNlY3JldA==\n\n\nRequest Parameters\n\n\n\nRequest Parameters\nType?\nRequired?\nValues\n\n\n\naddress\nString\nYes\nFull street address (line 1, city, state zip)\n\n\nunit\nString\nNo\nUnit number of address (line 2)\n\n\ncountry\nString\nNo\nISO3-Country code (Default: USA)\n\n\n\nExample Request\n$ curl -X GET \\\n'https://api2.beans.ai/enterprise/v2/verify/address?address=299+West+Washington+Ave%20+Sunnyvale%20+CA&unit=' \\\n-H 'Authorization: Basic a2V5OnNlY3JldA=='Response\nResponse Object\n          Response will consist of one more address items, each repesenting a potential variation of the address.If only one item with zero or one unit is returned, then the address is not ambiguous.The response for the above Address verifier sample request is below\n\n          {\n   items: [\n      {\n         address: \"299 W Washington Ave, Sunnyvale, CA\",\n         master: \"299 W Washington Ave, Sunnyvale, CA\",\n         units: [\n            {\n               unit: \"302\"\n            },\n            {\n               unit: \"303\"\n            },\n            {\n               unit: \"304\"\n            },\n            {\n               unit: \"305\"\n            },\n            {\n               unit: \"306\"\n            },\n            {\n               unit: \"307\"\n            },\n            {\n               unit: \"308\"\n            },\n            {\n               unit: \"309\"\n            },\n            {\n               unit: \"310\"\n            },\n            {\n               unit: \"311\"\n            },\n            {\n               unit: \"312\"\n            },\n            {\n               unit: \"313\"\n            },\n            {\n               unit: \"314\"\n            },\n            {\n               unit: \"315\"\n            },\n            {\n               unit: \"316\"\n            },\n            {\n               unit: \"317\"\n            },\n            {\n               unit: \"318\"\n            },\n            {\n               unit: \"319\"\n            },","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"9jNLqYLgksDpw8NjZ1egxSf1yxICq+S//aD+Yy0QKBg="},"200b3c50-06af-434f-9bf4-19e386f3dccf":{"id_":"200b3c50-06af-434f-9bf4-19e386f3dccf","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"b394b386-75ef-435d-9898-9884ecffce34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"UuwM3vdUkdbfIqyW/HXQrJZxLR8fhQ+iQp+Kfn74HG8="},"PREVIOUS":{"nodeId":"523cc431-5fe0-4a35-a58a-cee62f8cf4b3","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"090999D5ndZdhUwYa+n0/AjEpTcuIeFwYUu0FMZyHhw="},"NEXT":{"nodeId":"86fd0795-a231-4fd9-879c-309100944ab7","metadata":{},"hash":"RZNjWz42ybZcDCvfHtOhLFt8mYw1xrz/YT5lnHGOjd0="}},"text":"{\n               unit: \"303\"\n            },\n            {\n               unit: \"304\"\n            },\n            {\n               unit: \"305\"\n            },\n            {\n               unit: \"306\"\n            },\n            {\n               unit: \"307\"\n            },\n            {\n               unit: \"308\"\n            },\n            {\n               unit: \"309\"\n            },\n            {\n               unit: \"310\"\n            },\n            {\n               unit: \"311\"\n            },\n            {\n               unit: \"312\"\n            },\n            {\n               unit: \"313\"\n            },\n            {\n               unit: \"314\"\n            },\n            {\n               unit: \"315\"\n            },\n            {\n               unit: \"316\"\n            },\n            {\n               unit: \"317\"\n            },\n            {\n               unit: \"318\"\n            },\n            {\n               unit: \"319\"\n            },\n            {\n               unit: \"320\"\n            },\n            {\n               unit: \"321\"\n            },\n            {\n               unit: \"322\"\n            },\n            {\n               unit: \"323\"\n            },\n            {\n               unit: \"324\"\n            },\n            {\n               unit: \"325\"\n            },\n            {\n               unit: \"326\"\n            },\n            {\n               unit: \"327\"\n            },\n            {\n               unit: \"328\"\n            },\n            {\n               unit: \"329\"\n            },\n            {\n               unit: \"330\"\n            },\n            {\n               unit: \"331\"\n            },\n            {\n               unit: \"332\"\n            },\n            {\n               unit: \"335\"\n            },\n            {\n               unit: \"337\"\n            },\n            {\n               unit: \"338\"\n            },\n            {\n               unit: \"402\"\n            },\n            {\n               unit: \"403\"\n            },\n            {\n               unit: \"404\"\n            },\n            {\n               unit: \"405\"\n            },\n            {\n               unit: \"406\"\n            },\n            {\n               unit: \"407\"\n            },\n            {\n               unit: \"408\"\n            },\n            {\n               unit: \"409\"\n            },\n            {\n               unit: \"410\"\n            },\n            {\n               unit: \"411\"\n            },\n            {\n               unit: \"412\"\n            },\n            {\n               unit: \"413\"\n            },\n            {\n               unit: \"414\"\n            },\n            {\n               unit: \"415\"\n            },\n            {\n               unit: \"416\"\n            },\n            {\n               unit: \"417\"\n            },\n            {\n               unit: \"418\"\n            },\n            {\n               unit: \"419\"\n            },\n            {\n               unit: \"420\"\n            },\n            {\n               unit: \"421\"\n            },\n            {\n               unit: \"422\"\n            },\n            {\n               unit: \"423\"\n            },\n            {\n               unit: \"424\"\n            },\n            {\n               unit: \"425\"\n            },\n            {\n               unit: \"426\"\n            },\n            {\n               unit: \"427\"\n            },\n            {\n               unit: \"428\"\n            },\n            {\n               unit: \"429\"\n            },\n            {\n               unit: \"430\"\n            },\n            {\n               unit: \"431\"\n            },\n            {\n               unit: \"432\"\n            },\n            {\n               unit: \"433\"\n            },\n            {\n               unit: \"434\"\n            },\n            {\n               unit: \"435\"\n            },\n            {\n               unit: \"437\"\n            },\n            {\n               unit: \"438\"\n            },\n            {\n               unit: \"501\"\n            },\n            {\n               unit: \"502\"\n            },\n            {\n               unit: \"503\"\n            },\n            {\n               unit: \"504\"\n            },\n            {\n               unit: \"505\"\n            },\n            {\n               unit: \"506\"\n            },\n            {\n               unit: \"507\"\n            },\n            {\n               unit: \"508\"\n            },\n            {\n               unit: \"509\"\n            },\n            {\n               unit: \"510\"\n            },\n            {\n               unit: \"511\"\n            },\n            {\n               unit: \"512\"\n            },\n            {\n               unit: \"513\"\n            },\n            {\n               unit: \"514\"\n            },\n            {\n               unit: \"515\"\n            },\n            {\n               unit: \"516\"\n            },\n            {\n               unit: \"517\"\n            },\n            {\n               unit: \"518\"\n            },\n            {\n               unit: \"519\"\n            },\n            {\n               unit: \"520\"\n            },\n            {\n               unit: \"521\"\n            },\n            {\n               unit: \"522\"\n            },\n            {\n               unit: \"523\"\n            },","textTemplate":"","startCharIdx":46528,"endCharIdx":51667,"metadataSeparator":"\n","type":"TEXT","hash":"K+x+c12WG1WWYoY9WVa1Ca9TAGTjXdP5ngi4DrOuxts="},"86fd0795-a231-4fd9-879c-309100944ab7":{"id_":"86fd0795-a231-4fd9-879c-309100944ab7","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"b394b386-75ef-435d-9898-9884ecffce34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"UuwM3vdUkdbfIqyW/HXQrJZxLR8fhQ+iQp+Kfn74HG8="},"PREVIOUS":{"nodeId":"200b3c50-06af-434f-9bf4-19e386f3dccf","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"NY+Cz9HQXnWo3d2c2llzbkukxrU0qF997WBJvxUk2H8="},"NEXT":{"nodeId":"ac6514e7-01d0-4a69-9c5e-f2e71184ab3a","metadata":{},"hash":"PqmBgZCitHcK6Rh/EztAbXXwahn+yDa9iY2/ikePyto="}},"text":"{\n               unit: \"506\"\n            },\n            {\n               unit: \"507\"\n            },\n            {\n               unit: \"508\"\n            },\n            {\n               unit: \"509\"\n            },\n            {\n               unit: \"510\"\n            },\n            {\n               unit: \"511\"\n            },\n            {\n               unit: \"512\"\n            },\n            {\n               unit: \"513\"\n            },\n            {\n               unit: \"514\"\n            },\n            {\n               unit: \"515\"\n            },\n            {\n               unit: \"516\"\n            },\n            {\n               unit: \"517\"\n            },\n            {\n               unit: \"518\"\n            },\n            {\n               unit: \"519\"\n            },\n            {\n               unit: \"520\"\n            },\n            {\n               unit: \"521\"\n            },\n            {\n               unit: \"522\"\n            },\n            {\n               unit: \"523\"\n            },\n            {\n               unit: \"524\"\n            },\n            {\n               unit: \"525\"\n            },\n            {\n               unit: \"526\"\n            },\n            {\n               unit: \"527\"\n            },\n            {\n               unit: \"528\"\n            },\n            {\n               unit: \"529\"\n            },\n            {\n               unit: \"530\"\n            },\n            {\n               unit: \"531\"\n            },\n            {\n               unit: \"532\"\n            },\n            {\n               unit: \"533\"\n            },\n            {\n               unit: \"534\"\n            },\n            {\n               unit: \"535\"\n            },\n            {\n               unit: \"536\"\n            },\n            {\n               unit: \"537\"\n            },\n            {\n               unit: \"538\"\n            },\n            {\n               unit: \"601\"\n            },\n            {\n               unit: \"602\"\n            },\n            {\n               unit: \"603\"\n            },\n            {\n               unit: \"604\"\n            },\n            {\n               unit: \"605\"\n            },\n            {\n               unit: \"606\"\n            },\n            {\n               unit: \"607\"\n            },\n            {\n               unit: \"608\"\n            },\n            {\n               unit: \"609\"\n            },\n            {\n               unit: \"610\"\n            },\n            {\n               unit: \"611\"\n            },\n            {\n               unit: \"612\"\n            },\n            {\n               unit: \"613\"\n            },\n            {\n               unit: \"614\"\n            },\n            {\n               unit: \"615\"\n            },\n            {\n               unit: \"616\"\n            },\n            {\n               unit: \"617\"\n            },\n            {\n               unit: \"618\"\n            },\n            {\n               unit: \"619\"\n            },\n            {\n               unit: \"620\"\n            },\n            {\n               unit: \"621\"\n            },\n            {\n               unit: \"622\"\n            },\n            {\n               unit: \"623\"\n            },\n            {\n               unit: \"624\"\n            },\n            {\n               unit: \"625\"\n            },\n            {\n               unit: \"626\"\n            },\n            {\n               unit: \"627\"\n            },\n            {\n               unit: \"628\"\n            },\n            {\n               unit: \"629\"\n            },\n            {\n               unit: \"630\"\n            },\n            {\n               unit: \"631\"\n            },\n            {\n               unit: \"632\"\n            },\n            {\n               unit: \"633\"\n            },\n            {\n               unit: \"634\"\n            },\n            {\n               unit: \"635\"\n            },\n            {\n               unit: \"636\"\n            },\n            {\n               unit: \"637\"\n            },\n            {\n               unit: \"638\"\n            }\n         ]\n      },\n      {\n         address: \"301 W Washington Ave, Sunnyvale, CA\",\n         master: \"299 W Washington Ave, Sunnyvale, CA\",\n         units: [\n            {\n               unit: \"301\"\n            },\n            {\n               unit: \"303\"\n            },\n            {\n               unit: \"304\"\n            },\n            {\n               unit: \"305\"\n            },\n            {\n               unit: \"306\"\n            },\n            {\n               unit: \"307\"\n            },\n            {\n               unit: \"308\"\n            },\n            {\n               unit: \"309\"\n            },\n            {\n               unit: \"310\"\n            },\n            {\n               unit: \"311\"\n            },\n            {\n               unit: \"312\"\n            },\n            {\n               unit: \"313\"\n            },\n            {\n               unit: \"314\"\n            },\n            {\n               unit: \"315\"\n            },\n            {\n               unit: \"316\"\n            },\n            {\n               unit: \"317\"\n            },\n            {\n               unit: \"318\"\n            },","textTemplate":"","startCharIdx":50672,"endCharIdx":55745,"metadataSeparator":"\n","type":"TEXT","hash":"TIMqjk6I1oBRDgNrPv/QuzF+5CPQnnb5NsCXM53zV2Y="},"ac6514e7-01d0-4a69-9c5e-f2e71184ab3a":{"id_":"ac6514e7-01d0-4a69-9c5e-f2e71184ab3a","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"b394b386-75ef-435d-9898-9884ecffce34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"UuwM3vdUkdbfIqyW/HXQrJZxLR8fhQ+iQp+Kfn74HG8="},"PREVIOUS":{"nodeId":"86fd0795-a231-4fd9-879c-309100944ab7","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"RZNjWz42ybZcDCvfHtOhLFt8mYw1xrz/YT5lnHGOjd0="},"NEXT":{"nodeId":"d9b65949-013e-4663-8afb-640c04ff785d","metadata":{},"hash":"KU9gFm7Qd89zO7bAytOCgCJ+Y26M5CkTnxZ9qZbSO7g="}},"text":"Sunnyvale, CA\",\n         units: [\n            {\n               unit: \"301\"\n            },\n            {\n               unit: \"303\"\n            },\n            {\n               unit: \"304\"\n            },\n            {\n               unit: \"305\"\n            },\n            {\n               unit: \"306\"\n            },\n            {\n               unit: \"307\"\n            },\n            {\n               unit: \"308\"\n            },\n            {\n               unit: \"309\"\n            },\n            {\n               unit: \"310\"\n            },\n            {\n               unit: \"311\"\n            },\n            {\n               unit: \"312\"\n            },\n            {\n               unit: \"313\"\n            },\n            {\n               unit: \"314\"\n            },\n            {\n               unit: \"315\"\n            },\n            {\n               unit: \"316\"\n            },\n            {\n               unit: \"317\"\n            },\n            {\n               unit: \"318\"\n            },\n            {\n               unit: \"319\"\n            },\n            {\n               unit: \"320\"\n            },\n            {\n               unit: \"321\"\n            },\n            {\n               unit: \"322\"\n            },\n            {\n               unit: \"323\"\n            },\n            {\n               unit: \"324\"\n            },\n            {\n               unit: \"325\"\n            },\n            {\n               unit: \"326\"\n            },\n            {\n               unit: \"327\"\n            },\n            {\n               unit: \"328\"\n            },\n            {\n               unit: \"329\"\n            },\n            {\n               unit: \"390\"\n            },\n            {\n               unit: \"401\"\n            },\n            {\n               unit: \"402\"\n            },\n            {\n               unit: \"403\"\n            },\n            {\n               unit: \"404\"\n            },\n            {\n               unit: \"405\"\n            },\n            {\n               unit: \"406\"\n            },\n            {\n               unit: \"407\"\n            },\n            {\n               unit: \"408\"\n            },\n            {\n               unit: \"409\"\n            },\n            {\n               unit: \"410\"\n            },\n            {\n               unit: \"411\"\n            },\n            {\n               unit: \"412\"\n            },\n            {\n               unit: \"413\"\n            },\n            {\n               unit: \"414\"\n            },\n            {\n               unit: \"415\"\n            },\n            {\n               unit: \"416\"\n            },\n            {\n               unit: \"417\"\n            },\n            {\n               unit: \"418\"\n            },\n            {\n               unit: \"419\"\n            },\n            {\n               unit: \"420\"\n            },\n            {\n               unit: \"421\"\n            },\n            {\n               unit: \"422\"\n            },\n            {\n               unit: \"423\"\n            },\n            {\n               unit: \"424\"\n            },\n            {\n               unit: \"425\"\n            },\n            {\n               unit: \"426\"\n            },\n            {\n               unit: \"427\"\n            },\n            {\n               unit: \"428\"\n            },\n            {\n               unit: \"429\"\n            },\n            {\n               unit: \"501\"\n            },\n            {\n               unit: \"502\"\n            },\n            {\n               unit: \"503\"\n            },\n            {\n               unit: \"504\"\n            },\n            {\n               unit: \"505\"\n            },\n            {\n               unit: \"506\"\n            },\n            {\n               unit: \"507\"\n            },\n            {\n               unit: \"508\"\n            },\n            {\n               unit: \"509\"\n            },\n            {\n               unit: \"510\"\n            },\n            {\n               unit: \"511\"\n            },\n            {\n               unit: \"512\"\n            },\n            {\n               unit: \"513\"\n            },\n            {\n               unit: \"514\"\n            },\n            {\n               unit: \"515\"\n            },\n            {\n               unit: \"516\"\n            },\n            {\n               unit: \"517\"\n            },\n            {\n               unit: \"518\"\n            },\n            {\n               unit: \"519\"\n            },\n            {\n               unit: \"520\"\n            },\n            {\n               unit: \"521\"\n            },\n            {\n               unit: \"522\"\n            },\n            {\n               unit: \"523\"\n            },\n            {\n               unit: \"524\"\n            },\n            {\n               unit: \"525\"\n            },\n            {\n               unit: \"526\"\n            },\n            {\n               unit: \"527\"\n            },\n            {\n               unit: \"528\"\n            },\n            {\n               unit: \"529\"\n            },\n            {\n               unit: \"530\"\n            },\n            {\n               unit: \"601\"\n            },\n            {\n               unit: \"602\"\n            },\n            {\n               unit: \"603\"\n            },","textTemplate":"","startCharIdx":54760,"endCharIdx":59889,"metadataSeparator":"\n","type":"TEXT","hash":"8r35qAIIUQihQc63eCiezLg3YzP5n6+6oWGSEzwCLlk="},"d9b65949-013e-4663-8afb-640c04ff785d":{"id_":"d9b65949-013e-4663-8afb-640c04ff785d","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"b394b386-75ef-435d-9898-9884ecffce34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"UuwM3vdUkdbfIqyW/HXQrJZxLR8fhQ+iQp+Kfn74HG8="},"PREVIOUS":{"nodeId":"ac6514e7-01d0-4a69-9c5e-f2e71184ab3a","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"PqmBgZCitHcK6Rh/EztAbXXwahn+yDa9iY2/ikePyto="},"NEXT":{"nodeId":"b4323773-bb3d-43ea-a781-8cbd99430080","metadata":{},"hash":"0yoIUzXinngqhUVcPvA2C0RLUnjLvJG74JpqbCdqABA="}},"text":"{\n               unit: \"516\"\n            },\n            {\n               unit: \"517\"\n            },\n            {\n               unit: \"518\"\n            },\n            {\n               unit: \"519\"\n            },\n            {\n               unit: \"520\"\n            },\n            {\n               unit: \"521\"\n            },\n            {\n               unit: \"522\"\n            },\n            {\n               unit: \"523\"\n            },\n            {\n               unit: \"524\"\n            },\n            {\n               unit: \"525\"\n            },\n            {\n               unit: \"526\"\n            },\n            {\n               unit: \"527\"\n            },\n            {\n               unit: \"528\"\n            },\n            {\n               unit: \"529\"\n            },\n            {\n               unit: \"530\"\n            },\n            {\n               unit: \"601\"\n            },\n            {\n               unit: \"602\"\n            },\n            {\n               unit: \"603\"\n            },\n            {\n               unit: \"604\"\n            },\n            {\n               unit: \"605\"\n            },\n            {\n               unit: \"606\"\n            },\n            {\n               unit: \"607\"\n            },\n            {\n               unit: \"608\"\n            },\n            {\n               unit: \"609\"\n            },\n            {\n               unit: \"610\"\n            },\n            {\n               unit: \"611\"\n            },\n            {\n               unit: \"612\"\n            },\n            {\n               unit: \"613\"\n            },\n            {\n               unit: \"614\"\n            },\n            {\n               unit: \"615\"\n            },\n            {\n               unit: \"616\"\n            },\n            {\n               unit: \"617\"\n            },\n            {\n               unit: \"618\"\n            },\n            {\n               unit: \"619\"\n            },\n            {\n               unit: \"620\"\n            },\n            {\n               unit: \"621\"\n            },\n            {\n               unit: \"622\"\n            },\n            {\n               unit: \"623\"\n            },\n            {\n               unit: \"624\"\n            },\n            {\n               unit: \"625\"\n            },\n            {\n               unit: \"626\"\n            },\n            {\n               unit: \"627\"\n            },\n            {\n               unit: \"628\"\n            },\n            {\n               unit: \"629\"\n            },\n            {\n               unit: \"630\"\n            }\n         ]\n      }\n   ]\n}\n\n\nPOI Lookup API v2\nRequest\nBase UrlGET https://api.beans.ai/enterprise/v2/search/poi\nAuthentication\n          The Beans POI Lookup API uses a standard authorization header to authenticate client requests. You must sign in and create an enterprise account here to get your\n          key before you access the API. If you use an unauthorized key or do not provide one, you will get a NOT_ALLOWED response.\n          \n          Once you have\n          your key and secret available, you are required to specify them in the Authorization header of all your requests, as below,\n          where a2V5OnNlY3JldA== is the base64 encoding of the\n          string \"key:secret\". For\n          more information, see wiki:Basic\n          access authentication\n\nAuthorization: Basic a2V5OnNlY3JldA==\n\n\nRequest Parameters\n\n\n\nRequest Parameters\nType?\nRequired?\nValues\n\n\n\ntopLeft\nDouble,Double\nYes\nLatitude,Longitude pair of the top left (NW) corner of the area to be searched\n\n\nbottomRight\nDouble,Double\nYes\nLatitude,Longitude pair of the bottom right (SE) corner of the area to be searched\n\n\n\nExample Request\n$ curl -X GET \\\n'https://api2.beans.ai/enterprise/v2/search/poi?topLeft=37.412859,-122.086259&bottomRight=37.347142,-121.99' \\\n-H 'Authorization: Basic a2V5OnNlY3JldA=='","textTemplate":"","startCharIdx":58894,"endCharIdx":62690,"metadataSeparator":"\n","type":"TEXT","hash":"ii+DTJpLd7wIBULvs9k5NPexyLiHlXtlewNTgFB5BJM="},"b4323773-bb3d-43ea-a781-8cbd99430080":{"id_":"b4323773-bb3d-43ea-a781-8cbd99430080","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"b394b386-75ef-435d-9898-9884ecffce34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"UuwM3vdUkdbfIqyW/HXQrJZxLR8fhQ+iQp+Kfn74HG8="},"PREVIOUS":{"nodeId":"d9b65949-013e-4663-8afb-640c04ff785d","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"KU9gFm7Qd89zO7bAytOCgCJ+Y26M5CkTnxZ9qZbSO7g="},"NEXT":{"nodeId":"a49b0b1a-6173-4b67-bc00-9ca023b9bb35","metadata":{},"hash":"rjyJ3tr6qRdeR0g1cGyrqVLq/PkYD4G95GoROnaFjNI="}},"text":"Request Parameters\n\n\n\nRequest Parameters\nType?\nRequired?\nValues\n\n\n\ntopLeft\nDouble,Double\nYes\nLatitude,Longitude pair of the top left (NW) corner of the area to be searched\n\n\nbottomRight\nDouble,Double\nYes\nLatitude,Longitude pair of the bottom right (SE) corner of the area to be searched\n\n\n\nExample Request\n$ curl -X GET \\\n'https://api2.beans.ai/enterprise/v2/search/poi?topLeft=37.412859,-122.086259&bottomRight=37.347142,-121.99' \\\n-H 'Authorization: Basic a2V5OnNlY3JldA=='\n\n\nResponse\nResponse Object\n          Response will consist of one more point of interest items, each repesenting a potential point of interest.\n\n          {\n   pointsOfInterest: [\n      {\n         name: \"Cherry Orchard\",\n         location: {\n            latitude: 37.368115866527106,\n            longitude: -122.03475209388856\n         },\n         address: \"250 W El Camino Real, Sunnyvale, CA 94087\",\n         contactInfo: {\n            mgmtCompanyId: \"IRV\",\n            mgmtOnsitePhone: \"(408) 338-0954\",\n            mgmtOnsiteUrl: \"https://www.irvinecompanyapartments.com/locations/northern-california/sunnyvale/cherry-orchard.html\"\n         }\n      },\n      {\n         name: \"Mathilda Garden\",\n         location: {\n            latitude: 37.36499686139395,\n            longitude: -122.03442467338344\n         },\n         address: \"777 S Mathilda Ave, Sunnyvale, CA 94087\",\n         contactInfo: {\n            mgmtOnsitePhone: \"(408) 245-5620\",\n            mgmtOnsiteUrl: \"https://mathildagarden.tripod.com/\"\n         }\n      },\n      {\n         location: {\n            latitude: 37.3921207777399,\n            longitude: -122.04481456544424\n         },\n         address: \"431 Costa Mesa Ter, Sunnyvale, CA 94085\"\n      },\n      {\n         name: \"Olive Garden\",\n         location: {\n            latitude: 37.374390263521626,\n            longitude: -122.05068199509873\n         },\n         address: \"1081 W Olive Ave, Sunnyvale, CA 94086\",\n         contactInfo: {\n            mgmtOnsitePhone: \"(408) 739-1470\",\n            mgmtOnsiteUrl: \"http://www.olivegardenapartmenthomes.com/\"\n         }\n      }\n   ]\n}\n\n\nAddress Classification(RBDI) API\nRequest\nBase UrlGET https://api.beans.ai/enterprise/v2/search/rbdi\nAuthentication\n          The Beans Address Verifier API uses a standard authorization header to authenticate client requests. You must sign in and create an enterprise account here to get your\n          key before you access the API. If you use an unauthorized key or do not provide one, you will get a NOT_ALLOWED response.\n          \n          Once you have\n          your key and secret available, you are required to specify them in the Authorization header of all your requests, as below,\n          where a2V5OnNlY3JldA== is the base64 encoding of the\n          string \"key:secret\". For\n          more information, see wiki:Basic\n          access authentication\n\nAuthorization: Basic a2V5OnNlY3JldA==\n\n\nRequest Parameters\n\n\n\nRequest Parameters\nType?\nRequired?\nValues\n\n\n\naddress\nString\nYes\nFull street address (line 1, city, state zip)\n\n\nunit\nString\nNo\nUnit number of address (line 2)\n\n\ncountry\nString\nNo\nISO3-Country code (Default: USA)\n\n\n\nExample Request\n$ curl -X GET \\\n'https://api2.beans.ai/enterprise/v2/search/rbdi?address=299+West+Washington+Ave%20+Sunnyvale%20+CA&unit=' \\\n-H 'Authorization: Basic a2V5OnNlY3JldA=='","textTemplate":"","startCharIdx":62215,"endCharIdx":65529,"metadataSeparator":"\n","type":"TEXT","hash":"C2j9E79iKKfY3QZxGk5wSbNbwzRinbbXJIF7iyDl9qk="},"a49b0b1a-6173-4b67-bc00-9ca023b9bb35":{"id_":"a49b0b1a-6173-4b67-bc00-9ca023b9bb35","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"b394b386-75ef-435d-9898-9884ecffce34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"UuwM3vdUkdbfIqyW/HXQrJZxLR8fhQ+iQp+Kfn74HG8="},"PREVIOUS":{"nodeId":"b4323773-bb3d-43ea-a781-8cbd99430080","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"0yoIUzXinngqhUVcPvA2C0RLUnjLvJG74JpqbCdqABA="},"NEXT":{"nodeId":"43917b4b-1e4b-4721-80dc-d40e2bb430cc","metadata":{},"hash":"uwyttuWhzS4A1sGk28Q+MI18rLw7t4OdqBHmbrQIxE0="}},"text":"Request Parameters\n\n\n\nRequest Parameters\nType?\nRequired?\nValues\n\n\n\naddress\nString\nYes\nFull street address (line 1, city, state zip)\n\n\nunit\nString\nNo\nUnit number of address (line 2)\n\n\ncountry\nString\nNo\nISO3-Country code (Default: USA)\n\n\n\nExample Request\n$ curl -X GET \\\n'https://api2.beans.ai/enterprise/v2/search/rbdi?address=299+West+Washington+Ave%20+Sunnyvale%20+CA&unit=' \\\n-H 'Authorization: Basic a2V5OnNlY3JldA=='\n\n\nResponse\nResponse Object\n          Response will consist of an address and its primary, secondary and an optional tertiary classification. Primary classification indicates whether the provided address is Residential, Business or mixed. Secondary classification indicates MDU-Apartments, Condos, Mobile homes, colleges, shopping malls, hospitals, etc. Tertiary classification indicates high-rise, mid-rise, garden-style etc.\n          The response for the above Address classification sample request is below\n\n          {\n   result: {\n      address: \"299 W Washington Ave, 94086\",\n      countryIso3: \"USA\",\n      primaryClassification: \"residential\",\n      secondaryClassification: \"multi_family\",\n      tertiaryClassification: \"mid_rise\"\n   }\n}\n\n\nAddress Type Identifier API\nRequest\nBase UrlGET https://api.beans.ai/enterprise/v2/address/type\nAuthentication\n          The Beans Address Type Identifier API uses a standard authorization header to authenticate client requests. You must sign in and create an enterprise account here to get your\n          key before you access the API. If you use an unauthorized key or do not provide one, you will get a NOT_ALLOWED response.\n          \n          Once you have\n          your key and secret available, you are required to specify them in the Authorization header of all your requests, as below,\n          where a2V5OnNlY3JldA== is the base64 encoding of the\n          string \"key:secret\". For\n          more information, see wiki:Basic\n          access authentication\n\nAuthorization: Basic a2V5OnNlY3JldA==\n\n\nRequest Parameters\n\n\n\nRequest Parameters\nType?\nRequired?\nValues\n\n\n\naddress\nString\nYes\nFull street address (line 1, city, state zip)\n\n\ncountry\nString\nNo\nISO3-Country code (Default: USA)\n\n\n\nExample Request\n$ curl -X GET \\\n'https://api2.beans.ai/enterprise/v2/address/type?address=299+West+Washington+Ave%20+Sunnyvale%20+CA&country=USA' \\\n-H 'Authorization: Basic a2V5OnNlY3JldA=='\n\n\nResponse\nResponse Object\n          Response will indicate the type of the request address, primarily if its residential and if its a MDU.\n          The response for the above Address Type sample request is below\n\n          {\n   queryId: \"VVNBOjoyOTkgVyBXYXNoaW5ndG9uIEF2ZSwgU3Vubnl2YWxlIENBOjoxNjU4NTMyMjEy\",\n   isResidential: true,\n   isMDU: true\n}\n\n\nPublished Data API\nRequest\nBase UrlGET https://api.beans.ai/enterprise/v2/published/{contractID}\nAuthentication\n          The Beans Published Data API uses a standard authorization header to authenticate client requests. You must sign in and create an enterprise account here to get your\n          key before you access the API. If you use an unauthorized key or do not provide one, you will get a NOT_ALLOWED response.\n          \n          Once you have\n          your key and secret available, you are required to specify them in the Authorization header of all your requests, as below,\n          where a2V5OnNlY3JldA== is the base64 encoding of the\n          string \"key:secret\". For\n          more information, see wiki:Basic\n          access authentication\n\nAuthorization: Basic a2V5OnNlY3JldA==\n\n\nRequest Parameters\n\n\n\nRequest Parameters\nType?\nRequired?\nValues\n\n\n\nupdatedAfter\nString\nNo\nDate in yyyy-MM-dd format to get the data published after a specific date\n\n\n\nExample Request\n$ curl -X GET \\\n'https://api2.beans.ai/enterprise/v2/published/{data.client:yyyy:n}' \\\n-H 'Authorization: Basic a2V5OnNlY3JldA=='","textTemplate":"","startCharIdx":65109,"endCharIdx":68938,"metadataSeparator":"\n","type":"TEXT","hash":"BLNRp2WJrW8KiZevVNmDwZFQ4SDu35veJd7kU68X928="},"43917b4b-1e4b-4721-80dc-d40e2bb430cc":{"id_":"43917b4b-1e4b-4721-80dc-d40e2bb430cc","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"b394b386-75ef-435d-9898-9884ecffce34","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"UuwM3vdUkdbfIqyW/HXQrJZxLR8fhQ+iQp+Kfn74HG8="},"PREVIOUS":{"nodeId":"a49b0b1a-6173-4b67-bc00-9ca023b9bb35","metadata":{"url":"https://www.beans.ai/enterprise-api-v2"},"hash":"rjyJ3tr6qRdeR0g1cGyrqVLq/PkYD4G95GoROnaFjNI="}},"text":"Request Parameters\n\n\n\nRequest Parameters\nType?\nRequired?\nValues\n\n\n\nupdatedAfter\nString\nNo\nDate in yyyy-MM-dd format to get the data published after a specific date\n\n\n\nExample Request\n$ curl -X GET \\\n'https://api2.beans.ai/enterprise/v2/published/{data.client:yyyy:n}' \\\n-H 'Authorization: Basic a2V5OnNlY3JldA=='\n\n\nResponse\nResponse Object\n          Response will consist of an array of data objects published for the specified contract.\n\n          {\n   data: [\n      {\n         updated_at: 1654551587000,\n         value: {\n            address: \"11135 SW 134th Ct, Miami, FL\",\n            name: \"Town Villas North East\",\n            lat: \"25.66372146\",\n            lng: \"-80.41247164\"\n         }\n      },\n      {\n         updated_at: 1654551587000,\n         value: {\n            address: \"12755 SW 136th St, Miami, FL\",\n            name: \"Azura\",\n            lat: \"25.64163976\",\n            lng: \"-80.39984081\"\n         }\n      }\n   ]\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProducts\n\nAPI & Data\nRouting Tools\nVisualizations\n\n\n\n\n\nCompany\n\nIn the Media\nCareers\nTeam\n\n\n\n\n\nContact\n\n Talk to Sales\n +1 (415) 888-9059\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n © 2021 One Hundred Feet, Inc. All Rights Reserved.\nPrivacy & Terms","textTemplate":"","startCharIdx":68626,"endCharIdx":69805,"metadataSeparator":"\n","type":"TEXT","hash":"KmtuQ1UHtIug0ffImNY7DS1Dt8gm5YNYdTS6EDmhRTw="}},"type":"simple_dict"}}}