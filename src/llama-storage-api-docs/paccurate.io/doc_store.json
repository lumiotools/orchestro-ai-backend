{"docstore/data":{"5898c864-5de6-48b4-80b6-cb0ef0d0b435":{"__data__":"{\"id_\":\"5898c864-5de6-48b4-80b6-cb0ef0d0b435\",\"metadata\":{\"url\":\"https://api.paccurate.io/docs\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{},\"text\":\"api.paccurate.io Schema\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\npaccurate.io 1.7.2  /static/api/1.7.2/swagger.yamldefault POST​/ a pure-JSON endpoint for packing requests.\\nParametersTry it out NameDescriptionpackobject(body)complete set of items, boxes, and parameters to pack.\\nExample ValueModel/static/api/1.7.2/swagger.yaml#/definitions/PackPack{requestIdstringa client-provided string identifier for the pack request being made.\\norderIdstringa client-provided string identifier for the order this pack corresponds to.\\nlayFlatbooleandefault: falsealigns all items laying flat. If possible, it may create a \\\"brick-laying\\\" pattern to increase stability.\\ninterlockbooleandefault: falsealternates layFlat orientation by layer, so as to create an interlocked placement pattern and improve item stability.\\ncornersbooleandefault: trueonly pack items at valid corner points of other items (optimal)\\nitemSets[example: List [ OrderedMap { \\\"refId\\\": 0, \\\"color\\\": \\\"tomato\\\", \\\"dimensions\\\": OrderedMap { \\\"x\\\": 4.2, \\\"y\\\": 7, \\\"z\\\": 8 }, \\\"weight\\\": 4.5, \\\"quantity\\\": 10 }, OrderedMap { \\\"refId\\\": 1, \\\"color\\\": \\\"cornflowerblue\\\", \\\"dimensions\\\": OrderedMap { \\\"x\\\": 3, \\\"y\\\": 3, \\\"z\\\": 5 }, \\\"weight\\\": 2, \\\"quantity\\\": 13 } ]item set definitions if not creating random items.\\n/static/api/1.7.2/swagger.yaml#/definitions/ItemSetItemSet{...}]boxTypes[box type definitions for packing, will override boxTypeSets defined.\\n/static/api/1.7.2/swagger.yaml#/definitions/BoxTypeBoxType{...}example: OrderedMap { \\\"name\\\": \\\"Example Box\\\", \\\"dimensions\\\": OrderedMap { \\\"x\\\": 7.5, \\\"y\\\": 12, \\\"z\\\": 16 }, \\\"weightMax\\\": 60, \\\"weightTare\\\": 0.5, \\\"price\\\": 125 }]boxTypeGenerators[list of dynamic boxTypeGenerators to use, in combination with boxTypes\\n/static/api/1.7.2/swagger.yaml#/definitions/BoxTypeGeneratorBoxTypeGenerator{...}]boxTypeDefaults{description:default attributes for all \\\"boxTypes\\\", to be overridden by any individual \\\"boxType\\\" attributes specified.\\nnamestringname for the type of box.\\nrefIdintegerbox type reference identifier passed backed from request.\\npriceintegerminimum: 0Fixed price of the container, in whole units of currency, default USD cents. This can represent the cost of a flat rate carton, the cost of the actual carton materials, or it can include any other flat fees that may need to be added on a per-carton basis, such as handling, accessorial surchages, oversize fees, etc. This value is added to any rate table rates defined for the carton.\\nweightTarenumberminimum: 0default: 0weight of the container when empty or otherwise unladen, i.e., of the box itself.\\nweightMax*numberminimum: 0maximum allowable gross weight for the box, i.e., all packed item weights plus the weightTare.\\ndimensions*Point{...}outer{...}centerOfMassPoint{...}reservedSpacenumberminimum: 0maximum: 1default: 0example: 0.2space in boxes that is reserved, i.e., for packing material, overriding top-level 'reservedSpace'.\\nitemsPerBoxMaxintegerdefault: 0The maximum quantity of discrete items that a single box can contain. The default setting of 0, a negative number, and null are all equivalent and indicate no maximum limit, overriding top-level 'itemsPerBoxMax'.\\nitemSetsPerBoxMaxintegerdefault: 0The maximum quantity of unique 'item.refId' values that a single box can contain. The default setting of 0, a negative number, and null are all equivalent and indicate no maximum limit, overriding top-level 'itemSetsPerBoxMax' settings.\\nitemsInlineMax[...]rateTableRateTable{...}propertyConstraints[...]}example: OrderedMap { \\\"weightMax\\\": 50, \\\"rateTable\\\": OrderedMap { \\\"dimFactor\\\": 166 } }boxes[example: List []pre-packed boxes, including any items specified that will be packed and excess space used before any new boxes are created.\\n/static/api/1.7.2/swagger.yaml#/definitions/BoxBox{...}]usableSpacenumberminimum: 0maximum: 1default: 0.85example: 0.85an estimate of typical box utilization for the quick \\\"estimated\\\" boxTypeChoiceStyle, which will be used to ensure \\\"estimated\\\" box type choices are not overly optimistic regarding potential volume utilization.\\nreservedSpacenumberminimum: 0maximum: 1default: 0example: 0.2space in boxes that is reserved, i.e., for packing material.\\nboxTypeSets[example: List []predefined box types to be used, separated by commas. Will be overridden by boxTypes. Acceptable values are \\\"fedex\\\"--FedEx OneRate\\\"usps\\\"--USPS Priority Flat Rate\\\"pallet\\\"--full-, half-, and quarter-sized 48\\\"x40\\\" pallets.\\nBoxTypeSetstringbox type sets for useful defaults.\\nEnum:Array [ 4 ]]eyePoint{description:The x,y,z coordinates of the virtual eye looking at the package for visualization purposes. Default is isometric, \\\"1,1,1\\\". To generate a side view, one could use \\\"0.001,1.0,0.001\\\".\\nxnumberdefault: 0x coordinate, used as height.\\nynumberdefault: 0y coordinate, used as width.\\nznumberdefault: 0z coordinate, used as length.\\n}example: OrderedMap { \\\"x\\\": 1, \\\"y\\\": 1, \\\"z\\\": 1 }packOriginPoint{description:the x,y,z coordinates of an optional packing origin. A packing origin is used to create more balanced packing for situations where load needs to be considered. E.g., for a 40\\\"x48\\\" pallet, a packOrigin representing the middle of the pallet, \\\"0,20,24\\\", would cause placement to minimize the distance of the packed items from the center of the pallet.\\nxnumberdefault: 0x coordinate, used as height.\\nynumberdefault: 0y coordinate, used as width.\\nznumberdefault: 0z coordinate, used as length.\\n}example: OrderedMap { \\\"x\\\": 0, \\\"y\\\": 0, \\\"z\\\": 0 }zoneintegerexample: nullminimum: 1[deprecated] the shipping zone in order to use basic zone-based price optimization.\\nrules[example: List []Array of packing rules.\\n/static/api/1.7.2/swagger.yaml#/definitions/RuleRule{...}]randombooleandefault: falsecreate random items\\nnintegerdefault: 5number of random items to generate and the quantity of each if \\\"random\\\" is set to true. a value of 5 would create 5 different items with a quantity of 5 each, making the total item quantity equal to n²\\nrandomMaxDimensionintegerdefault: 10maximum item dimension along a single axis for randomly generated items.\\nrandomMaxWeightintegerdefault: 10maximum item weight for randomly generated items.\\nrandomMaxQuantityintegermaximum quantity for randomly generated items.\\nseedbooleandefault: trueexample: falseif random is selected, seed the random number generator to deterministically generate random items to pack.\\nseedValueintegerdefault: 1if seed is set to true, specifies a non-default seed for the random number generator.\\nimgSizeintegerdefault: 400width of rendered SVGs in pixels.\\ntemplatestringexample: template name for markup generation.\\nEnum:Array [ 3 ]includeScriptsbooleandefault: falseexample: falseinclude inline javascripts and styles for base template\\nincludeImagesbooleandefault: trueexample: trueinclude inline images, default is always on\\nimageFormatstringdefault: svgcase-insensitive format to render images in, either 'SVG' or 'PNG', if includeImages is enabled.\\nEnum:Array [ 2 ]coordOrder[maxLength: 3minLength: 3example: List [ 0, 1, 2 ]If placementStyle is set to \\\"default\\\", coordOrder sets the placement priority of axes ascendingly. \\\"0,1,2\\\" would search for placement points along the Z(length,\\\"2\\\"), then Y(width,\\\"1\\\"), and finally X(height\\\"0\\\"). Keep in mind that in the default rendering the \\\"up\\\" direction is X and the other axes follow the right-hand rule.\\nThis is useful for different packing methods. E.g., Utilizing \\\"2,0,1\\\" would pack a shipping container first in the Y(width) direction, then in the X(height) direction, and finally in the Z(length) direction, replication a floor-to-ceiling, front-to-back loading method.\\ninteger]cohortPackingbooleandefault: falseif selected, will ensure that all like items will be packed together, in no more than [cohortMax] different groups within a single container.\\ncohortMaxintegerdefault: 2the maximum number of contiguous cohorts for a given item type within a single container. E.g., if you pack 40 chairs in a single container, a cohortMax of 2 could yield one (all 40 chairs in a single block if space is availabe) or two (say, 25 chairs in one corner and 15 in the other) contiguous cohorts.\\nallowableOverhangnumberdefault: -1The amount an item can overhang lower items that it is placed upon. The units are whatever units the box and item dimensions are given in. By convention, inches.\\nplacementStylestringdefault: defaultHow to place items. 'default' will defer to coordOrder, 'corner' minimizes distance to rear, bottom corner, 'wedge' minimizes distance to middle of bottom, back edge, 'mound' minimizes distance to center of carton bottom.\\nEnum:Array [ 5 ]itemSortstringdefault: combinedMethod to use to sort items for placement. Default is item volume descending. 'largest-box-needed' is by the volume of the smallest box type specified that will fit the item, descending, 'largest-girth' is 2*(width + height), descending, 'longest-dimension' is by longest single item dimension, descending, 'shortest-dimension' is by shortest single dimension, ascending, 'largest-cross-section' is by largest product of the two greatest dimensions, descending, 'set-volume' is by total 'itemSet' volume, descending. 'weight' is by weight, descending. 'density' is by item weight per unit volume, descending. It can often be worth attempting packs with competing itemSorts and picking the lowest cost option. 'all' uses all available item sorts, whereas 'combined' uses a recommended set of item sorts, both returning the lowest 'totalCost' option.\\nEnum:Array [ 12 ]itemSortReversebooleandefault: falseWhether or not to reverse the itemSort utilized.\\nitemSortDualDirectionbooleandefault: falseWhether or not to use both normal and reversed itemSorts.\\nitemInitialOrientationBestForBoxbooleandefault: falseFor all items where orientation flipping is used, the orientation producing the highest multiple of items fit per remaining dimension is used as the first orientation. This option should be enabled when packing high quantities of single item types, but may produce inconsistent results in other cases. Defers to item orientation locking and itemOrientationSearchDepth > 0 if a superior result is found.\\nitemInitialOrientationPreferredbooleandefault: trueWhether to attempt packing by either greedily placing items or placing all allowable combinations of initial item orientations and selecting the most performant. When true, items will be placed immediately using the orientation reflected by their dimensions definition and will only be flipped if a placement cannot be found and the item rules allow orientation changes. When false, all allowable initial orientation combinations will be attempted for each item in each box.\\nitemOrientationSearchDepthintegerdefault: 1minimum: 0maximum: 10When itemInitialOrientationPreferred is set to false, the itemOrientationSearchDepth is the number of unique, sorted, groups of Items sharing the same ItemSet definition that will be have every combination of initial orientation attempted. A value of 1 signifies that only the first item (and others still unpacked from its ItemSet) will have every orientation attempted and the engine subsequently selecting the most performant. A value of 2 signifies that the first groups of unpacked items, each sharing an ItemSet, will have every combination of orientation attempted. Increasing this value from 1 can very rapidly result in excessive complexity and a timeout error instead of a result, so discretion is advised.\\nsequenceSortbooleandefault: falseWhether or not the items should be initially sorted by their sequence value instead of by the specified itemSort. This is not always useful, as the default \\\"biggest-first\\\" volume sort is very effective for items, and constraining by maxSequenceDistance is applied regardless of this field. That said, for doing custom pre-sorts such as weight-based instead of volume based, this value should be set to true.\\nsequenceHeatMapbooleandefault: falseColorize items solely by their sequence value, light when sequence is high, dark when it is low. Useful for indicating item bin location, weight, or other sequence property that may not be apparent from the default visualization.\\nmaxSequenceDistanceintegerThis is the maximum distance allowable between two sequence values of items packed in a common box. E.g., \\\"Distance\\\" for an item sequence composed of aisle/bin combinations of \\\"0401\\\" and \\\"1228\\\" has a sequence distance of |1228 - 401| = 827\\nboxTypeChoiceStylestringdefault: actualDefines how available boxTypes are selected when a new box must be created to pack additional items. The 'estimated' style uses 'usableSpace' to estimate how quickly each valid boxType will be filled by both weight and volume, and estimated cost is calculated. 'actual' attempts real placement of subsequent items in each available boxType and selects the one with the lowest actual cost. 'actual' is much slower than 'estimated', but will often return superior cost optimizations.\\nEnum:Array [ 2 ]boxTypeChoiceLookaheadintegerdefault: 0When selecting the next available boxType, we must consider how far to look ahead.Consider we have 8 items of identical dimensions, and two flat rate boxTypes. It is found that Box A can fit 6 items, and costs $12. Box B can fit 4 items, and costs $10.If we consider only the next box, i.e., 'boxTypeChoiceLookahead' set to 0, we would select Box A. It costs $2 per item, whereas Box B is $2.50 per item. Box A is opened, 6 items are placed inside, and now 2 remain. To pack the last 2, Box B would be selected, as 2 items for $10 is $5 per item, and Box A's $12 is $6 per item.Alternatively, if 'boxTypeChoiceLookahead' is set to 1, the boxType that provides the lowest cost per item including the lookahead boxType(s) would be selected. In this case, we find we need 2 of Box B, for $20 total, to fit all 8 items, or $2.50 per item, and would need 1 of Box A and 1 of Box B if Box A is selected first, for $22 total or $2.75 per item. Box B would be used.Please note that 'boxTypeChoiceLookahead', especially when combined with the 'actual' 'boxTypeChoiceStyle' can have significant performance impacts. 0 is recommended for real-time use cases.boxTypeChoiceLookbackintegerdefault: -1Control the ability for partially-filled boxes to allow packing of later-sorted items. A value of null or -1 means unlimited lookback is permitted, i.e., every box can be used to pack any allowable item that fits regardless of its pack sequence, and all boxes will remain \\\"opened\\\" or available for packing until the last item in the pack sequence is attempted. A value of 0 means lookback is not allowed, and as soon as the next item in the pack sequence does not fit into a partially filled box, that box is \\\"closed\\\" or locked and will not permit any additional items (i.e., out-of-sequence items) to be packed in it.\\nboxTypeChoiceGoalstringdefault: lowest-costThe objective to evaluate boxTypeChoices by. 'lowest-cost' minimizes price or volume cost of boxTypes selected, 'most-items' maximizes item count per box opened, i.e., fewest total boxes used.\\nEnum:Array [ 2 ]boxesMaxintegerdefault: 0The maximum number of boxes to be used to pack the items in the request, potentially leaving items in 'leftovers' if there is insufficient space, determined by item 'sequence' or selected 'itemSort'. If existing 'boxes' are passed to the pack request, they count towards this total, but will not be excluded, allowing for situations where 'lenBoxes' may be greater than 'boxesMax'. However, no 'boxTypes' will be used to create additional boxes unless doing so would not exceed 'boxesMax'.\\nboxesPerItemSetMaxintegerdefault: 0The maximum number of boxes that a single ItemSet's member items (i.e., all that share the same refId) can be spread across. Any items that do not fit within this number of boxes will be precluded from packing and returned in the leftovers array. The default setting of 0, a negative number, and null are all equivalent and indicate no maximum limit.\\nboxesPerSequenceMaxintegerdefault: 0The maximum number of boxes that a single non-empty sequence's member items (i.e., all that share the same non-empty sequence) can be spread across. Any items that do not fit within this number of boxes will be precluded from packing and returned in the leftovers array. The default setting of 0, a negative number, and null are all equivalent and indicate no maximum limit.\\nitemsPerBoxMaxintegerdefault: 0The maximum quantity of discrete items that a single box can contain. The default setting of 0, a negative number, and null are all equivalent and indicate no maximum limit, optionally overridden by 'boxType' settings.\\nitemSetsPerBoxMaxintegerdefault: 0The maximum quantity of unique 'item.refId' values that a single box can contain. The default setting of 0, a negative number, and null are all equivalent and indicate no maximum limit, optionally overridden by 'boxType' settings.\\nitemsInlineMax[maxLength: 3minLength: 3example: List [ 1, 2, 1 ]Limit the item count that can share a placement on a specific line parallel to the placement axis, e.g., '[1,2,1]' means items can be placed 1 high, 2 wide, and 1 deep within the box. A value of '0' is equivalent to no limit along that axis. Overridden by 'boxType' settings.\\ninteger]generatedBoxTypesMaxintegerdefault: 0example: 64The maximum number of generated box sizes to randomly sampled when generating box types. Default of 0 is unlimited, and in some cases may never return without a limit. 64 is a sensible value.\\nvalueTiebreakerstringdefault: volumeThe tiebreaker to use in the event to box type choices are otherwise completely equal. Default is \\\"volume\\\", alternative is \\\"weight\\\".\\nEnum:Array [ 2 ]timeoutnumberexample: 30Optional timeout for request computation, will be reduced to endpoint maximum if in excess of published timeout.\\n}ResponsesResponse content typeapplication/jsonCodeDescription200Successful pack.\\nExample ValueModelPackResponse{boxes[List of boxes, packed, with their contained items.\\n{...}]titlestringtitle of packing result, when applicable.\\nbuiltstringbuild timestamp of engine.\\nstartedAtstringstart timestamp of pack.\\nversionstringversion of engine\\nlenBoxesintegercardinality of all packed boxes\\nlenItemsintegertotal sum of quantities of all items\\nlenUnitsintegercardinality of distinct units of items (count of cases, eaches, etc.)\\nlenLeftoversintegercardinality of items unabled to be packed\\ntotalCostintegertotal estimated cost of all packed boxes, when applicable, in cents.\\ntotalVolumenumbertotal volume of all boxes returned\\ntotalVolumeNetnumbertotal net (item) volume of all packed (non-leftover) items\\ntotalVolumeUsednumbertotal net volume plus reserved volume from \\\"reservedSpace\\\"\\ntotalVolumeUtilizationnumbertotalVolumeUsed divided by totalVolume\\ntotalWeightnumbertotal gross weight of all packed boxes, including box tare weights and item weights.\\npackTimenumberseconds spent in packing\\nrenderTimenumberseconds spent in rendering and placement instruction creation of packing solution\\ntotalTimenumberseconds spent generating response, total.\\nleftovers[items left over that could not be packed into any available boxes.\\n/static/api/1.7.2/swagger.yaml#/definitions/ItemItem{...}]itemSortUsedstringname of item sort algorithm used.\\nitemSortReverseUsedbooleanwhether the item sort was reversed.\\nboxTypeChoiceGoalUsedstringname of box type choice goal used.\\nscriptsstringadditional javascripts for any image loading.\\nstylesstringadditional styles for pack images\\nsvgs[all box SVG images\\nstring]orderIdstringa client-provided string identifier for the order this pack corresponds to.\\nrequestIdstringa client-provided string identifier for the pack request being made.\\nimages[if PNG imageFormat selected, list of PNG image objects.\\n/static/api/1.7.2/swagger.yaml#/definitions/ImageImage{...}]usedKeyStemstringstem of authorization key used, if any.\\nwarnings[required: falseany warning messages about non-critical issues arising during the pack.\\nstring]requestFingerprintstringa fingerprint corresponding to the request content for identification within Paccurate Manager.\\nresponseFingerprintstringa fingerprint corresponding to the response content for identification within Paccurate Manager\\npackUuidstringa unique identifier for this pack transaction, which can be used to directly retrieve the pack via the Paccurate Manager.\\n}400Bad request. Malformed or some other problem occurred processing the request.\\nExample ValueModel/static/api/1.7.2/swagger.yaml#/definitions/ErrorError{message*stringdetailsstringcode*integerminimum: 100maximum: 600}422Invalid input. The request was well-formed, but the parameters were contradictory, invalid, or otherwise somehow unable to be processed. More information will be contained in the error details.\\nExample ValueModel/static/api/1.7.2/swagger.yaml#/definitions/ErrorError{message*stringdetailsstringcode*integerminimum: 100maximum: 600}429Rate limited. Without an API key, only 10 unique requests are allowed per day for testing or demonstration purposes. Note that a randomized pack repeated is only a single unique request.\\nExample ValueModel/static/api/1.7.2/swagger.yaml#/definitions/ErrorError{message*stringdetailsstringcode*integerminimum: 100maximum: 600}500Unexpected error.\\nExample ValueModel/static/api/1.7.2/swagger.yaml#/definitions/ErrorError{message*stringdetailsstringcode*integerminimum: 100maximum: 600}  Models Error Pack BoxProperties BoxType BoxTypeSet BoxTypeGenerator GeneratorAxisList GeneratorAxisRange GeneratorLimit GeneratorPriceComponent Metric Box ItemProperties Item ItemSet DimensionSet ItemMatch Rule Point RateTable Subspace Image\",\"textTemplate\":\"\",\"metadataSeparator\":\"\\n\",\"type\":\"DOCUMENT\",\"hash\":\"KrAR2WDxezuk2wBZ0Itd8stm4zuwBn0odL0bApokedk=\"}","__type__":"DOCUMENT"},"82ff864b-707f-4749-a2de-be88d702f868":{"__data__":"{\"id_\":\"82ff864b-707f-4749-a2de-be88d702f868\",\"metadata\":{\"url\":\"https://api.paccurate.io/docs\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"5898c864-5de6-48b4-80b6-cb0ef0d0b435\",\"metadata\":{\"url\":\"https://api.paccurate.io/docs\"},\"hash\":\"KrAR2WDxezuk2wBZ0Itd8stm4zuwBn0odL0bApokedk=\"},\"NEXT\":{\"nodeId\":\"8a5c2e78-c3c0-44ce-ad92-ecb3903daa69\",\"metadata\":{},\"hash\":\"r4UdtoWp01+2hdAMeygyqVqNipJrmJWza8iiWaZICDk=\"}},\"text\":\"api.paccurate.io Schema\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\npaccurate.io 1.7.2  /static/api/1.7.2/swagger.yamldefault POST​/ a pure-JSON endpoint for packing requests.ParametersTry it out NameDescriptionpackobject(body)complete set of items, boxes, and parameters to pack.Example ValueModel/static/api/1.7.2/swagger.yaml#/definitions/PackPack{requestIdstringa client-provided string identifier for the pack request being made.orderIdstringa client-provided string identifier for the order this pack corresponds to.layFlatbooleandefault: falsealigns all items laying flat.If possible, it may create a \\\"brick-laying\\\" pattern to increase stability.interlockbooleandefault: falsealternates layFlat orientation by layer, so as to create an interlocked placement pattern and improve item stability.cornersbooleandefault: trueonly pack items at valid corner points of other items (optimal)\\nitemSets[example: List [ OrderedMap { \\\"refId\\\": 0, \\\"color\\\": \\\"tomato\\\", \\\"dimensions\\\": OrderedMap { \\\"x\\\": 4.2, \\\"y\\\": 7, \\\"z\\\": 8 }, \\\"weight\\\": 4.5, \\\"quantity\\\": 10 }, OrderedMap { \\\"refId\\\": 1, \\\"color\\\": \\\"cornflowerblue\\\", \\\"dimensions\\\": OrderedMap { \\\"x\\\": 3, \\\"y\\\": 3, \\\"z\\\": 5 }, \\\"weight\\\": 2, \\\"quantity\\\": 13 } ]item set definitions if not creating random items./static/api/1.7.2/swagger.yaml#/definitions/ItemSetItemSet{...}]boxTypes[box type definitions for packing, will override boxTypeSets defined./static/api/1.7.2/swagger.yaml#/definitions/BoxTypeBoxType{...}example: OrderedMap { \\\"name\\\": \\\"Example Box\\\", \\\"dimensions\\\": OrderedMap { \\\"x\\\": 7.5, \\\"y\\\": 12, \\\"z\\\": 16 }, \\\"weightMax\\\": 60, \\\"weightTare\\\": 0.5, \\\"price\\\": 125 }]boxTypeGenerators[list of dynamic boxTypeGenerators to use, in combination with boxTypes\\n/static/api/1.7.2/swagger.yaml#/definitions/BoxTypeGeneratorBoxTypeGenerator{...}]boxTypeDefaults{description:default attributes for all \\\"boxTypes\\\", to be overridden by any individual \\\"boxType\\\" attributes specified.namestringname for the type of box.refIdintegerbox type reference identifier passed backed from request.priceintegerminimum: 0Fixed price of the container, in whole units of currency, default USD cents.This can represent the cost of a flat rate carton, the cost of the actual carton materials, or it can include any other flat fees that may need to be added on a per-carton basis, such as handling, accessorial surchages, oversize fees, etc. This value is added to any rate table rates defined for the carton.weightTarenumberminimum: 0default: 0weight of the container when empty or otherwise unladen, i.e., of the box itself.weightMax*numberminimum: 0maximum allowable gross weight for the box, i.e., all packed item weights plus the weightTare.dimensions*Point{...}outer{...}centerOfMassPoint{...}reservedSpacenumberminimum: 0maximum: 1default: 0example: 0.2space in boxes that is reserved, i.e., for packing material, overriding top-level 'reservedSpace'.itemsPerBoxMaxintegerdefault: 0The maximum quantity of discrete items that a single box can contain.The default setting of 0, a negative number, and null are all equivalent and indicate no maximum limit, overriding top-level 'itemsPerBoxMax'.itemSetsPerBoxMaxintegerdefault: 0The maximum quantity of unique 'item.refId' values that a single box can contain.The default setting of 0, a negative number, and null are all equivalent and indicate no maximum limit, overriding top-level 'itemSetsPerBoxMax' settings.itemsInlineMax[...]rateTableRateTable{...}propertyConstraints[...]}example: OrderedMap { \\\"weightMax\\\": 50, \\\"rateTable\\\": OrderedMap { \\\"dimFactor\\\": 166 } }boxes[example: List []pre-packed boxes, including any items specified that will be packed and excess space used before any new boxes are created./static/api/1.7.2/swagger.yaml#/definitions/BoxBox{...}]usableSpacenumberminimum: 0maximum: 1default: 0.85example: 0.\",\"textTemplate\":\"\",\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"ELkE64/5gjiIe8Ym7WdYqOxt4Gw7GtNWdVBq2zUVWoI=\"}","__type__":"TEXT"},"8a5c2e78-c3c0-44ce-ad92-ecb3903daa69":{"__data__":"{\"id_\":\"8a5c2e78-c3c0-44ce-ad92-ecb3903daa69\",\"metadata\":{\"url\":\"https://api.paccurate.io/docs\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"5898c864-5de6-48b4-80b6-cb0ef0d0b435\",\"metadata\":{\"url\":\"https://api.paccurate.io/docs\"},\"hash\":\"KrAR2WDxezuk2wBZ0Itd8stm4zuwBn0odL0bApokedk=\"},\"PREVIOUS\":{\"nodeId\":\"82ff864b-707f-4749-a2de-be88d702f868\",\"metadata\":{\"url\":\"https://api.paccurate.io/docs\"},\"hash\":\"ELkE64/5gjiIe8Ym7WdYqOxt4Gw7GtNWdVBq2zUVWoI=\"},\"NEXT\":{\"nodeId\":\"f143e5e4-dad1-4e0c-96fc-0169e8281bdb\",\"metadata\":{},\"hash\":\"B2yoWcXlPe4+0PWS+mslGUjxR72ByMf1Zd76+WcQw/A=\"}},\"text\":\"itemSetsPerBoxMaxintegerdefault: 0The maximum quantity of unique 'item.refId' values that a single box can contain.The default setting of 0, a negative number, and null are all equivalent and indicate no maximum limit, overriding top-level 'itemSetsPerBoxMax' settings.itemsInlineMax[...]rateTableRateTable{...}propertyConstraints[...]}example: OrderedMap { \\\"weightMax\\\": 50, \\\"rateTable\\\": OrderedMap { \\\"dimFactor\\\": 166 } }boxes[example: List []pre-packed boxes, including any items specified that will be packed and excess space used before any new boxes are created./static/api/1.7.2/swagger.yaml#/definitions/BoxBox{...}]usableSpacenumberminimum: 0maximum: 1default: 0.85example: 0.85an estimate of typical box utilization for the quick \\\"estimated\\\" boxTypeChoiceStyle, which will be used to ensure \\\"estimated\\\" box type choices are not overly optimistic regarding potential volume utilization.reservedSpacenumberminimum: 0maximum: 1default: 0example: 0.2space in boxes that is reserved, i.e., for packing material.boxTypeSets[example: List []predefined box types to be used, separated by commas.Will be overridden by boxTypes.Acceptable values are \\\"fedex\\\"--FedEx OneRate\\\"usps\\\"--USPS Priority Flat Rate\\\"pallet\\\"--full-, half-, and quarter-sized 48\\\"x40\\\" pallets.BoxTypeSetstringbox type sets for useful defaults.Enum:Array [ 4 ]]eyePoint{description:The x,y,z coordinates of the virtual eye looking at the package for visualization purposes.Default is isometric, \\\"1,1,1\\\".To generate a side view, one could use \\\"0.001,1.0,0.001\\\".xnumberdefault: 0x coordinate, used as height.ynumberdefault: 0y coordinate, used as width.znumberdefault: 0z coordinate, used as length.}example: OrderedMap { \\\"x\\\": 1, \\\"y\\\": 1, \\\"z\\\": 1 }packOriginPoint{description:the x,y,z coordinates of an optional packing origin.A packing origin is used to create more balanced packing for situations where load needs to be considered.E.g., for a 40\\\"x48\\\" pallet, a packOrigin representing the middle of the pallet, \\\"0,20,24\\\", would cause placement to minimize the distance of the packed items from the center of the pallet.xnumberdefault: 0x coordinate, used as height.ynumberdefault: 0y coordinate, used as width.znumberdefault: 0z coordinate, used as length.}example: OrderedMap { \\\"x\\\": 0, \\\"y\\\": 0, \\\"z\\\": 0 }zoneintegerexample: nullminimum: 1[deprecated] the shipping zone in order to use basic zone-based price optimization.rules[example: List []Array of packing rules./static/api/1.7.2/swagger.yaml#/definitions/RuleRule{...}]randombooleandefault: falsecreate random items\\nnintegerdefault: 5number of random items to generate and the quantity of each if \\\"random\\\" is set to true.a value of 5 would create 5 different items with a quantity of 5 each, making the total item quantity equal to n²\\nrandomMaxDimensionintegerdefault: 10maximum item dimension along a single axis for randomly generated items.randomMaxWeightintegerdefault: 10maximum item weight for randomly generated items.randomMaxQuantityintegermaximum quantity for randomly generated items.seedbooleandefault: trueexample: falseif random is selected, seed the random number generator to deterministically generate random items to pack.seedValueintegerdefault: 1if seed is set to true, specifies a non-default seed for the random number generator.imgSizeintegerdefault: 400width of rendered SVGs in pixels.templatestringexample: template name for markup generation.Enum:Array [ 3 ]includeScriptsbooleandefault: falseexample: falseinclude inline javascripts and styles for base template\\nincludeImagesbooleandefault: trueexample: trueinclude inline images, default is always on\\nimageFormatstringdefault: svgcase-insensitive format to render images in, either 'SVG' or 'PNG', if includeImages is enabled.Enum:Array [ 2 ]coordOrder[maxLength: 3minLength: 3example: List [ 0, 1, 2 ]If placementStyle is set to \\\"default\\\", coordOrder sets the placement priority of axes ascendingly.\\\"0,1,2\\\" would search for placement points along the Z(length,\\\"2\\\"), then Y(width,\\\"1\\\"), and finally X(height\\\"0\\\").\",\"textTemplate\":\"\",\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"FjS6JgdRafHdebjjzmV8OBZWdsfwli2C+zpQGcdMa5c=\"}","__type__":"TEXT"},"f143e5e4-dad1-4e0c-96fc-0169e8281bdb":{"__data__":"{\"id_\":\"f143e5e4-dad1-4e0c-96fc-0169e8281bdb\",\"metadata\":{\"url\":\"https://api.paccurate.io/docs\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"5898c864-5de6-48b4-80b6-cb0ef0d0b435\",\"metadata\":{\"url\":\"https://api.paccurate.io/docs\"},\"hash\":\"KrAR2WDxezuk2wBZ0Itd8stm4zuwBn0odL0bApokedk=\"},\"PREVIOUS\":{\"nodeId\":\"8a5c2e78-c3c0-44ce-ad92-ecb3903daa69\",\"metadata\":{\"url\":\"https://api.paccurate.io/docs\"},\"hash\":\"r4UdtoWp01+2hdAMeygyqVqNipJrmJWza8iiWaZICDk=\"},\"NEXT\":{\"nodeId\":\"dc7a1862-2276-4bf2-9715-72b341e405b7\",\"metadata\":{},\"hash\":\"qZycwO9AHoHPxPH+42hVpY5Q1iqiSliOVh3SwdvuK48=\"}},\"text\":\"imgSizeintegerdefault: 400width of rendered SVGs in pixels.templatestringexample: template name for markup generation.Enum:Array [ 3 ]includeScriptsbooleandefault: falseexample: falseinclude inline javascripts and styles for base template\\nincludeImagesbooleandefault: trueexample: trueinclude inline images, default is always on\\nimageFormatstringdefault: svgcase-insensitive format to render images in, either 'SVG' or 'PNG', if includeImages is enabled.Enum:Array [ 2 ]coordOrder[maxLength: 3minLength: 3example: List [ 0, 1, 2 ]If placementStyle is set to \\\"default\\\", coordOrder sets the placement priority of axes ascendingly.\\\"0,1,2\\\" would search for placement points along the Z(length,\\\"2\\\"), then Y(width,\\\"1\\\"), and finally X(height\\\"0\\\").Keep in mind that in the default rendering the \\\"up\\\" direction is X and the other axes follow the right-hand rule.This is useful for different packing methods.E.g., Utilizing \\\"2,0,1\\\" would pack a shipping container first in the Y(width) direction, then in the X(height) direction, and finally in the Z(length) direction, replication a floor-to-ceiling, front-to-back loading method.integer]cohortPackingbooleandefault: falseif selected, will ensure that all like items will be packed together, in no more than [cohortMax] different groups within a single container.cohortMaxintegerdefault: 2the maximum number of contiguous cohorts for a given item type within a single container.E.g., if you pack 40 chairs in a single container, a cohortMax of 2 could yield one (all 40 chairs in a single block if space is availabe) or two (say, 25 chairs in one corner and 15 in the other) contiguous cohorts.allowableOverhangnumberdefault: -1The amount an item can overhang lower items that it is placed upon.The units are whatever units the box and item dimensions are given in.By convention, inches.placementStylestringdefault: defaultHow to place items.'default' will defer to coordOrder, 'corner' minimizes distance to rear, bottom corner, 'wedge' minimizes distance to middle of bottom, back edge, 'mound' minimizes distance to center of carton bottom.Enum:Array [ 5 ]itemSortstringdefault: combinedMethod to use to sort items for placement.Default is item volume descending.'largest-box-needed' is by the volume of the smallest box type specified that will fit the item, descending, 'largest-girth' is 2*(width + height), descending, 'longest-dimension' is by longest single item dimension, descending, 'shortest-dimension' is by shortest single dimension, ascending, 'largest-cross-section' is by largest product of the two greatest dimensions, descending, 'set-volume' is by total 'itemSet' volume, descending.'weight' is by weight, descending.'density' is by item weight per unit volume, descending.It can often be worth attempting packs with competing itemSorts and picking the lowest cost option.'all' uses all available item sorts, whereas 'combined' uses a recommended set of item sorts, both returning the lowest 'totalCost' option.Enum:Array [ 12 ]itemSortReversebooleandefault: falseWhether or not to reverse the itemSort utilized.itemSortDualDirectionbooleandefault: falseWhether or not to use both normal and reversed itemSorts.itemInitialOrientationBestForBoxbooleandefault: falseFor all items where orientation flipping is used, the orientation producing the highest multiple of items fit per remaining dimension is used as the first orientation.This option should be enabled when packing high quantities of single item types, but may produce inconsistent results in other cases.Defers to item orientation locking and itemOrientationSearchDepth > 0 if a superior result is found.itemInitialOrientationPreferredbooleandefault: trueWhether to attempt packing by either greedily placing items or placing all allowable combinations of initial item orientations and selecting the most performant.When true, items will be placed immediately using the orientation reflected by their dimensions definition and will only be flipped if a placement cannot be found and the item rules allow orientation changes.When false, all allowable initial orientation combinations will be attempted for each item in each box.itemOrientationSearchDepthintegerdefault: 1minimum: 0maximum: 10When itemInitialOrientationPreferred is set to false, the itemOrientationSearchDepth is the number of unique, sorted, groups of Items sharing the same ItemSet definition that will be have every combination of initial orientation attempted.\",\"textTemplate\":\"\",\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"x3OK93L8rkpyIQ/r0vpqzwMi+prBeoJMeQdMNqPAp2M=\"}","__type__":"TEXT"},"dc7a1862-2276-4bf2-9715-72b341e405b7":{"__data__":"{\"id_\":\"dc7a1862-2276-4bf2-9715-72b341e405b7\",\"metadata\":{\"url\":\"https://api.paccurate.io/docs\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"5898c864-5de6-48b4-80b6-cb0ef0d0b435\",\"metadata\":{\"url\":\"https://api.paccurate.io/docs\"},\"hash\":\"KrAR2WDxezuk2wBZ0Itd8stm4zuwBn0odL0bApokedk=\"},\"PREVIOUS\":{\"nodeId\":\"f143e5e4-dad1-4e0c-96fc-0169e8281bdb\",\"metadata\":{\"url\":\"https://api.paccurate.io/docs\"},\"hash\":\"B2yoWcXlPe4+0PWS+mslGUjxR72ByMf1Zd76+WcQw/A=\"},\"NEXT\":{\"nodeId\":\"71130c9b-26af-45ea-9dd5-4fb29365c429\",\"metadata\":{},\"hash\":\"mMpDSgsRC8l5n0++Va1X+J47Xs7Wuop1MGYR7bzaNtM=\"}},\"text\":\"This option should be enabled when packing high quantities of single item types, but may produce inconsistent results in other cases.Defers to item orientation locking and itemOrientationSearchDepth > 0 if a superior result is found.itemInitialOrientationPreferredbooleandefault: trueWhether to attempt packing by either greedily placing items or placing all allowable combinations of initial item orientations and selecting the most performant.When true, items will be placed immediately using the orientation reflected by their dimensions definition and will only be flipped if a placement cannot be found and the item rules allow orientation changes.When false, all allowable initial orientation combinations will be attempted for each item in each box.itemOrientationSearchDepthintegerdefault: 1minimum: 0maximum: 10When itemInitialOrientationPreferred is set to false, the itemOrientationSearchDepth is the number of unique, sorted, groups of Items sharing the same ItemSet definition that will be have every combination of initial orientation attempted.A value of 1 signifies that only the first item (and others still unpacked from its ItemSet) will have every orientation attempted and the engine subsequently selecting the most performant.A value of 2 signifies that the first groups of unpacked items, each sharing an ItemSet, will have every combination of orientation attempted.Increasing this value from 1 can very rapidly result in excessive complexity and a timeout error instead of a result, so discretion is advised.sequenceSortbooleandefault: falseWhether or not the items should be initially sorted by their sequence value instead of by the specified itemSort.This is not always useful, as the default \\\"biggest-first\\\" volume sort is very effective for items, and constraining by maxSequenceDistance is applied regardless of this field.That said, for doing custom pre-sorts such as weight-based instead of volume based, this value should be set to true.sequenceHeatMapbooleandefault: falseColorize items solely by their sequence value, light when sequence is high, dark when it is low.Useful for indicating item bin location, weight, or other sequence property that may not be apparent from the default visualization.maxSequenceDistanceintegerThis is the maximum distance allowable between two sequence values of items packed in a common box.E.g., \\\"Distance\\\" for an item sequence composed of aisle/bin combinations of \\\"0401\\\" and \\\"1228\\\" has a sequence distance of |1228 - 401| = 827\\nboxTypeChoiceStylestringdefault: actualDefines how available boxTypes are selected when a new box must be created to pack additional items.The 'estimated' style uses 'usableSpace' to estimate how quickly each valid boxType will be filled by both weight and volume, and estimated cost is calculated.'actual' attempts real placement of subsequent items in each available boxType and selects the one with the lowest actual cost.'actual' is much slower than 'estimated', but will often return superior cost optimizations.Enum:Array [ 2 ]boxTypeChoiceLookaheadintegerdefault: 0When selecting the next available boxType, we must consider how far to look ahead.Consider we have 8 items of identical dimensions, and two flat rate boxTypes.It is found that Box A can fit 6 items, and costs $12.Box B can fit 4 items, and costs $10.If we consider only the next box, i.e., 'boxTypeChoiceLookahead' set to 0, we would select Box A.It costs $2 per item, whereas Box B is $2.50 per item.Box A is opened, 6 items are placed inside, and now 2 remain.To pack the last 2, Box B would be selected, as 2 items for $10 is $5 per item, and Box A's $12 is $6 per item.Alternatively, if 'boxTypeChoiceLookahead' is set to 1, the boxType that provides the lowest cost per item including the lookahead boxType(s) would be selected.In this case, we find we need 2 of Box B, for $20 total, to fit all 8 items, or $2.50 per item, and would need 1 of Box A and 1 of Box B if Box A is selected first, for $22 total or $2.75 per item.Box B would be used.Please note that 'boxTypeChoiceLookahead', especially when combined with the 'actual' 'boxTypeChoiceStyle' can have significant performance impacts.0 is recommended for real-time use cases.boxTypeChoiceLookbackintegerdefault: -1Control the ability for partially-filled boxes to allow packing of later-sorted items.A value of null or -1 means unlimited lookback is permitted, i.e., every box can be used to pack any allowable item that fits regardless of its pack sequence, and all boxes will remain \\\"opened\\\" or available for packing until the last item in the pack sequence is attempted.\",\"textTemplate\":\"\",\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"Rl/Mrv9O5V4ikgKkXVfioosRNyPNqxizzUmbla/wGwc=\"}","__type__":"TEXT"},"71130c9b-26af-45ea-9dd5-4fb29365c429":{"__data__":"{\"id_\":\"71130c9b-26af-45ea-9dd5-4fb29365c429\",\"metadata\":{\"url\":\"https://api.paccurate.io/docs\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"5898c864-5de6-48b4-80b6-cb0ef0d0b435\",\"metadata\":{\"url\":\"https://api.paccurate.io/docs\"},\"hash\":\"KrAR2WDxezuk2wBZ0Itd8stm4zuwBn0odL0bApokedk=\"},\"PREVIOUS\":{\"nodeId\":\"dc7a1862-2276-4bf2-9715-72b341e405b7\",\"metadata\":{\"url\":\"https://api.paccurate.io/docs\"},\"hash\":\"qZycwO9AHoHPxPH+42hVpY5Q1iqiSliOVh3SwdvuK48=\"},\"NEXT\":{\"nodeId\":\"0751e6fb-81e3-4bb0-9ad1-51a0786c424b\",\"metadata\":{},\"hash\":\"C0A8xtWWsF2O4/06P2sEvlJKUCVayJR6UHcwroOukrU=\"}},\"text\":\"In this case, we find we need 2 of Box B, for $20 total, to fit all 8 items, or $2.50 per item, and would need 1 of Box A and 1 of Box B if Box A is selected first, for $22 total or $2.75 per item.Box B would be used.Please note that 'boxTypeChoiceLookahead', especially when combined with the 'actual' 'boxTypeChoiceStyle' can have significant performance impacts.0 is recommended for real-time use cases.boxTypeChoiceLookbackintegerdefault: -1Control the ability for partially-filled boxes to allow packing of later-sorted items.A value of null or -1 means unlimited lookback is permitted, i.e., every box can be used to pack any allowable item that fits regardless of its pack sequence, and all boxes will remain \\\"opened\\\" or available for packing until the last item in the pack sequence is attempted.A value of 0 means lookback is not allowed, and as soon as the next item in the pack sequence does not fit into a partially filled box, that box is \\\"closed\\\" or locked and will not permit any additional items (i.e., out-of-sequence items) to be packed in it.boxTypeChoiceGoalstringdefault: lowest-costThe objective to evaluate boxTypeChoices by.'lowest-cost' minimizes price or volume cost of boxTypes selected, 'most-items' maximizes item count per box opened, i.e., fewest total boxes used.Enum:Array [ 2 ]boxesMaxintegerdefault: 0The maximum number of boxes to be used to pack the items in the request, potentially leaving items in 'leftovers' if there is insufficient space, determined by item 'sequence' or selected 'itemSort'.If existing 'boxes' are passed to the pack request, they count towards this total, but will not be excluded, allowing for situations where 'lenBoxes' may be greater than 'boxesMax'.However, no 'boxTypes' will be used to create additional boxes unless doing so would not exceed 'boxesMax'.boxesPerItemSetMaxintegerdefault: 0The maximum number of boxes that a single ItemSet's member items (i.e., all that share the same refId) can be spread across.Any items that do not fit within this number of boxes will be precluded from packing and returned in the leftovers array.The default setting of 0, a negative number, and null are all equivalent and indicate no maximum limit.boxesPerSequenceMaxintegerdefault: 0The maximum number of boxes that a single non-empty sequence's member items (i.e., all that share the same non-empty sequence) can be spread across.Any items that do not fit within this number of boxes will be precluded from packing and returned in the leftovers array.The default setting of 0, a negative number, and null are all equivalent and indicate no maximum limit.itemsPerBoxMaxintegerdefault: 0The maximum quantity of discrete items that a single box can contain.The default setting of 0, a negative number, and null are all equivalent and indicate no maximum limit, optionally overridden by 'boxType' settings.itemSetsPerBoxMaxintegerdefault: 0The maximum quantity of unique 'item.refId' values that a single box can contain.The default setting of 0, a negative number, and null are all equivalent and indicate no maximum limit, optionally overridden by 'boxType' settings.itemsInlineMax[maxLength: 3minLength: 3example: List [ 1, 2, 1 ]Limit the item count that can share a placement on a specific line parallel to the placement axis, e.g., '[1,2,1]' means items can be placed 1 high, 2 wide, and 1 deep within the box.A value of '0' is equivalent to no limit along that axis.Overridden by 'boxType' settings.integer]generatedBoxTypesMaxintegerdefault: 0example: 64The maximum number of generated box sizes to randomly sampled when generating box types.Default of 0 is unlimited, and in some cases may never return without a limit.64 is a sensible value.valueTiebreakerstringdefault: volumeThe tiebreaker to use in the event to box type choices are otherwise completely equal.Default is \\\"volume\\\", alternative is \\\"weight\\\".Enum:Array [ 2 ]timeoutnumberexample: 30Optional timeout for request computation, will be reduced to endpoint maximum if in excess of published timeout.}ResponsesResponse content typeapplication/jsonCodeDescription200Successful pack.Example ValueModelPackResponse{boxes[List of boxes, packed, with their contained items.{...}]titlestringtitle of packing result, when applicable.builtstringbuild timestamp of engine.startedAtstringstart timestamp of pack.\",\"textTemplate\":\"\",\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"vqBELutXOZMu9E6rKypvfsaBryI9EmLjHQTfFi4jZgk=\"}","__type__":"TEXT"},"0751e6fb-81e3-4bb0-9ad1-51a0786c424b":{"__data__":"{\"id_\":\"0751e6fb-81e3-4bb0-9ad1-51a0786c424b\",\"metadata\":{\"url\":\"https://api.paccurate.io/docs\"},\"excludedEmbedMetadataKeys\":[],\"excludedLlmMetadataKeys\":[],\"relationships\":{\"SOURCE\":{\"nodeId\":\"5898c864-5de6-48b4-80b6-cb0ef0d0b435\",\"metadata\":{\"url\":\"https://api.paccurate.io/docs\"},\"hash\":\"KrAR2WDxezuk2wBZ0Itd8stm4zuwBn0odL0bApokedk=\"},\"PREVIOUS\":{\"nodeId\":\"71130c9b-26af-45ea-9dd5-4fb29365c429\",\"metadata\":{\"url\":\"https://api.paccurate.io/docs\"},\"hash\":\"mMpDSgsRC8l5n0++Va1X+J47Xs7Wuop1MGYR7bzaNtM=\"}},\"text\":\"Overridden by 'boxType' settings.integer]generatedBoxTypesMaxintegerdefault: 0example: 64The maximum number of generated box sizes to randomly sampled when generating box types.Default of 0 is unlimited, and in some cases may never return without a limit.64 is a sensible value.valueTiebreakerstringdefault: volumeThe tiebreaker to use in the event to box type choices are otherwise completely equal.Default is \\\"volume\\\", alternative is \\\"weight\\\".Enum:Array [ 2 ]timeoutnumberexample: 30Optional timeout for request computation, will be reduced to endpoint maximum if in excess of published timeout.}ResponsesResponse content typeapplication/jsonCodeDescription200Successful pack.Example ValueModelPackResponse{boxes[List of boxes, packed, with their contained items.{...}]titlestringtitle of packing result, when applicable.builtstringbuild timestamp of engine.startedAtstringstart timestamp of pack.versionstringversion of engine\\nlenBoxesintegercardinality of all packed boxes\\nlenItemsintegertotal sum of quantities of all items\\nlenUnitsintegercardinality of distinct units of items (count of cases, eaches, etc.)\\nlenLeftoversintegercardinality of items unabled to be packed\\ntotalCostintegertotal estimated cost of all packed boxes, when applicable, in cents.totalVolumenumbertotal volume of all boxes returned\\ntotalVolumeNetnumbertotal net (item) volume of all packed (non-leftover) items\\ntotalVolumeUsednumbertotal net volume plus reserved volume from \\\"reservedSpace\\\"\\ntotalVolumeUtilizationnumbertotalVolumeUsed divided by totalVolume\\ntotalWeightnumbertotal gross weight of all packed boxes, including box tare weights and item weights.packTimenumberseconds spent in packing\\nrenderTimenumberseconds spent in rendering and placement instruction creation of packing solution\\ntotalTimenumberseconds spent generating response, total.leftovers[items left over that could not be packed into any available boxes./static/api/1.7.2/swagger.yaml#/definitions/ItemItem{...}]itemSortUsedstringname of item sort algorithm used.itemSortReverseUsedbooleanwhether the item sort was reversed.boxTypeChoiceGoalUsedstringname of box type choice goal used.scriptsstringadditional javascripts for any image loading.stylesstringadditional styles for pack images\\nsvgs[all box SVG images\\nstring]orderIdstringa client-provided string identifier for the order this pack corresponds to.requestIdstringa client-provided string identifier for the pack request being made.images[if PNG imageFormat selected, list of PNG image objects./static/api/1.7.2/swagger.yaml#/definitions/ImageImage{...}]usedKeyStemstringstem of authorization key used, if any.warnings[required: falseany warning messages about non-critical issues arising during the pack.string]requestFingerprintstringa fingerprint corresponding to the request content for identification within Paccurate Manager.responseFingerprintstringa fingerprint corresponding to the response content for identification within Paccurate Manager\\npackUuidstringa unique identifier for this pack transaction, which can be used to directly retrieve the pack via the Paccurate Manager.}400Bad request.Malformed or some other problem occurred processing the request.Example ValueModel/static/api/1.7.2/swagger.yaml#/definitions/ErrorError{message*stringdetailsstringcode*integerminimum: 100maximum: 600}422Invalid input.The request was well-formed, but the parameters were contradictory, invalid, or otherwise somehow unable to be processed.More information will be contained in the error details.Example ValueModel/static/api/1.7.2/swagger.yaml#/definitions/ErrorError{message*stringdetailsstringcode*integerminimum: 100maximum: 600}429Rate limited.Without an API key, only 10 unique requests are allowed per day for testing or demonstration purposes.Note that a randomized pack repeated is only a single unique request.Example ValueModel/static/api/1.7.2/swagger.yaml#/definitions/ErrorError{message*stringdetailsstringcode*integerminimum: 100maximum: 600}500Unexpected error.Example ValueModel/static/api/1.7.2/swagger.yaml#/definitions/ErrorError{message*stringdetailsstringcode*integerminimum: 100maximum: 600}  Models Error Pack BoxProperties BoxType BoxTypeSet BoxTypeGenerator GeneratorAxisList GeneratorAxisRange GeneratorLimit GeneratorPriceComponent Metric Box ItemProperties Item ItemSet DimensionSet ItemMatch Rule Point RateTable Subspace Image\",\"textTemplate\":\"\",\"metadataSeparator\":\"\\n\",\"type\":\"TEXT\",\"hash\":\"ur8ufL42CQt99WdMWLXCjeuCnaa4gLEyUcnfIXIfGtY=\"}","__type__":"TEXT"}},"docstore/metadata":{"5898c864-5de6-48b4-80b6-cb0ef0d0b435":{"docHash":"KrAR2WDxezuk2wBZ0Itd8stm4zuwBn0odL0bApokedk="},"82ff864b-707f-4749-a2de-be88d702f868":{"docHash":"ELkE64/5gjiIe8Ym7WdYqOxt4Gw7GtNWdVBq2zUVWoI=","refDocId":"5898c864-5de6-48b4-80b6-cb0ef0d0b435"},"8a5c2e78-c3c0-44ce-ad92-ecb3903daa69":{"docHash":"FjS6JgdRafHdebjjzmV8OBZWdsfwli2C+zpQGcdMa5c=","refDocId":"5898c864-5de6-48b4-80b6-cb0ef0d0b435"},"f143e5e4-dad1-4e0c-96fc-0169e8281bdb":{"docHash":"x3OK93L8rkpyIQ/r0vpqzwMi+prBeoJMeQdMNqPAp2M=","refDocId":"5898c864-5de6-48b4-80b6-cb0ef0d0b435"},"dc7a1862-2276-4bf2-9715-72b341e405b7":{"docHash":"Rl/Mrv9O5V4ikgKkXVfioosRNyPNqxizzUmbla/wGwc=","refDocId":"5898c864-5de6-48b4-80b6-cb0ef0d0b435"},"71130c9b-26af-45ea-9dd5-4fb29365c429":{"docHash":"vqBELutXOZMu9E6rKypvfsaBryI9EmLjHQTfFi4jZgk=","refDocId":"5898c864-5de6-48b4-80b6-cb0ef0d0b435"},"0751e6fb-81e3-4bb0-9ad1-51a0786c424b":{"docHash":"ur8ufL42CQt99WdMWLXCjeuCnaa4gLEyUcnfIXIfGtY=","refDocId":"5898c864-5de6-48b4-80b6-cb0ef0d0b435"}},"docstore/ref_doc_info":{"5898c864-5de6-48b4-80b6-cb0ef0d0b435":{"nodeIds":["82ff864b-707f-4749-a2de-be88d702f868","8a5c2e78-c3c0-44ce-ad92-ecb3903daa69","f143e5e4-dad1-4e0c-96fc-0169e8281bdb","dc7a1862-2276-4bf2-9715-72b341e405b7","71130c9b-26af-45ea-9dd5-4fb29365c429","0751e6fb-81e3-4bb0-9ad1-51a0786c424b"],"extraInfo":{}}}}